#! /usr/local/Cellar/icarus-verilog/11.0/bin/vvp
:ivl_version "11.0 (stable)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/usr/local/Cellar/icarus-verilog/11.0/lib/ivl/system.vpi";
:vpi_module "/usr/local/Cellar/icarus-verilog/11.0/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/local/Cellar/icarus-verilog/11.0/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/local/Cellar/icarus-verilog/11.0/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/local/Cellar/icarus-verilog/11.0/lib/ivl/va_math.vpi";
S_0x7ffdf36f8150 .scope module, "TestBench" "TestBench" 2 13;
 .timescale -9 -12;
v0x7ffdf4188960_0 .net "aluSrc1", 31 0, L_0x7ffdf41bdff0;  1 drivers
v0x7ffdf4188a10_0 .net "aluSrc2", 31 0, L_0x7ffdf41be090;  1 drivers
v0x7ffdf4188ac0_0 .var "ans_ALU", 33 0;
v0x7ffdf4188b70_0 .var "ans_Shifter", 33 0;
v0x7ffdf4188c20_0 .var "clk", 0 0;
v0x7ffdf4188d00_0 .var/i "i", 31 0;
v0x7ffdf4188db0_0 .var "inp_ALU", 67 0;
v0x7ffdf4188e60_0 .var "inp_Shifter", 67 0;
v0x7ffdf4188f10_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  1 drivers
v0x7ffdf4189020_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  1 drivers
v0x7ffdf41890b0_0 .net "leftRight", 0 0, L_0x7ffdf41c3aa0;  1 drivers
v0x7ffdf4189140 .array "mem_ans_ALU", 3 0, 33 0;
v0x7ffdf41891d0 .array "mem_ans_Shifter", 3 0, 33 0;
v0x7ffdf4189260 .array "mem_inp_ALU", 3 0, 67 0;
v0x7ffdf4189300 .array "mem_inp_Shifter", 3 0, 67 0;
v0x7ffdf41893a0_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  1 drivers
v0x7ffdf4189440_0 .net "overflow", 0 0, L_0x7ffdf41b6ee0;  1 drivers
v0x7ffdf41895d0_0 .net "result_ALU", 31 0, L_0x7ffdf41b7050;  1 drivers
v0x7ffdf4189660_0 .net "result_Shifter", 31 0, L_0x7ffdf41c2b80;  1 drivers
v0x7ffdf41896f0_0 .var/i "score", 31 0;
v0x7ffdf4189780_0 .net "sftSrc", 31 0, L_0x7ffdf41c3c60;  1 drivers
v0x7ffdf4189810_0 .net "shamt", 4 0, L_0x7ffdf41c3b40;  1 drivers
v0x7ffdf41898c0_0 .net "zero", 0 0, L_0x7ffdf41b86c0;  1 drivers
E_0x7ffdf36f7390 .event negedge, v0x7ffdf4188c20_0;
L_0x7ffdf41bdff0 .part v0x7ffdf4188db0_0, 32, 32;
L_0x7ffdf41be090 .part v0x7ffdf4188db0_0, 0, 32;
L_0x7ffdf41c38c0 .part v0x7ffdf4188db0_0, 67, 1;
L_0x7ffdf41c3960 .part v0x7ffdf4188db0_0, 66, 1;
L_0x7ffdf41c3a00 .part v0x7ffdf4188db0_0, 64, 2;
L_0x7ffdf41c3aa0 .part v0x7ffdf4188e60_0, 37, 1;
L_0x7ffdf41c3b40 .part v0x7ffdf4188e60_0, 32, 5;
L_0x7ffdf41c3c60 .part v0x7ffdf4188e60_0, 0, 32;
S_0x7ffdf36f4670 .scope module, "alu" "ALU" 2 28, 3 2 0, S_0x7ffdf36f8150;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 32 "result";
    .port_info 1 /OUTPUT 1 "zero";
    .port_info 2 /OUTPUT 1 "overflow";
    .port_info 3 /INPUT 32 "aluSrc1";
    .port_info 4 /INPUT 32 "aluSrc2";
    .port_info 5 /INPUT 1 "invertA";
    .port_info 6 /INPUT 1 "invertB";
    .port_info 7 /INPUT 2 "operation";
L_0x7ffdf41b7200/0/0 .functor OR 1, L_0x7ffdf41b7810, L_0x7ffdf41b78f0, L_0x7ffdf41b7480, L_0x7ffdf41b7520;
L_0x7ffdf41b7200/0/4 .functor OR 1, L_0x7ffdf41b7c80, L_0x7ffdf41b7d20, L_0x7ffdf41b7a50, L_0x7ffdf41b7b30;
L_0x7ffdf41b7200/0/8 .functor OR 1, L_0x7ffdf41b7bd0, L_0x7ffdf41b8110, L_0x7ffdf41b7ec0, L_0x7ffdf41b7fa0;
L_0x7ffdf41b7200/0/12 .functor OR 1, L_0x7ffdf41b8040, L_0x7ffdf41b8460, L_0x7ffdf41b7dc0, L_0x7ffdf41b81b0;
L_0x7ffdf41b7200/0/16 .functor OR 1, L_0x7ffdf41b8250, L_0x7ffdf41b82f0, L_0x7ffdf41b89e0, L_0x7ffdf41b8a80;
L_0x7ffdf41b7200/0/20 .functor OR 1, L_0x7ffdf41b8740, L_0x7ffdf41b8820, L_0x7ffdf41b88c0, L_0x7ffdf41b8de0;
L_0x7ffdf41b7200/0/24 .functor OR 1, L_0x7ffdf41b8b20, L_0x7ffdf41b8bc0, L_0x7ffdf41b8c60, L_0x7ffdf41b8d40;
L_0x7ffdf41b7200/0/28 .functor OR 1, L_0x7ffdf41b9170, L_0x7ffdf41b9250, L_0x7ffdf41b8540, L_0x7ffdf41b8620;
L_0x7ffdf41b7200/1/0 .functor OR 1, L_0x7ffdf41b7200/0/0, L_0x7ffdf41b7200/0/4, L_0x7ffdf41b7200/0/8, L_0x7ffdf41b7200/0/12;
L_0x7ffdf41b7200/1/4 .functor OR 1, L_0x7ffdf41b7200/0/16, L_0x7ffdf41b7200/0/20, L_0x7ffdf41b7200/0/24, L_0x7ffdf41b7200/0/28;
L_0x7ffdf41b7200 .functor OR 1, L_0x7ffdf41b7200/1/0, L_0x7ffdf41b7200/1/4, C4<0>, C4<0>;
L_0x7ffdf41b86c0 .functor NOT 1, L_0x7ffdf41b7200, C4<0>, C4<0>, C4<0>;
v0x7ffdf4176b30_0 .net *"_ivl_257", 0 0, L_0x7ffdf41b7810;  1 drivers
v0x7ffdf4176bc0_0 .net *"_ivl_259", 0 0, L_0x7ffdf41b78f0;  1 drivers
v0x7ffdf4176c50_0 .net *"_ivl_261", 0 0, L_0x7ffdf41b7480;  1 drivers
v0x7ffdf4176ce0_0 .net *"_ivl_263", 0 0, L_0x7ffdf41b7520;  1 drivers
v0x7ffdf4176d70_0 .net *"_ivl_265", 0 0, L_0x7ffdf41b7c80;  1 drivers
v0x7ffdf4176e60_0 .net *"_ivl_267", 0 0, L_0x7ffdf41b7d20;  1 drivers
v0x7ffdf4176f10_0 .net *"_ivl_269", 0 0, L_0x7ffdf41b7a50;  1 drivers
v0x7ffdf4176fc0_0 .net *"_ivl_271", 0 0, L_0x7ffdf41b7b30;  1 drivers
v0x7ffdf4177070_0 .net *"_ivl_273", 0 0, L_0x7ffdf41b7bd0;  1 drivers
v0x7ffdf4177180_0 .net *"_ivl_275", 0 0, L_0x7ffdf41b8110;  1 drivers
v0x7ffdf4177230_0 .net *"_ivl_277", 0 0, L_0x7ffdf41b7ec0;  1 drivers
v0x7ffdf41772e0_0 .net *"_ivl_279", 0 0, L_0x7ffdf41b7fa0;  1 drivers
v0x7ffdf4177390_0 .net *"_ivl_281", 0 0, L_0x7ffdf41b8040;  1 drivers
v0x7ffdf4177440_0 .net *"_ivl_283", 0 0, L_0x7ffdf41b8460;  1 drivers
v0x7ffdf41774f0_0 .net *"_ivl_285", 0 0, L_0x7ffdf41b7dc0;  1 drivers
v0x7ffdf41775a0_0 .net *"_ivl_287", 0 0, L_0x7ffdf41b81b0;  1 drivers
v0x7ffdf4177650_0 .net *"_ivl_289", 0 0, L_0x7ffdf41b8250;  1 drivers
v0x7ffdf41777e0_0 .net *"_ivl_291", 0 0, L_0x7ffdf41b82f0;  1 drivers
v0x7ffdf4177870_0 .net *"_ivl_293", 0 0, L_0x7ffdf41b89e0;  1 drivers
v0x7ffdf4177920_0 .net *"_ivl_295", 0 0, L_0x7ffdf41b8a80;  1 drivers
v0x7ffdf41779d0_0 .net *"_ivl_297", 0 0, L_0x7ffdf41b8740;  1 drivers
v0x7ffdf4177a80_0 .net *"_ivl_299", 0 0, L_0x7ffdf41b8820;  1 drivers
v0x7ffdf4177b30_0 .net *"_ivl_301", 0 0, L_0x7ffdf41b88c0;  1 drivers
v0x7ffdf4177be0_0 .net *"_ivl_303", 0 0, L_0x7ffdf41b8de0;  1 drivers
v0x7ffdf4177c90_0 .net *"_ivl_305", 0 0, L_0x7ffdf41b8b20;  1 drivers
v0x7ffdf4177d40_0 .net *"_ivl_307", 0 0, L_0x7ffdf41b8bc0;  1 drivers
v0x7ffdf4177df0_0 .net *"_ivl_309", 0 0, L_0x7ffdf41b8c60;  1 drivers
v0x7ffdf4177ea0_0 .net *"_ivl_311", 0 0, L_0x7ffdf41b8d40;  1 drivers
v0x7ffdf4177f50_0 .net *"_ivl_313", 0 0, L_0x7ffdf41b9170;  1 drivers
v0x7ffdf4178000_0 .net *"_ivl_315", 0 0, L_0x7ffdf41b9250;  1 drivers
v0x7ffdf41780b0_0 .net *"_ivl_317", 0 0, L_0x7ffdf41b8540;  1 drivers
v0x7ffdf4178160_0 .net *"_ivl_319", 0 0, L_0x7ffdf41b8620;  1 drivers
v0x7ffdf4178210_0 .net "aluSrc1", 31 0, L_0x7ffdf41bdff0;  alias, 1 drivers
v0x7ffdf4177700_0 .net "aluSrc2", 31 0, L_0x7ffdf41be090;  alias, 1 drivers
v0x7ffdf41784a0_0 .net "carryOut0", 0 0, L_0x7ffdf418a5d0;  1 drivers
v0x7ffdf4178530_0 .net "carryOut1", 0 0, L_0x7ffdf418bd00;  1 drivers
v0x7ffdf4178640_0 .net "carryOut10", 0 0, L_0x7ffdf4198f50;  1 drivers
v0x7ffdf4178750_0 .net "carryOut11", 0 0, L_0x7ffdf419a650;  1 drivers
v0x7ffdf4178860_0 .net "carryOut12", 0 0, L_0x7ffdf419bd70;  1 drivers
v0x7ffdf4178970_0 .net "carryOut13", 0 0, L_0x7ffdf419d480;  1 drivers
v0x7ffdf4178a80_0 .net "carryOut14", 0 0, L_0x7ffdf419eb80;  1 drivers
v0x7ffdf4178b90_0 .net "carryOut15", 0 0, L_0x7ffdf41a04b0;  1 drivers
v0x7ffdf4178ca0_0 .net "carryOut16", 0 0, L_0x7ffdf4193d90;  1 drivers
v0x7ffdf4178db0_0 .net "carryOut17", 0 0, L_0x7ffdf41a23a0;  1 drivers
v0x7ffdf4178ec0_0 .net "carryOut18", 0 0, L_0x7ffdf41a3b50;  1 drivers
v0x7ffdf4178fd0_0 .net "carryOut19", 0 0, L_0x7ffdf41a5270;  1 drivers
v0x7ffdf41790e0_0 .net "carryOut2", 0 0, L_0x7ffdf418d430;  1 drivers
v0x7ffdf41791f0_0 .net "carryOut20", 0 0, L_0x7ffdf41a69a0;  1 drivers
v0x7ffdf4179300_0 .net "carryOut21", 0 0, L_0x7ffdf41a80c0;  1 drivers
v0x7ffdf4179410_0 .net "carryOut22", 0 0, L_0x7ffdf41a97f0;  1 drivers
v0x7ffdf4179520_0 .net "carryOut23", 0 0, L_0x7ffdf41aaf10;  1 drivers
v0x7ffdf4179630_0 .net "carryOut24", 0 0, L_0x7ffdf41ac620;  1 drivers
v0x7ffdf4179740_0 .net "carryOut25", 0 0, L_0x7ffdf41add40;  1 drivers
v0x7ffdf4179850_0 .net "carryOut26", 0 0, L_0x7ffdf41af460;  1 drivers
v0x7ffdf4179960_0 .net "carryOut27", 0 0, L_0x7ffdf41b0b90;  1 drivers
v0x7ffdf4179a70_0 .net "carryOut28", 0 0, L_0x7ffdf41b22b0;  1 drivers
v0x7ffdf4179b80_0 .net "carryOut29", 0 0, L_0x7ffdf41b39e0;  1 drivers
v0x7ffdf4179c90_0 .net "carryOut3", 0 0, L_0x7ffdf418ebc0;  1 drivers
v0x7ffdf4179da0_0 .net "carryOut30", 0 0, L_0x7ffdf41b5100;  1 drivers
v0x7ffdf4179eb0_0 .net "carryOut31", 0 0, L_0x7ffdf41b6420;  1 drivers
v0x7ffdf4179f40_0 .net "carryOut4", 0 0, L_0x7ffdf4190310;  1 drivers
v0x7ffdf417a050_0 .net "carryOut5", 0 0, L_0x7ffdf4191a40;  1 drivers
v0x7ffdf417a160_0 .net "carryOut6", 0 0, L_0x7ffdf4193190;  1 drivers
v0x7ffdf417a270_0 .net "carryOut7", 0 0, L_0x7ffdf41949c0;  1 drivers
v0x7ffdf417a380_0 .net "carryOut8", 0 0, L_0x7ffdf41960e0;  1 drivers
v0x7ffdf4178320_0 .net "carryOut9", 0 0, L_0x7ffdf41977e0;  1 drivers
v0x7ffdf417a410_0 .net "final", 0 0, L_0x7ffdf41b7200;  1 drivers
v0x7ffdf417a4a0_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf417a530_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf417a5c0_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf41493b0_0 .net "overflow", 0 0, L_0x7ffdf41b6ee0;  alias, 1 drivers
v0x7ffdf4149440_0 .net "result", 31 0, L_0x7ffdf41b7050;  alias, 1 drivers
v0x7ffdf41494d0_0 .net "set", 0 0, L_0x7ffdf41b6250;  1 drivers
v0x7ffdf417a650_0 .net "zero", 0 0, L_0x7ffdf41b86c0;  alias, 1 drivers
L_0x7ffdf418b000 .part L_0x7ffdf41bdff0, 0, 1;
L_0x7ffdf418b120 .part L_0x7ffdf41be090, 0, 1;
L_0x7ffdf418c770 .part L_0x7ffdf41bdff0, 1, 1;
L_0x7ffdf418c890 .part L_0x7ffdf41be090, 1, 1;
L_0x7ffdf418dea0 .part L_0x7ffdf41bdff0, 2, 1;
L_0x7ffdf418e040 .part L_0x7ffdf41be090, 2, 1;
L_0x7ffdf418f630 .part L_0x7ffdf41bdff0, 3, 1;
L_0x7ffdf418f750 .part L_0x7ffdf41be090, 3, 1;
L_0x7ffdf4190d80 .part L_0x7ffdf41bdff0, 4, 1;
L_0x7ffdf4190ea0 .part L_0x7ffdf41be090, 4, 1;
L_0x7ffdf41924b0 .part L_0x7ffdf41bdff0, 5, 1;
L_0x7ffdf41925d0 .part L_0x7ffdf41be090, 5, 1;
L_0x7ffdf4193c00 .part L_0x7ffdf41bdff0, 6, 1;
L_0x7ffdf4193e90 .part L_0x7ffdf41be090, 6, 1;
L_0x7ffdf4195430 .part L_0x7ffdf41bdff0, 7, 1;
L_0x7ffdf41955d0 .part L_0x7ffdf41be090, 7, 1;
L_0x7ffdf4196b50 .part L_0x7ffdf41bdff0, 8, 1;
L_0x7ffdf4196d00 .part L_0x7ffdf41be090, 8, 1;
L_0x7ffdf4198250 .part L_0x7ffdf41bdff0, 9, 1;
L_0x7ffdf4198410 .part L_0x7ffdf41be090, 9, 1;
L_0x7ffdf4199980 .part L_0x7ffdf41bdff0, 10, 1;
L_0x7ffdf4198370 .part L_0x7ffdf41be090, 10, 1;
L_0x7ffdf419b0c0 .part L_0x7ffdf41bdff0, 11, 1;
L_0x7ffdf419b2a0 .part L_0x7ffdf41be090, 11, 1;
L_0x7ffdf419c7c0 .part L_0x7ffdf41bdff0, 12, 1;
L_0x7ffdf419c9b0 .part L_0x7ffdf41be090, 12, 1;
L_0x7ffdf419ded0 .part L_0x7ffdf41bdff0, 13, 1;
L_0x7ffdf419e0d0 .part L_0x7ffdf41be090, 13, 1;
L_0x7ffdf419f5f0 .part L_0x7ffdf41bdff0, 14, 1;
L_0x7ffdf419f910 .part L_0x7ffdf41be090, 14, 1;
L_0x7ffdf3709fe0 .part L_0x7ffdf41bdff0, 15, 1;
L_0x7ffdf3706bc0 .part L_0x7ffdf41be090, 15, 1;
L_0x7ffdf41a1590 .part L_0x7ffdf41bdff0, 16, 1;
L_0x7ffdf41a17c0 .part L_0x7ffdf41be090, 16, 1;
L_0x7ffdf41a2e10 .part L_0x7ffdf41bdff0, 17, 1;
L_0x7ffdf41a16b0 .part L_0x7ffdf41be090, 17, 1;
L_0x7ffdf41a45c0 .part L_0x7ffdf41bdff0, 18, 1;
L_0x7ffdf41a2f30 .part L_0x7ffdf41be090, 18, 1;
L_0x7ffdf41a5ce0 .part L_0x7ffdf41bdff0, 19, 1;
L_0x7ffdf41a46e0 .part L_0x7ffdf41be090, 19, 1;
L_0x7ffdf41a7410 .part L_0x7ffdf41bdff0, 20, 1;
L_0x7ffdf41a5e00 .part L_0x7ffdf41be090, 20, 1;
L_0x7ffdf41a8b30 .part L_0x7ffdf41bdff0, 21, 1;
L_0x7ffdf41a7530 .part L_0x7ffdf41be090, 21, 1;
L_0x7ffdf41aa260 .part L_0x7ffdf41bdff0, 22, 1;
L_0x7ffdf41a8c50 .part L_0x7ffdf41be090, 22, 1;
L_0x7ffdf41ab980 .part L_0x7ffdf41bdff0, 23, 1;
L_0x7ffdf41aa380 .part L_0x7ffdf41be090, 23, 1;
L_0x7ffdf41ad090 .part L_0x7ffdf41bdff0, 24, 1;
L_0x7ffdf41abaa0 .part L_0x7ffdf41be090, 24, 1;
L_0x7ffdf41ae7b0 .part L_0x7ffdf41bdff0, 25, 1;
L_0x7ffdf41ad1b0 .part L_0x7ffdf41be090, 25, 1;
L_0x7ffdf41afed0 .part L_0x7ffdf41bdff0, 26, 1;
L_0x7ffdf41ae8d0 .part L_0x7ffdf41be090, 26, 1;
L_0x7ffdf41b1600 .part L_0x7ffdf41bdff0, 27, 1;
L_0x7ffdf41afff0 .part L_0x7ffdf41be090, 27, 1;
L_0x7ffdf41b2d20 .part L_0x7ffdf41bdff0, 28, 1;
L_0x7ffdf41b1720 .part L_0x7ffdf41be090, 28, 1;
L_0x7ffdf41b4450 .part L_0x7ffdf41bdff0, 29, 1;
L_0x7ffdf41b2e40 .part L_0x7ffdf41be090, 29, 1;
L_0x7ffdf41b5b70 .part L_0x7ffdf41bdff0, 30, 1;
L_0x7ffdf41b4570 .part L_0x7ffdf41be090, 30, 1;
LS_0x7ffdf41b7050_0_0 .concat8 [ 1 1 1 1], L_0x7ffdf418aba0, L_0x7ffdf418c310, L_0x7ffdf418da40, L_0x7ffdf418f1d0;
LS_0x7ffdf41b7050_0_4 .concat8 [ 1 1 1 1], L_0x7ffdf4190920, L_0x7ffdf4192050, L_0x7ffdf41937a0, L_0x7ffdf4194fd0;
LS_0x7ffdf41b7050_0_8 .concat8 [ 1 1 1 1], L_0x7ffdf41966f0, L_0x7ffdf4197df0, L_0x7ffdf4199560, L_0x7ffdf419ac60;
LS_0x7ffdf41b7050_0_12 .concat8 [ 1 1 1 1], L_0x7ffdf419c360, L_0x7ffdf419da70, L_0x7ffdf419f190, L_0x7ffdf41a0ac0;
LS_0x7ffdf41b7050_0_16 .concat8 [ 1 1 1 1], L_0x7ffdf41a1160, L_0x7ffdf41a29b0, L_0x7ffdf41a4160, L_0x7ffdf41a5880;
LS_0x7ffdf41b7050_0_20 .concat8 [ 1 1 1 1], L_0x7ffdf41a6fb0, L_0x7ffdf41a86d0, L_0x7ffdf41a9e00, L_0x7ffdf41ab520;
LS_0x7ffdf41b7050_0_24 .concat8 [ 1 1 1 1], L_0x7ffdf41acc30, L_0x7ffdf41ae350, L_0x7ffdf41afa70, L_0x7ffdf41b11a0;
LS_0x7ffdf41b7050_0_28 .concat8 [ 1 1 1 1], L_0x7ffdf41b28c0, L_0x7ffdf41b3ff0, L_0x7ffdf41b5710, L_0x7ffdf41b6a80;
LS_0x7ffdf41b7050_1_0 .concat8 [ 4 4 4 4], LS_0x7ffdf41b7050_0_0, LS_0x7ffdf41b7050_0_4, LS_0x7ffdf41b7050_0_8, LS_0x7ffdf41b7050_0_12;
LS_0x7ffdf41b7050_1_4 .concat8 [ 4 4 4 4], LS_0x7ffdf41b7050_0_16, LS_0x7ffdf41b7050_0_20, LS_0x7ffdf41b7050_0_24, LS_0x7ffdf41b7050_0_28;
L_0x7ffdf41b7050 .concat8 [ 16 16 0 0], LS_0x7ffdf41b7050_1_0, LS_0x7ffdf41b7050_1_4;
L_0x7ffdf419f710 .part L_0x7ffdf41bdff0, 31, 1;
L_0x7ffdf419f830 .part L_0x7ffdf41be090, 31, 1;
L_0x7ffdf41b7810 .part L_0x7ffdf41b7050, 0, 1;
L_0x7ffdf41b78f0 .part L_0x7ffdf41b7050, 1, 1;
L_0x7ffdf41b7480 .part L_0x7ffdf41b7050, 2, 1;
L_0x7ffdf41b7520 .part L_0x7ffdf41b7050, 3, 1;
L_0x7ffdf41b7c80 .part L_0x7ffdf41b7050, 4, 1;
L_0x7ffdf41b7d20 .part L_0x7ffdf41b7050, 5, 1;
L_0x7ffdf41b7a50 .part L_0x7ffdf41b7050, 6, 1;
L_0x7ffdf41b7b30 .part L_0x7ffdf41b7050, 7, 1;
L_0x7ffdf41b7bd0 .part L_0x7ffdf41b7050, 8, 1;
L_0x7ffdf41b8110 .part L_0x7ffdf41b7050, 9, 1;
L_0x7ffdf41b7ec0 .part L_0x7ffdf41b7050, 10, 1;
L_0x7ffdf41b7fa0 .part L_0x7ffdf41b7050, 11, 1;
L_0x7ffdf41b8040 .part L_0x7ffdf41b7050, 12, 1;
L_0x7ffdf41b8460 .part L_0x7ffdf41b7050, 13, 1;
L_0x7ffdf41b7dc0 .part L_0x7ffdf41b7050, 14, 1;
L_0x7ffdf41b81b0 .part L_0x7ffdf41b7050, 15, 1;
L_0x7ffdf41b8250 .part L_0x7ffdf41b7050, 16, 1;
L_0x7ffdf41b82f0 .part L_0x7ffdf41b7050, 17, 1;
L_0x7ffdf41b89e0 .part L_0x7ffdf41b7050, 18, 1;
L_0x7ffdf41b8a80 .part L_0x7ffdf41b7050, 19, 1;
L_0x7ffdf41b8740 .part L_0x7ffdf41b7050, 20, 1;
L_0x7ffdf41b8820 .part L_0x7ffdf41b7050, 21, 1;
L_0x7ffdf41b88c0 .part L_0x7ffdf41b7050, 22, 1;
L_0x7ffdf41b8de0 .part L_0x7ffdf41b7050, 23, 1;
L_0x7ffdf41b8b20 .part L_0x7ffdf41b7050, 24, 1;
L_0x7ffdf41b8bc0 .part L_0x7ffdf41b7050, 25, 1;
L_0x7ffdf41b8c60 .part L_0x7ffdf41b7050, 26, 1;
L_0x7ffdf41b8d40 .part L_0x7ffdf41b7050, 27, 1;
L_0x7ffdf41b9170 .part L_0x7ffdf41b7050, 28, 1;
L_0x7ffdf41b9250 .part L_0x7ffdf41b7050, 29, 1;
L_0x7ffdf41b8540 .part L_0x7ffdf41b7050, 30, 1;
L_0x7ffdf41b8620 .part L_0x7ffdf41b7050, 31, 1;
S_0x7ffdf36ff280 .scope module, "ALU_0" "ALU_1bit" 3 15, 4 38 0, S_0x7ffdf36f4670;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "result";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "a";
    .port_info 3 /INPUT 1 "b";
    .port_info 4 /INPUT 1 "invertA";
    .port_info 5 /INPUT 1 "invertB";
    .port_info 6 /INPUT 2 "operation";
    .port_info 7 /INPUT 1 "carryIn";
    .port_info 8 /INPUT 1 "less";
L_0x7ffdf4189970 .functor NOT 1, L_0x7ffdf418b000, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4189a60 .functor NOT 1, L_0x7ffdf418b120, C4<0>, C4<0>, C4<0>;
L_0x7ffdf418a130 .functor AND 1, L_0x7ffdf4189d20, L_0x7ffdf418a020, C4<1>, C4<1>;
L_0x7ffdf418a2e0 .functor OR 1, L_0x7ffdf4189d20, L_0x7ffdf418a020, C4<0>, C4<0>;
v0x7ffdf4118970_0 .net "a", 0 0, L_0x7ffdf418b000;  1 drivers
v0x7ffdf4118a30_0 .net "and_ab", 0 0, L_0x7ffdf418a130;  1 drivers
v0x7ffdf4118ac0_0 .net "b", 0 0, L_0x7ffdf418b120;  1 drivers
v0x7ffdf4118b70_0 .net "carryIn", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf4118c40_0 .net "carryOut", 0 0, L_0x7ffdf418a5d0;  alias, 1 drivers
v0x7ffdf4118d10_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf4118da0_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf4118e30_0 .net "invert_a", 0 0, L_0x7ffdf4189970;  1 drivers
v0x7ffdf4118ee0_0 .net "invert_b", 0 0, L_0x7ffdf4189a60;  1 drivers
v0x7ffdf4119010_0 .net "less", 0 0, L_0x7ffdf41b6250;  alias, 1 drivers
v0x7ffdf41190a0_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf4119130_0 .net "or_ab", 0 0, L_0x7ffdf418a2e0;  1 drivers
v0x7ffdf41191c0_0 .net "result", 0 0, L_0x7ffdf418aba0;  1 drivers
v0x7ffdf4119270_0 .net "select_a", 0 0, L_0x7ffdf4189d20;  1 drivers
v0x7ffdf4119340_0 .net "select_b", 0 0, L_0x7ffdf418a020;  1 drivers
v0x7ffdf4119410_0 .net "sum_ans", 0 0, L_0x7ffdf418a3c0;  1 drivers
L_0x7ffdf418adc0 .part L_0x7ffdf41c3a00, 0, 1;
L_0x7ffdf418aee0 .part L_0x7ffdf41c3a00, 1, 1;
S_0x7ffdf36fe3e0 .scope module, "adder" "Full_adder" 4 63, 5 1 0, S_0x7ffdf36ff280;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "carryIn";
    .port_info 3 /INPUT 1 "input1";
    .port_info 4 /INPUT 1 "input2";
L_0x7ffdf418a350 .functor XOR 1, L_0x7ffdf4189d20, L_0x7ffdf418a020, C4<0>, C4<0>;
L_0x7ffdf418a3c0 .functor XOR 1, L_0x7ffdf418a350, L_0x7ffdf41c3960, C4<0>, C4<0>;
L_0x7ffdf418a470 .functor AND 1, L_0x7ffdf4189d20, L_0x7ffdf418a020, C4<1>, C4<1>;
L_0x7ffdf418a520 .functor AND 1, L_0x7ffdf418a350, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf418a5d0 .functor OR 1, L_0x7ffdf418a470, L_0x7ffdf418a520, C4<0>, C4<0>;
v0x7ffdf36d5470_0 .net "carryIn", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf4116a60_0 .net "carryOut", 0 0, L_0x7ffdf418a5d0;  alias, 1 drivers
v0x7ffdf4116b00_0 .net "input1", 0 0, L_0x7ffdf4189d20;  alias, 1 drivers
v0x7ffdf4116b90_0 .net "input2", 0 0, L_0x7ffdf418a020;  alias, 1 drivers
v0x7ffdf4116c30_0 .net "sum", 0 0, L_0x7ffdf418a3c0;  alias, 1 drivers
v0x7ffdf4116d10_0 .net "w1", 0 0, L_0x7ffdf418a350;  1 drivers
v0x7ffdf4116db0_0 .net "w2", 0 0, L_0x7ffdf418a470;  1 drivers
v0x7ffdf4116e50_0 .net "w3", 0 0, L_0x7ffdf418a520;  1 drivers
S_0x7ffdf4116f70 .scope module, "select_A" "MUX_2_1" 4 57, 4 1 0, S_0x7ffdf36ff280;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf4189b50 .functor NOT 1, L_0x7ffdf41c38c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4189bc0 .functor AND 1, L_0x7ffdf418b000, L_0x7ffdf4189b50, C4<1>, C4<1>;
L_0x7ffdf4189c70 .functor AND 1, L_0x7ffdf4189970, L_0x7ffdf41c38c0, C4<1>, C4<1>;
L_0x7ffdf4189d20 .functor OR 1, L_0x7ffdf4189bc0, L_0x7ffdf4189c70, C4<0>, C4<0>;
v0x7ffdf4117190_0 .net "and_a", 0 0, L_0x7ffdf4189bc0;  1 drivers
v0x7ffdf4117220_0 .net "and_b", 0 0, L_0x7ffdf4189c70;  1 drivers
v0x7ffdf41172b0_0 .net "input_a", 0 0, L_0x7ffdf418b000;  alias, 1 drivers
v0x7ffdf4117360_0 .net "input_b", 0 0, L_0x7ffdf4189970;  alias, 1 drivers
v0x7ffdf4117400_0 .net "invert_sel", 0 0, L_0x7ffdf4189b50;  1 drivers
v0x7ffdf41174e0_0 .net "output_c", 0 0, L_0x7ffdf4189d20;  alias, 1 drivers
v0x7ffdf4117570_0 .net "sel", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
S_0x7ffdf4117660 .scope module, "select_B" "MUX_2_1" 4 58, 4 1 0, S_0x7ffdf36ff280;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf4189e30 .functor NOT 1, L_0x7ffdf41c3960, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4189ea0 .functor AND 1, L_0x7ffdf418b120, L_0x7ffdf4189e30, C4<1>, C4<1>;
L_0x7ffdf4189f70 .functor AND 1, L_0x7ffdf4189a60, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf418a020 .functor OR 1, L_0x7ffdf4189ea0, L_0x7ffdf4189f70, C4<0>, C4<0>;
v0x7ffdf41178a0_0 .net "and_a", 0 0, L_0x7ffdf4189ea0;  1 drivers
v0x7ffdf4117940_0 .net "and_b", 0 0, L_0x7ffdf4189f70;  1 drivers
v0x7ffdf41179e0_0 .net "input_a", 0 0, L_0x7ffdf418b120;  alias, 1 drivers
v0x7ffdf4117a90_0 .net "input_b", 0 0, L_0x7ffdf4189a60;  alias, 1 drivers
v0x7ffdf4117b30_0 .net "invert_sel", 0 0, L_0x7ffdf4189e30;  1 drivers
v0x7ffdf4117c10_0 .net "output_c", 0 0, L_0x7ffdf418a020;  alias, 1 drivers
v0x7ffdf4117ca0_0 .net "sel", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
S_0x7ffdf4117d90 .scope module, "select_F" "MUX_4_1" 4 64, 4 15 0, S_0x7ffdf36ff280;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /INPUT 1 "input_c";
    .port_info 3 /INPUT 1 "input_d";
    .port_info 4 /OUTPUT 1 "output_e";
    .port_info 5 /INPUT 1 "sel_0";
    .port_info 6 /INPUT 1 "sel_1";
L_0x7ffdf418a710 .functor NOT 1, L_0x7ffdf418adc0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf418a780 .functor NOT 1, L_0x7ffdf418aee0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf418a810 .functor AND 1, L_0x7ffdf418a130, L_0x7ffdf418a710, L_0x7ffdf418a780, C4<1>;
L_0x7ffdf418a940 .functor AND 1, L_0x7ffdf418a2e0, L_0x7ffdf418adc0, L_0x7ffdf418a780, C4<1>;
L_0x7ffdf418aa10 .functor AND 1, L_0x7ffdf418a3c0, L_0x7ffdf418a710, L_0x7ffdf418aee0, C4<1>;
L_0x7ffdf418ab30 .functor AND 1, L_0x7ffdf41b6250, L_0x7ffdf418adc0, L_0x7ffdf418aee0, C4<1>;
L_0x7ffdf418aba0 .functor OR 1, L_0x7ffdf418a810, L_0x7ffdf418a940, L_0x7ffdf418aa10, L_0x7ffdf418ab30;
v0x7ffdf4118040_0 .net "and_a", 0 0, L_0x7ffdf418a810;  1 drivers
v0x7ffdf41180f0_0 .net "and_b", 0 0, L_0x7ffdf418a940;  1 drivers
v0x7ffdf4118190_0 .net "and_c", 0 0, L_0x7ffdf418aa10;  1 drivers
v0x7ffdf4118220_0 .net "and_d", 0 0, L_0x7ffdf418ab30;  1 drivers
v0x7ffdf41182c0_0 .net "input_a", 0 0, L_0x7ffdf418a130;  alias, 1 drivers
v0x7ffdf41183a0_0 .net "input_b", 0 0, L_0x7ffdf418a2e0;  alias, 1 drivers
v0x7ffdf4118440_0 .net "input_c", 0 0, L_0x7ffdf418a3c0;  alias, 1 drivers
v0x7ffdf41184d0_0 .net "input_d", 0 0, L_0x7ffdf41b6250;  alias, 1 drivers
v0x7ffdf4118560_0 .net "output_e", 0 0, L_0x7ffdf418aba0;  alias, 1 drivers
v0x7ffdf4118680_0 .net "sel_0", 0 0, L_0x7ffdf418adc0;  1 drivers
v0x7ffdf4118720_0 .net "sel_0_invert", 0 0, L_0x7ffdf418a710;  1 drivers
v0x7ffdf41187c0_0 .net "sel_1", 0 0, L_0x7ffdf418aee0;  1 drivers
v0x7ffdf4118860_0 .net "sel_1_invert", 0 0, L_0x7ffdf418a780;  1 drivers
S_0x7ffdf4119530 .scope module, "ALU_1" "ALU_1bit" 3 16, 4 38 0, S_0x7ffdf36f4670;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "result";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "a";
    .port_info 3 /INPUT 1 "b";
    .port_info 4 /INPUT 1 "invertA";
    .port_info 5 /INPUT 1 "invertB";
    .port_info 6 /INPUT 2 "operation";
    .port_info 7 /INPUT 1 "carryIn";
    .port_info 8 /INPUT 1 "less";
L_0x7ffdf418b240 .functor NOT 1, L_0x7ffdf418c770, C4<0>, C4<0>, C4<0>;
L_0x7ffdf418b2b0 .functor NOT 1, L_0x7ffdf418c890, C4<0>, C4<0>, C4<0>;
L_0x7ffdf418b8a0 .functor AND 1, L_0x7ffdf418b530, L_0x7ffdf418b7b0, C4<1>, C4<1>;
L_0x7ffdf418ba50 .functor OR 1, L_0x7ffdf418b530, L_0x7ffdf418b7b0, C4<0>, C4<0>;
v0x7ffdf411ba20_0 .net "a", 0 0, L_0x7ffdf418c770;  1 drivers
v0x7ffdf411bae0_0 .net "and_ab", 0 0, L_0x7ffdf418b8a0;  1 drivers
v0x7ffdf411bb70_0 .net "b", 0 0, L_0x7ffdf418c890;  1 drivers
v0x7ffdf411bc20_0 .net "carryIn", 0 0, L_0x7ffdf418a5d0;  alias, 1 drivers
v0x7ffdf411bcb0_0 .net "carryOut", 0 0, L_0x7ffdf418bd00;  alias, 1 drivers
v0x7ffdf411bd80_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf411be10_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf411bea0_0 .net "invert_a", 0 0, L_0x7ffdf418b240;  1 drivers
v0x7ffdf411bf50_0 .net "invert_b", 0 0, L_0x7ffdf418b2b0;  1 drivers
L_0x7ffdf3563008 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7ffdf411c080_0 .net "less", 0 0, L_0x7ffdf3563008;  1 drivers
v0x7ffdf411c110_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf411c1a0_0 .net "or_ab", 0 0, L_0x7ffdf418ba50;  1 drivers
v0x7ffdf411c250_0 .net "result", 0 0, L_0x7ffdf418c310;  1 drivers
v0x7ffdf411c300_0 .net "select_a", 0 0, L_0x7ffdf418b530;  1 drivers
v0x7ffdf411c3d0_0 .net "select_b", 0 0, L_0x7ffdf418b7b0;  1 drivers
v0x7ffdf411c4a0_0 .net "sum_ans", 0 0, L_0x7ffdf418bb30;  1 drivers
L_0x7ffdf418c530 .part L_0x7ffdf41c3a00, 0, 1;
L_0x7ffdf418c650 .part L_0x7ffdf41c3a00, 1, 1;
S_0x7ffdf41197d0 .scope module, "adder" "Full_adder" 4 63, 5 1 0, S_0x7ffdf4119530;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "carryIn";
    .port_info 3 /INPUT 1 "input1";
    .port_info 4 /INPUT 1 "input2";
L_0x7ffdf418bac0 .functor XOR 1, L_0x7ffdf418b530, L_0x7ffdf418b7b0, C4<0>, C4<0>;
L_0x7ffdf418bb30 .functor XOR 1, L_0x7ffdf418bac0, L_0x7ffdf418a5d0, C4<0>, C4<0>;
L_0x7ffdf418bba0 .functor AND 1, L_0x7ffdf418b530, L_0x7ffdf418b7b0, C4<1>, C4<1>;
L_0x7ffdf418bc50 .functor AND 1, L_0x7ffdf418bac0, L_0x7ffdf418a5d0, C4<1>, C4<1>;
L_0x7ffdf418bd00 .functor OR 1, L_0x7ffdf418bba0, L_0x7ffdf418bc50, C4<0>, C4<0>;
v0x7ffdf4119a40_0 .net "carryIn", 0 0, L_0x7ffdf418a5d0;  alias, 1 drivers
v0x7ffdf4119b10_0 .net "carryOut", 0 0, L_0x7ffdf418bd00;  alias, 1 drivers
v0x7ffdf4119ba0_0 .net "input1", 0 0, L_0x7ffdf418b530;  alias, 1 drivers
v0x7ffdf4119c30_0 .net "input2", 0 0, L_0x7ffdf418b7b0;  alias, 1 drivers
v0x7ffdf4119cc0_0 .net "sum", 0 0, L_0x7ffdf418bb30;  alias, 1 drivers
v0x7ffdf4119d90_0 .net "w1", 0 0, L_0x7ffdf418bac0;  1 drivers
v0x7ffdf4119e20_0 .net "w2", 0 0, L_0x7ffdf418bba0;  1 drivers
v0x7ffdf4119ec0_0 .net "w3", 0 0, L_0x7ffdf418bc50;  1 drivers
S_0x7ffdf4119fe0 .scope module, "select_A" "MUX_2_1" 4 57, 4 1 0, S_0x7ffdf4119530;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf418b3a0 .functor NOT 1, L_0x7ffdf41c38c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf418b410 .functor AND 1, L_0x7ffdf418c770, L_0x7ffdf418b3a0, C4<1>, C4<1>;
L_0x7ffdf418b4c0 .functor AND 1, L_0x7ffdf418b240, L_0x7ffdf41c38c0, C4<1>, C4<1>;
L_0x7ffdf418b530 .functor OR 1, L_0x7ffdf418b410, L_0x7ffdf418b4c0, C4<0>, C4<0>;
v0x7ffdf411a200_0 .net "and_a", 0 0, L_0x7ffdf418b410;  1 drivers
v0x7ffdf411a290_0 .net "and_b", 0 0, L_0x7ffdf418b4c0;  1 drivers
v0x7ffdf411a320_0 .net "input_a", 0 0, L_0x7ffdf418c770;  alias, 1 drivers
v0x7ffdf411a3d0_0 .net "input_b", 0 0, L_0x7ffdf418b240;  alias, 1 drivers
v0x7ffdf411a470_0 .net "invert_sel", 0 0, L_0x7ffdf418b3a0;  1 drivers
v0x7ffdf411a550_0 .net "output_c", 0 0, L_0x7ffdf418b530;  alias, 1 drivers
v0x7ffdf411a5e0_0 .net "sel", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
S_0x7ffdf411a6e0 .scope module, "select_B" "MUX_2_1" 4 58, 4 1 0, S_0x7ffdf4119530;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf418b620 .functor NOT 1, L_0x7ffdf41c3960, C4<0>, C4<0>, C4<0>;
L_0x7ffdf418b690 .functor AND 1, L_0x7ffdf418c890, L_0x7ffdf418b620, C4<1>, C4<1>;
L_0x7ffdf418b740 .functor AND 1, L_0x7ffdf418b2b0, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf418b7b0 .functor OR 1, L_0x7ffdf418b690, L_0x7ffdf418b740, C4<0>, C4<0>;
v0x7ffdf411a920_0 .net "and_a", 0 0, L_0x7ffdf418b690;  1 drivers
v0x7ffdf411a9c0_0 .net "and_b", 0 0, L_0x7ffdf418b740;  1 drivers
v0x7ffdf411aa60_0 .net "input_a", 0 0, L_0x7ffdf418c890;  alias, 1 drivers
v0x7ffdf411ab10_0 .net "input_b", 0 0, L_0x7ffdf418b2b0;  alias, 1 drivers
v0x7ffdf411abb0_0 .net "invert_sel", 0 0, L_0x7ffdf418b620;  1 drivers
v0x7ffdf411ac90_0 .net "output_c", 0 0, L_0x7ffdf418b7b0;  alias, 1 drivers
v0x7ffdf411ad20_0 .net "sel", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
S_0x7ffdf411ae80 .scope module, "select_F" "MUX_4_1" 4 64, 4 15 0, S_0x7ffdf4119530;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /INPUT 1 "input_c";
    .port_info 3 /INPUT 1 "input_d";
    .port_info 4 /OUTPUT 1 "output_e";
    .port_info 5 /INPUT 1 "sel_0";
    .port_info 6 /INPUT 1 "sel_1";
L_0x7ffdf418be40 .functor NOT 1, L_0x7ffdf418c530, C4<0>, C4<0>, C4<0>;
L_0x7ffdf418beb0 .functor NOT 1, L_0x7ffdf418c650, C4<0>, C4<0>, C4<0>;
L_0x7ffdf418bf40 .functor AND 1, L_0x7ffdf418b8a0, L_0x7ffdf418be40, L_0x7ffdf418beb0, C4<1>;
L_0x7ffdf418c070 .functor AND 1, L_0x7ffdf418ba50, L_0x7ffdf418c530, L_0x7ffdf418beb0, C4<1>;
L_0x7ffdf418c140 .functor AND 1, L_0x7ffdf418bb30, L_0x7ffdf418be40, L_0x7ffdf418c650, C4<1>;
L_0x7ffdf418c260 .functor AND 1, L_0x7ffdf3563008, L_0x7ffdf418c530, L_0x7ffdf418c650, C4<1>;
L_0x7ffdf418c310 .functor OR 1, L_0x7ffdf418bf40, L_0x7ffdf418c070, L_0x7ffdf418c140, L_0x7ffdf418c260;
v0x7ffdf411b0f0_0 .net "and_a", 0 0, L_0x7ffdf418bf40;  1 drivers
v0x7ffdf411b1a0_0 .net "and_b", 0 0, L_0x7ffdf418c070;  1 drivers
v0x7ffdf411b240_0 .net "and_c", 0 0, L_0x7ffdf418c140;  1 drivers
v0x7ffdf411b2d0_0 .net "and_d", 0 0, L_0x7ffdf418c260;  1 drivers
v0x7ffdf411b370_0 .net "input_a", 0 0, L_0x7ffdf418b8a0;  alias, 1 drivers
v0x7ffdf411b450_0 .net "input_b", 0 0, L_0x7ffdf418ba50;  alias, 1 drivers
v0x7ffdf411b4f0_0 .net "input_c", 0 0, L_0x7ffdf418bb30;  alias, 1 drivers
v0x7ffdf411b580_0 .net "input_d", 0 0, L_0x7ffdf3563008;  alias, 1 drivers
v0x7ffdf411b610_0 .net "output_e", 0 0, L_0x7ffdf418c310;  alias, 1 drivers
v0x7ffdf411b730_0 .net "sel_0", 0 0, L_0x7ffdf418c530;  1 drivers
v0x7ffdf411b7d0_0 .net "sel_0_invert", 0 0, L_0x7ffdf418be40;  1 drivers
v0x7ffdf411b870_0 .net "sel_1", 0 0, L_0x7ffdf418c650;  1 drivers
v0x7ffdf411b910_0 .net "sel_1_invert", 0 0, L_0x7ffdf418beb0;  1 drivers
S_0x7ffdf411c5c0 .scope module, "ALU_10" "ALU_1bit" 3 25, 4 38 0, S_0x7ffdf36f4670;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "result";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "a";
    .port_info 3 /INPUT 1 "b";
    .port_info 4 /INPUT 1 "invertA";
    .port_info 5 /INPUT 1 "invertB";
    .port_info 6 /INPUT 2 "operation";
    .port_info 7 /INPUT 1 "carryIn";
    .port_info 8 /INPUT 1 "less";
L_0x7ffdf4198530 .functor NOT 1, L_0x7ffdf4199980, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41985a0 .functor NOT 1, L_0x7ffdf4198370, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4198ad0 .functor AND 1, L_0x7ffdf4198760, L_0x7ffdf41989e0, C4<1>, C4<1>;
L_0x7ffdf4198c80 .functor OR 1, L_0x7ffdf4198760, L_0x7ffdf41989e0, C4<0>, C4<0>;
v0x7ffdf411ea80_0 .net "a", 0 0, L_0x7ffdf4199980;  1 drivers
v0x7ffdf411eb40_0 .net "and_ab", 0 0, L_0x7ffdf4198ad0;  1 drivers
v0x7ffdf411ebd0_0 .net "b", 0 0, L_0x7ffdf4198370;  1 drivers
v0x7ffdf411ec80_0 .net "carryIn", 0 0, L_0x7ffdf41977e0;  alias, 1 drivers
v0x7ffdf411ed30_0 .net "carryOut", 0 0, L_0x7ffdf4198f50;  alias, 1 drivers
v0x7ffdf411ee00_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf411ee90_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf411ef20_0 .net "invert_a", 0 0, L_0x7ffdf4198530;  1 drivers
v0x7ffdf411efd0_0 .net "invert_b", 0 0, L_0x7ffdf41985a0;  1 drivers
L_0x7ffdf3563290 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7ffdf411f100_0 .net "less", 0 0, L_0x7ffdf3563290;  1 drivers
v0x7ffdf411f190_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf411f260_0 .net "or_ab", 0 0, L_0x7ffdf4198c80;  1 drivers
v0x7ffdf411f2f0_0 .net "result", 0 0, L_0x7ffdf4199560;  1 drivers
v0x7ffdf411f380_0 .net "select_a", 0 0, L_0x7ffdf4198760;  1 drivers
v0x7ffdf411f450_0 .net "select_b", 0 0, L_0x7ffdf41989e0;  1 drivers
v0x7ffdf411f520_0 .net "sum_ans", 0 0, L_0x7ffdf4198d60;  1 drivers
L_0x7ffdf4199740 .part L_0x7ffdf41c3a00, 0, 1;
L_0x7ffdf4199860 .part L_0x7ffdf41c3a00, 1, 1;
S_0x7ffdf411c860 .scope module, "adder" "Full_adder" 4 63, 5 1 0, S_0x7ffdf411c5c0;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "carryIn";
    .port_info 3 /INPUT 1 "input1";
    .port_info 4 /INPUT 1 "input2";
L_0x7ffdf4198cf0 .functor XOR 1, L_0x7ffdf4198760, L_0x7ffdf41989e0, C4<0>, C4<0>;
L_0x7ffdf4198d60 .functor XOR 1, L_0x7ffdf4198cf0, L_0x7ffdf41977e0, C4<0>, C4<0>;
L_0x7ffdf4198e10 .functor AND 1, L_0x7ffdf4198760, L_0x7ffdf41989e0, C4<1>, C4<1>;
L_0x7ffdf4198ea0 .functor AND 1, L_0x7ffdf4198cf0, L_0x7ffdf41977e0, C4<1>, C4<1>;
L_0x7ffdf4198f50 .functor OR 1, L_0x7ffdf4198e10, L_0x7ffdf4198ea0, C4<0>, C4<0>;
v0x7ffdf411cad0_0 .net "carryIn", 0 0, L_0x7ffdf41977e0;  alias, 1 drivers
v0x7ffdf411cb60_0 .net "carryOut", 0 0, L_0x7ffdf4198f50;  alias, 1 drivers
v0x7ffdf411cbf0_0 .net "input1", 0 0, L_0x7ffdf4198760;  alias, 1 drivers
v0x7ffdf411cc80_0 .net "input2", 0 0, L_0x7ffdf41989e0;  alias, 1 drivers
v0x7ffdf411cd20_0 .net "sum", 0 0, L_0x7ffdf4198d60;  alias, 1 drivers
v0x7ffdf411ce00_0 .net "w1", 0 0, L_0x7ffdf4198cf0;  1 drivers
v0x7ffdf411cea0_0 .net "w2", 0 0, L_0x7ffdf4198e10;  1 drivers
v0x7ffdf411cf40_0 .net "w3", 0 0, L_0x7ffdf4198ea0;  1 drivers
S_0x7ffdf411d060 .scope module, "select_A" "MUX_2_1" 4 57, 4 1 0, S_0x7ffdf411c5c0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf4198610 .functor NOT 1, L_0x7ffdf41c38c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4198680 .functor AND 1, L_0x7ffdf4199980, L_0x7ffdf4198610, C4<1>, C4<1>;
L_0x7ffdf41986f0 .functor AND 1, L_0x7ffdf4198530, L_0x7ffdf41c38c0, C4<1>, C4<1>;
L_0x7ffdf4198760 .functor OR 1, L_0x7ffdf4198680, L_0x7ffdf41986f0, C4<0>, C4<0>;
v0x7ffdf411d280_0 .net "and_a", 0 0, L_0x7ffdf4198680;  1 drivers
v0x7ffdf411d310_0 .net "and_b", 0 0, L_0x7ffdf41986f0;  1 drivers
v0x7ffdf411d3a0_0 .net "input_a", 0 0, L_0x7ffdf4199980;  alias, 1 drivers
v0x7ffdf411d450_0 .net "input_b", 0 0, L_0x7ffdf4198530;  alias, 1 drivers
v0x7ffdf411d4f0_0 .net "invert_sel", 0 0, L_0x7ffdf4198610;  1 drivers
v0x7ffdf411d5d0_0 .net "output_c", 0 0, L_0x7ffdf4198760;  alias, 1 drivers
v0x7ffdf411d660_0 .net "sel", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
S_0x7ffdf411d7c0 .scope module, "select_B" "MUX_2_1" 4 58, 4 1 0, S_0x7ffdf411c5c0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf4198850 .functor NOT 1, L_0x7ffdf41c3960, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41988c0 .functor AND 1, L_0x7ffdf4198370, L_0x7ffdf4198850, C4<1>, C4<1>;
L_0x7ffdf4198970 .functor AND 1, L_0x7ffdf41985a0, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf41989e0 .functor OR 1, L_0x7ffdf41988c0, L_0x7ffdf4198970, C4<0>, C4<0>;
v0x7ffdf411d9e0_0 .net "and_a", 0 0, L_0x7ffdf41988c0;  1 drivers
v0x7ffdf411da70_0 .net "and_b", 0 0, L_0x7ffdf4198970;  1 drivers
v0x7ffdf411db00_0 .net "input_a", 0 0, L_0x7ffdf4198370;  alias, 1 drivers
v0x7ffdf411dbb0_0 .net "input_b", 0 0, L_0x7ffdf41985a0;  alias, 1 drivers
v0x7ffdf411dc50_0 .net "invert_sel", 0 0, L_0x7ffdf4198850;  1 drivers
v0x7ffdf411dd30_0 .net "output_c", 0 0, L_0x7ffdf41989e0;  alias, 1 drivers
v0x7ffdf411ddc0_0 .net "sel", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
S_0x7ffdf411dea0 .scope module, "select_F" "MUX_4_1" 4 64, 4 15 0, S_0x7ffdf411c5c0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /INPUT 1 "input_c";
    .port_info 3 /INPUT 1 "input_d";
    .port_info 4 /OUTPUT 1 "output_e";
    .port_info 5 /INPUT 1 "sel_0";
    .port_info 6 /INPUT 1 "sel_1";
L_0x7ffdf4199090 .functor NOT 1, L_0x7ffdf4199740, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4199100 .functor NOT 1, L_0x7ffdf4199860, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4199190 .functor AND 1, L_0x7ffdf4198ad0, L_0x7ffdf4199090, L_0x7ffdf4199100, C4<1>;
L_0x7ffdf41992c0 .functor AND 1, L_0x7ffdf4198c80, L_0x7ffdf4199740, L_0x7ffdf4199100, C4<1>;
L_0x7ffdf4199390 .functor AND 1, L_0x7ffdf4198d60, L_0x7ffdf4199090, L_0x7ffdf4199860, C4<1>;
L_0x7ffdf41994b0 .functor AND 1, L_0x7ffdf3563290, L_0x7ffdf4199740, L_0x7ffdf4199860, C4<1>;
L_0x7ffdf4199560 .functor OR 1, L_0x7ffdf4199190, L_0x7ffdf41992c0, L_0x7ffdf4199390, L_0x7ffdf41994b0;
v0x7ffdf411e150_0 .net "and_a", 0 0, L_0x7ffdf4199190;  1 drivers
v0x7ffdf411e200_0 .net "and_b", 0 0, L_0x7ffdf41992c0;  1 drivers
v0x7ffdf411e2a0_0 .net "and_c", 0 0, L_0x7ffdf4199390;  1 drivers
v0x7ffdf411e330_0 .net "and_d", 0 0, L_0x7ffdf41994b0;  1 drivers
v0x7ffdf411e3d0_0 .net "input_a", 0 0, L_0x7ffdf4198ad0;  alias, 1 drivers
v0x7ffdf411e4b0_0 .net "input_b", 0 0, L_0x7ffdf4198c80;  alias, 1 drivers
v0x7ffdf411e550_0 .net "input_c", 0 0, L_0x7ffdf4198d60;  alias, 1 drivers
v0x7ffdf411e5e0_0 .net "input_d", 0 0, L_0x7ffdf3563290;  alias, 1 drivers
v0x7ffdf411e670_0 .net "output_e", 0 0, L_0x7ffdf4199560;  alias, 1 drivers
v0x7ffdf411e790_0 .net "sel_0", 0 0, L_0x7ffdf4199740;  1 drivers
v0x7ffdf411e830_0 .net "sel_0_invert", 0 0, L_0x7ffdf4199090;  1 drivers
v0x7ffdf411e8d0_0 .net "sel_1", 0 0, L_0x7ffdf4199860;  1 drivers
v0x7ffdf411e970_0 .net "sel_1_invert", 0 0, L_0x7ffdf4199100;  1 drivers
S_0x7ffdf411f640 .scope module, "ALU_11" "ALU_1bit" 3 26, 4 38 0, S_0x7ffdf36f4670;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "result";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "a";
    .port_info 3 /INPUT 1 "b";
    .port_info 4 /INPUT 1 "invertA";
    .port_info 5 /INPUT 1 "invertB";
    .port_info 6 /INPUT 2 "operation";
    .port_info 7 /INPUT 1 "carryIn";
    .port_info 8 /INPUT 1 "less";
L_0x7ffdf4199bd0 .functor NOT 1, L_0x7ffdf419b0c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4199c40 .functor NOT 1, L_0x7ffdf419b2a0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf419a1d0 .functor AND 1, L_0x7ffdf4199e40, L_0x7ffdf419a0c0, C4<1>, C4<1>;
L_0x7ffdf419a380 .functor OR 1, L_0x7ffdf4199e40, L_0x7ffdf419a0c0, C4<0>, C4<0>;
v0x7ffdf4121b40_0 .net "a", 0 0, L_0x7ffdf419b0c0;  1 drivers
v0x7ffdf4121c00_0 .net "and_ab", 0 0, L_0x7ffdf419a1d0;  1 drivers
v0x7ffdf4121c90_0 .net "b", 0 0, L_0x7ffdf419b2a0;  1 drivers
v0x7ffdf4121d40_0 .net "carryIn", 0 0, L_0x7ffdf4198f50;  alias, 1 drivers
v0x7ffdf4121dd0_0 .net "carryOut", 0 0, L_0x7ffdf419a650;  alias, 1 drivers
v0x7ffdf4121ea0_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf4121f30_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf4121fc0_0 .net "invert_a", 0 0, L_0x7ffdf4199bd0;  1 drivers
v0x7ffdf4122070_0 .net "invert_b", 0 0, L_0x7ffdf4199c40;  1 drivers
L_0x7ffdf35632d8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7ffdf41221a0_0 .net "less", 0 0, L_0x7ffdf35632d8;  1 drivers
v0x7ffdf4122230_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf41222c0_0 .net "or_ab", 0 0, L_0x7ffdf419a380;  1 drivers
v0x7ffdf4122350_0 .net "result", 0 0, L_0x7ffdf419ac60;  1 drivers
v0x7ffdf4122400_0 .net "select_a", 0 0, L_0x7ffdf4199e40;  1 drivers
v0x7ffdf41224d0_0 .net "select_b", 0 0, L_0x7ffdf419a0c0;  1 drivers
v0x7ffdf41225a0_0 .net "sum_ans", 0 0, L_0x7ffdf419a460;  1 drivers
L_0x7ffdf419ae80 .part L_0x7ffdf41c3a00, 0, 1;
L_0x7ffdf419afa0 .part L_0x7ffdf41c3a00, 1, 1;
S_0x7ffdf411f8e0 .scope module, "adder" "Full_adder" 4 63, 5 1 0, S_0x7ffdf411f640;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "carryIn";
    .port_info 3 /INPUT 1 "input1";
    .port_info 4 /INPUT 1 "input2";
L_0x7ffdf419a3f0 .functor XOR 1, L_0x7ffdf4199e40, L_0x7ffdf419a0c0, C4<0>, C4<0>;
L_0x7ffdf419a460 .functor XOR 1, L_0x7ffdf419a3f0, L_0x7ffdf4198f50, C4<0>, C4<0>;
L_0x7ffdf419a510 .functor AND 1, L_0x7ffdf4199e40, L_0x7ffdf419a0c0, C4<1>, C4<1>;
L_0x7ffdf419a5a0 .functor AND 1, L_0x7ffdf419a3f0, L_0x7ffdf4198f50, C4<1>, C4<1>;
L_0x7ffdf419a650 .functor OR 1, L_0x7ffdf419a510, L_0x7ffdf419a5a0, C4<0>, C4<0>;
v0x7ffdf411fb50_0 .net "carryIn", 0 0, L_0x7ffdf4198f50;  alias, 1 drivers
v0x7ffdf411fc20_0 .net "carryOut", 0 0, L_0x7ffdf419a650;  alias, 1 drivers
v0x7ffdf411fcb0_0 .net "input1", 0 0, L_0x7ffdf4199e40;  alias, 1 drivers
v0x7ffdf411fd40_0 .net "input2", 0 0, L_0x7ffdf419a0c0;  alias, 1 drivers
v0x7ffdf411fdd0_0 .net "sum", 0 0, L_0x7ffdf419a460;  alias, 1 drivers
v0x7ffdf411fea0_0 .net "w1", 0 0, L_0x7ffdf419a3f0;  1 drivers
v0x7ffdf411ff30_0 .net "w2", 0 0, L_0x7ffdf419a510;  1 drivers
v0x7ffdf411ffc0_0 .net "w3", 0 0, L_0x7ffdf419a5a0;  1 drivers
S_0x7ffdf41200e0 .scope module, "select_A" "MUX_2_1" 4 57, 4 1 0, S_0x7ffdf411f640;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf4199cb0 .functor NOT 1, L_0x7ffdf41c38c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4199d20 .functor AND 1, L_0x7ffdf419b0c0, L_0x7ffdf4199cb0, C4<1>, C4<1>;
L_0x7ffdf4199dd0 .functor AND 1, L_0x7ffdf4199bd0, L_0x7ffdf41c38c0, C4<1>, C4<1>;
L_0x7ffdf4199e40 .functor OR 1, L_0x7ffdf4199d20, L_0x7ffdf4199dd0, C4<0>, C4<0>;
v0x7ffdf4120300_0 .net "and_a", 0 0, L_0x7ffdf4199d20;  1 drivers
v0x7ffdf4120390_0 .net "and_b", 0 0, L_0x7ffdf4199dd0;  1 drivers
v0x7ffdf4120420_0 .net "input_a", 0 0, L_0x7ffdf419b0c0;  alias, 1 drivers
v0x7ffdf41204d0_0 .net "input_b", 0 0, L_0x7ffdf4199bd0;  alias, 1 drivers
v0x7ffdf4120570_0 .net "invert_sel", 0 0, L_0x7ffdf4199cb0;  1 drivers
v0x7ffdf4120650_0 .net "output_c", 0 0, L_0x7ffdf4199e40;  alias, 1 drivers
v0x7ffdf41206e0_0 .net "sel", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
S_0x7ffdf41207c0 .scope module, "select_B" "MUX_2_1" 4 58, 4 1 0, S_0x7ffdf411f640;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf4199f30 .functor NOT 1, L_0x7ffdf41c3960, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4199fa0 .functor AND 1, L_0x7ffdf419b2a0, L_0x7ffdf4199f30, C4<1>, C4<1>;
L_0x7ffdf419a050 .functor AND 1, L_0x7ffdf4199c40, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf419a0c0 .functor OR 1, L_0x7ffdf4199fa0, L_0x7ffdf419a050, C4<0>, C4<0>;
v0x7ffdf4120a00_0 .net "and_a", 0 0, L_0x7ffdf4199fa0;  1 drivers
v0x7ffdf4120aa0_0 .net "and_b", 0 0, L_0x7ffdf419a050;  1 drivers
v0x7ffdf4120b40_0 .net "input_a", 0 0, L_0x7ffdf419b2a0;  alias, 1 drivers
v0x7ffdf4120bf0_0 .net "input_b", 0 0, L_0x7ffdf4199c40;  alias, 1 drivers
v0x7ffdf4120c90_0 .net "invert_sel", 0 0, L_0x7ffdf4199f30;  1 drivers
v0x7ffdf4120d70_0 .net "output_c", 0 0, L_0x7ffdf419a0c0;  alias, 1 drivers
v0x7ffdf4120e00_0 .net "sel", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
S_0x7ffdf4120fe0 .scope module, "select_F" "MUX_4_1" 4 64, 4 15 0, S_0x7ffdf411f640;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /INPUT 1 "input_c";
    .port_info 3 /INPUT 1 "input_d";
    .port_info 4 /OUTPUT 1 "output_e";
    .port_info 5 /INPUT 1 "sel_0";
    .port_info 6 /INPUT 1 "sel_1";
L_0x7ffdf419a790 .functor NOT 1, L_0x7ffdf419ae80, C4<0>, C4<0>, C4<0>;
L_0x7ffdf419a800 .functor NOT 1, L_0x7ffdf419afa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf419a890 .functor AND 1, L_0x7ffdf419a1d0, L_0x7ffdf419a790, L_0x7ffdf419a800, C4<1>;
L_0x7ffdf419a9c0 .functor AND 1, L_0x7ffdf419a380, L_0x7ffdf419ae80, L_0x7ffdf419a800, C4<1>;
L_0x7ffdf419aa90 .functor AND 1, L_0x7ffdf419a460, L_0x7ffdf419a790, L_0x7ffdf419afa0, C4<1>;
L_0x7ffdf419abb0 .functor AND 1, L_0x7ffdf35632d8, L_0x7ffdf419ae80, L_0x7ffdf419afa0, C4<1>;
L_0x7ffdf419ac60 .functor OR 1, L_0x7ffdf419a890, L_0x7ffdf419a9c0, L_0x7ffdf419aa90, L_0x7ffdf419abb0;
v0x7ffdf4121240_0 .net "and_a", 0 0, L_0x7ffdf419a890;  1 drivers
v0x7ffdf41212d0_0 .net "and_b", 0 0, L_0x7ffdf419a9c0;  1 drivers
v0x7ffdf4121360_0 .net "and_c", 0 0, L_0x7ffdf419aa90;  1 drivers
v0x7ffdf41213f0_0 .net "and_d", 0 0, L_0x7ffdf419abb0;  1 drivers
v0x7ffdf4121490_0 .net "input_a", 0 0, L_0x7ffdf419a1d0;  alias, 1 drivers
v0x7ffdf4121570_0 .net "input_b", 0 0, L_0x7ffdf419a380;  alias, 1 drivers
v0x7ffdf4121610_0 .net "input_c", 0 0, L_0x7ffdf419a460;  alias, 1 drivers
v0x7ffdf41216a0_0 .net "input_d", 0 0, L_0x7ffdf35632d8;  alias, 1 drivers
v0x7ffdf4121730_0 .net "output_e", 0 0, L_0x7ffdf419ac60;  alias, 1 drivers
v0x7ffdf4121850_0 .net "sel_0", 0 0, L_0x7ffdf419ae80;  1 drivers
v0x7ffdf41218f0_0 .net "sel_0_invert", 0 0, L_0x7ffdf419a790;  1 drivers
v0x7ffdf4121990_0 .net "sel_1", 0 0, L_0x7ffdf419afa0;  1 drivers
v0x7ffdf4121a30_0 .net "sel_1_invert", 0 0, L_0x7ffdf419a800;  1 drivers
S_0x7ffdf41226c0 .scope module, "ALU_12" "ALU_1bit" 3 27, 4 38 0, S_0x7ffdf36f4670;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "result";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "a";
    .port_info 3 /INPUT 1 "b";
    .port_info 4 /INPUT 1 "invertA";
    .port_info 5 /INPUT 1 "invertB";
    .port_info 6 /INPUT 2 "operation";
    .port_info 7 /INPUT 1 "carryIn";
    .port_info 8 /INPUT 1 "less";
L_0x7ffdf4199aa0 .functor NOT 1, L_0x7ffdf419c7c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf419b3c0 .functor NOT 1, L_0x7ffdf419c9b0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf419b8f0 .functor AND 1, L_0x7ffdf419b580, L_0x7ffdf419b800, C4<1>, C4<1>;
L_0x7ffdf419baa0 .functor OR 1, L_0x7ffdf419b580, L_0x7ffdf419b800, C4<0>, C4<0>;
v0x7ffdf4124bf0_0 .net "a", 0 0, L_0x7ffdf419c7c0;  1 drivers
v0x7ffdf4124cb0_0 .net "and_ab", 0 0, L_0x7ffdf419b8f0;  1 drivers
v0x7ffdf4124d40_0 .net "b", 0 0, L_0x7ffdf419c9b0;  1 drivers
v0x7ffdf4124df0_0 .net "carryIn", 0 0, L_0x7ffdf419a650;  alias, 1 drivers
v0x7ffdf4124e80_0 .net "carryOut", 0 0, L_0x7ffdf419bd70;  alias, 1 drivers
v0x7ffdf4124f50_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf4124fe0_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf4125070_0 .net "invert_a", 0 0, L_0x7ffdf4199aa0;  1 drivers
v0x7ffdf4125120_0 .net "invert_b", 0 0, L_0x7ffdf419b3c0;  1 drivers
L_0x7ffdf3563320 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7ffdf4125250_0 .net "less", 0 0, L_0x7ffdf3563320;  1 drivers
v0x7ffdf41252e0_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf41253f0_0 .net "or_ab", 0 0, L_0x7ffdf419baa0;  1 drivers
v0x7ffdf4125480_0 .net "result", 0 0, L_0x7ffdf419c360;  1 drivers
v0x7ffdf4125510_0 .net "select_a", 0 0, L_0x7ffdf419b580;  1 drivers
v0x7ffdf41255e0_0 .net "select_b", 0 0, L_0x7ffdf419b800;  1 drivers
v0x7ffdf41256b0_0 .net "sum_ans", 0 0, L_0x7ffdf419bb80;  1 drivers
L_0x7ffdf419c580 .part L_0x7ffdf41c3a00, 0, 1;
L_0x7ffdf419c6a0 .part L_0x7ffdf41c3a00, 1, 1;
S_0x7ffdf41229a0 .scope module, "adder" "Full_adder" 4 63, 5 1 0, S_0x7ffdf41226c0;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "carryIn";
    .port_info 3 /INPUT 1 "input1";
    .port_info 4 /INPUT 1 "input2";
L_0x7ffdf419bb10 .functor XOR 1, L_0x7ffdf419b580, L_0x7ffdf419b800, C4<0>, C4<0>;
L_0x7ffdf419bb80 .functor XOR 1, L_0x7ffdf419bb10, L_0x7ffdf419a650, C4<0>, C4<0>;
L_0x7ffdf419bc30 .functor AND 1, L_0x7ffdf419b580, L_0x7ffdf419b800, C4<1>, C4<1>;
L_0x7ffdf419bcc0 .functor AND 1, L_0x7ffdf419bb10, L_0x7ffdf419a650, C4<1>, C4<1>;
L_0x7ffdf419bd70 .functor OR 1, L_0x7ffdf419bc30, L_0x7ffdf419bcc0, C4<0>, C4<0>;
v0x7ffdf4122c10_0 .net "carryIn", 0 0, L_0x7ffdf419a650;  alias, 1 drivers
v0x7ffdf4122ce0_0 .net "carryOut", 0 0, L_0x7ffdf419bd70;  alias, 1 drivers
v0x7ffdf4122d70_0 .net "input1", 0 0, L_0x7ffdf419b580;  alias, 1 drivers
v0x7ffdf4122e00_0 .net "input2", 0 0, L_0x7ffdf419b800;  alias, 1 drivers
v0x7ffdf4122e90_0 .net "sum", 0 0, L_0x7ffdf419bb80;  alias, 1 drivers
v0x7ffdf4122f60_0 .net "w1", 0 0, L_0x7ffdf419bb10;  1 drivers
v0x7ffdf4122ff0_0 .net "w2", 0 0, L_0x7ffdf419bc30;  1 drivers
v0x7ffdf4123080_0 .net "w3", 0 0, L_0x7ffdf419bcc0;  1 drivers
S_0x7ffdf4123190 .scope module, "select_A" "MUX_2_1" 4 57, 4 1 0, S_0x7ffdf41226c0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf419b430 .functor NOT 1, L_0x7ffdf41c38c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf419b4a0 .functor AND 1, L_0x7ffdf419c7c0, L_0x7ffdf419b430, C4<1>, C4<1>;
L_0x7ffdf419b510 .functor AND 1, L_0x7ffdf4199aa0, L_0x7ffdf41c38c0, C4<1>, C4<1>;
L_0x7ffdf419b580 .functor OR 1, L_0x7ffdf419b4a0, L_0x7ffdf419b510, C4<0>, C4<0>;
v0x7ffdf41233b0_0 .net "and_a", 0 0, L_0x7ffdf419b4a0;  1 drivers
v0x7ffdf4123440_0 .net "and_b", 0 0, L_0x7ffdf419b510;  1 drivers
v0x7ffdf41234d0_0 .net "input_a", 0 0, L_0x7ffdf419c7c0;  alias, 1 drivers
v0x7ffdf4123580_0 .net "input_b", 0 0, L_0x7ffdf4199aa0;  alias, 1 drivers
v0x7ffdf4123620_0 .net "invert_sel", 0 0, L_0x7ffdf419b430;  1 drivers
v0x7ffdf4123700_0 .net "output_c", 0 0, L_0x7ffdf419b580;  alias, 1 drivers
v0x7ffdf4123790_0 .net "sel", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
S_0x7ffdf4123970 .scope module, "select_B" "MUX_2_1" 4 58, 4 1 0, S_0x7ffdf41226c0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf419b670 .functor NOT 1, L_0x7ffdf41c3960, C4<0>, C4<0>, C4<0>;
L_0x7ffdf419b6e0 .functor AND 1, L_0x7ffdf419c9b0, L_0x7ffdf419b670, C4<1>, C4<1>;
L_0x7ffdf419b790 .functor AND 1, L_0x7ffdf419b3c0, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf419b800 .functor OR 1, L_0x7ffdf419b6e0, L_0x7ffdf419b790, C4<0>, C4<0>;
v0x7ffdf4123b40_0 .net "and_a", 0 0, L_0x7ffdf419b6e0;  1 drivers
v0x7ffdf4123bd0_0 .net "and_b", 0 0, L_0x7ffdf419b790;  1 drivers
v0x7ffdf4123c70_0 .net "input_a", 0 0, L_0x7ffdf419c9b0;  alias, 1 drivers
v0x7ffdf4123d20_0 .net "input_b", 0 0, L_0x7ffdf419b3c0;  alias, 1 drivers
v0x7ffdf4123dc0_0 .net "invert_sel", 0 0, L_0x7ffdf419b670;  1 drivers
v0x7ffdf4123ea0_0 .net "output_c", 0 0, L_0x7ffdf419b800;  alias, 1 drivers
v0x7ffdf4123f30_0 .net "sel", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
S_0x7ffdf4124010 .scope module, "select_F" "MUX_4_1" 4 64, 4 15 0, S_0x7ffdf41226c0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /INPUT 1 "input_c";
    .port_info 3 /INPUT 1 "input_d";
    .port_info 4 /OUTPUT 1 "output_e";
    .port_info 5 /INPUT 1 "sel_0";
    .port_info 6 /INPUT 1 "sel_1";
L_0x7ffdf419beb0 .functor NOT 1, L_0x7ffdf419c580, C4<0>, C4<0>, C4<0>;
L_0x7ffdf419bf20 .functor NOT 1, L_0x7ffdf419c6a0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf419bf90 .functor AND 1, L_0x7ffdf419b8f0, L_0x7ffdf419beb0, L_0x7ffdf419bf20, C4<1>;
L_0x7ffdf419c0c0 .functor AND 1, L_0x7ffdf419baa0, L_0x7ffdf419c580, L_0x7ffdf419bf20, C4<1>;
L_0x7ffdf419c190 .functor AND 1, L_0x7ffdf419bb80, L_0x7ffdf419beb0, L_0x7ffdf419c6a0, C4<1>;
L_0x7ffdf419c2b0 .functor AND 1, L_0x7ffdf3563320, L_0x7ffdf419c580, L_0x7ffdf419c6a0, C4<1>;
L_0x7ffdf419c360 .functor OR 1, L_0x7ffdf419bf90, L_0x7ffdf419c0c0, L_0x7ffdf419c190, L_0x7ffdf419c2b0;
v0x7ffdf41242c0_0 .net "and_a", 0 0, L_0x7ffdf419bf90;  1 drivers
v0x7ffdf4124370_0 .net "and_b", 0 0, L_0x7ffdf419c0c0;  1 drivers
v0x7ffdf4124410_0 .net "and_c", 0 0, L_0x7ffdf419c190;  1 drivers
v0x7ffdf41244a0_0 .net "and_d", 0 0, L_0x7ffdf419c2b0;  1 drivers
v0x7ffdf4124540_0 .net "input_a", 0 0, L_0x7ffdf419b8f0;  alias, 1 drivers
v0x7ffdf4124620_0 .net "input_b", 0 0, L_0x7ffdf419baa0;  alias, 1 drivers
v0x7ffdf41246c0_0 .net "input_c", 0 0, L_0x7ffdf419bb80;  alias, 1 drivers
v0x7ffdf4124750_0 .net "input_d", 0 0, L_0x7ffdf3563320;  alias, 1 drivers
v0x7ffdf41247e0_0 .net "output_e", 0 0, L_0x7ffdf419c360;  alias, 1 drivers
v0x7ffdf4124900_0 .net "sel_0", 0 0, L_0x7ffdf419c580;  1 drivers
v0x7ffdf41249a0_0 .net "sel_0_invert", 0 0, L_0x7ffdf419beb0;  1 drivers
v0x7ffdf4124a40_0 .net "sel_1", 0 0, L_0x7ffdf419c6a0;  1 drivers
v0x7ffdf4124ae0_0 .net "sel_1_invert", 0 0, L_0x7ffdf419bf20;  1 drivers
S_0x7ffdf41257d0 .scope module, "ALU_13" "ALU_1bit" 3 28, 4 38 0, S_0x7ffdf36f4670;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "result";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "a";
    .port_info 3 /INPUT 1 "b";
    .port_info 4 /INPUT 1 "invertA";
    .port_info 5 /INPUT 1 "invertB";
    .port_info 6 /INPUT 2 "operation";
    .port_info 7 /INPUT 1 "carryIn";
    .port_info 8 /INPUT 1 "less";
L_0x7ffdf419b1e0 .functor NOT 1, L_0x7ffdf419ded0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf419cad0 .functor NOT 1, L_0x7ffdf419e0d0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf419d000 .functor AND 1, L_0x7ffdf419cc90, L_0x7ffdf419cf10, C4<1>, C4<1>;
L_0x7ffdf419d1b0 .functor OR 1, L_0x7ffdf419cc90, L_0x7ffdf419cf10, C4<0>, C4<0>;
v0x7ffdf4127c40_0 .net "a", 0 0, L_0x7ffdf419ded0;  1 drivers
v0x7ffdf4127d00_0 .net "and_ab", 0 0, L_0x7ffdf419d000;  1 drivers
v0x7ffdf4127d90_0 .net "b", 0 0, L_0x7ffdf419e0d0;  1 drivers
v0x7ffdf4127e40_0 .net "carryIn", 0 0, L_0x7ffdf419bd70;  alias, 1 drivers
v0x7ffdf4127ed0_0 .net "carryOut", 0 0, L_0x7ffdf419d480;  alias, 1 drivers
v0x7ffdf4127fa0_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf4128030_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf41280c0_0 .net "invert_a", 0 0, L_0x7ffdf419b1e0;  1 drivers
v0x7ffdf4128170_0 .net "invert_b", 0 0, L_0x7ffdf419cad0;  1 drivers
L_0x7ffdf3563368 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7ffdf41282a0_0 .net "less", 0 0, L_0x7ffdf3563368;  1 drivers
v0x7ffdf4128330_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf41283c0_0 .net "or_ab", 0 0, L_0x7ffdf419d1b0;  1 drivers
v0x7ffdf4128450_0 .net "result", 0 0, L_0x7ffdf419da70;  1 drivers
v0x7ffdf4128500_0 .net "select_a", 0 0, L_0x7ffdf419cc90;  1 drivers
v0x7ffdf41285d0_0 .net "select_b", 0 0, L_0x7ffdf419cf10;  1 drivers
v0x7ffdf41286a0_0 .net "sum_ans", 0 0, L_0x7ffdf419d290;  1 drivers
L_0x7ffdf419dc90 .part L_0x7ffdf41c3a00, 0, 1;
L_0x7ffdf419ddb0 .part L_0x7ffdf41c3a00, 1, 1;
S_0x7ffdf4125a70 .scope module, "adder" "Full_adder" 4 63, 5 1 0, S_0x7ffdf41257d0;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "carryIn";
    .port_info 3 /INPUT 1 "input1";
    .port_info 4 /INPUT 1 "input2";
L_0x7ffdf419d220 .functor XOR 1, L_0x7ffdf419cc90, L_0x7ffdf419cf10, C4<0>, C4<0>;
L_0x7ffdf419d290 .functor XOR 1, L_0x7ffdf419d220, L_0x7ffdf419bd70, C4<0>, C4<0>;
L_0x7ffdf419d340 .functor AND 1, L_0x7ffdf419cc90, L_0x7ffdf419cf10, C4<1>, C4<1>;
L_0x7ffdf419d3d0 .functor AND 1, L_0x7ffdf419d220, L_0x7ffdf419bd70, C4<1>, C4<1>;
L_0x7ffdf419d480 .functor OR 1, L_0x7ffdf419d340, L_0x7ffdf419d3d0, C4<0>, C4<0>;
v0x7ffdf4125ce0_0 .net "carryIn", 0 0, L_0x7ffdf419bd70;  alias, 1 drivers
v0x7ffdf4125db0_0 .net "carryOut", 0 0, L_0x7ffdf419d480;  alias, 1 drivers
v0x7ffdf4125e40_0 .net "input1", 0 0, L_0x7ffdf419cc90;  alias, 1 drivers
v0x7ffdf4125ed0_0 .net "input2", 0 0, L_0x7ffdf419cf10;  alias, 1 drivers
v0x7ffdf4125f60_0 .net "sum", 0 0, L_0x7ffdf419d290;  alias, 1 drivers
v0x7ffdf4126030_0 .net "w1", 0 0, L_0x7ffdf419d220;  1 drivers
v0x7ffdf41260c0_0 .net "w2", 0 0, L_0x7ffdf419d340;  1 drivers
v0x7ffdf4126150_0 .net "w3", 0 0, L_0x7ffdf419d3d0;  1 drivers
S_0x7ffdf4126260 .scope module, "select_A" "MUX_2_1" 4 57, 4 1 0, S_0x7ffdf41257d0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf419cb40 .functor NOT 1, L_0x7ffdf41c38c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf419cbb0 .functor AND 1, L_0x7ffdf419ded0, L_0x7ffdf419cb40, C4<1>, C4<1>;
L_0x7ffdf419cc20 .functor AND 1, L_0x7ffdf419b1e0, L_0x7ffdf41c38c0, C4<1>, C4<1>;
L_0x7ffdf419cc90 .functor OR 1, L_0x7ffdf419cbb0, L_0x7ffdf419cc20, C4<0>, C4<0>;
v0x7ffdf4126480_0 .net "and_a", 0 0, L_0x7ffdf419cbb0;  1 drivers
v0x7ffdf4126510_0 .net "and_b", 0 0, L_0x7ffdf419cc20;  1 drivers
v0x7ffdf41265a0_0 .net "input_a", 0 0, L_0x7ffdf419ded0;  alias, 1 drivers
v0x7ffdf4126650_0 .net "input_b", 0 0, L_0x7ffdf419b1e0;  alias, 1 drivers
v0x7ffdf41266f0_0 .net "invert_sel", 0 0, L_0x7ffdf419cb40;  1 drivers
v0x7ffdf41267d0_0 .net "output_c", 0 0, L_0x7ffdf419cc90;  alias, 1 drivers
v0x7ffdf4126860_0 .net "sel", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
S_0x7ffdf4126940 .scope module, "select_B" "MUX_2_1" 4 58, 4 1 0, S_0x7ffdf41257d0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf419cd80 .functor NOT 1, L_0x7ffdf41c3960, C4<0>, C4<0>, C4<0>;
L_0x7ffdf419cdf0 .functor AND 1, L_0x7ffdf419e0d0, L_0x7ffdf419cd80, C4<1>, C4<1>;
L_0x7ffdf419cea0 .functor AND 1, L_0x7ffdf419cad0, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf419cf10 .functor OR 1, L_0x7ffdf419cdf0, L_0x7ffdf419cea0, C4<0>, C4<0>;
v0x7ffdf4126b80_0 .net "and_a", 0 0, L_0x7ffdf419cdf0;  1 drivers
v0x7ffdf4126c20_0 .net "and_b", 0 0, L_0x7ffdf419cea0;  1 drivers
v0x7ffdf4126cc0_0 .net "input_a", 0 0, L_0x7ffdf419e0d0;  alias, 1 drivers
v0x7ffdf4126d70_0 .net "input_b", 0 0, L_0x7ffdf419cad0;  alias, 1 drivers
v0x7ffdf4126e10_0 .net "invert_sel", 0 0, L_0x7ffdf419cd80;  1 drivers
v0x7ffdf4126ef0_0 .net "output_c", 0 0, L_0x7ffdf419cf10;  alias, 1 drivers
v0x7ffdf4126f80_0 .net "sel", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
S_0x7ffdf4127060 .scope module, "select_F" "MUX_4_1" 4 64, 4 15 0, S_0x7ffdf41257d0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /INPUT 1 "input_c";
    .port_info 3 /INPUT 1 "input_d";
    .port_info 4 /OUTPUT 1 "output_e";
    .port_info 5 /INPUT 1 "sel_0";
    .port_info 6 /INPUT 1 "sel_1";
L_0x7ffdf419d5c0 .functor NOT 1, L_0x7ffdf419dc90, C4<0>, C4<0>, C4<0>;
L_0x7ffdf419d630 .functor NOT 1, L_0x7ffdf419ddb0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf419d6a0 .functor AND 1, L_0x7ffdf419d000, L_0x7ffdf419d5c0, L_0x7ffdf419d630, C4<1>;
L_0x7ffdf419d7d0 .functor AND 1, L_0x7ffdf419d1b0, L_0x7ffdf419dc90, L_0x7ffdf419d630, C4<1>;
L_0x7ffdf419d8a0 .functor AND 1, L_0x7ffdf419d290, L_0x7ffdf419d5c0, L_0x7ffdf419ddb0, C4<1>;
L_0x7ffdf419d9c0 .functor AND 1, L_0x7ffdf3563368, L_0x7ffdf419dc90, L_0x7ffdf419ddb0, C4<1>;
L_0x7ffdf419da70 .functor OR 1, L_0x7ffdf419d6a0, L_0x7ffdf419d7d0, L_0x7ffdf419d8a0, L_0x7ffdf419d9c0;
v0x7ffdf4127310_0 .net "and_a", 0 0, L_0x7ffdf419d6a0;  1 drivers
v0x7ffdf41273c0_0 .net "and_b", 0 0, L_0x7ffdf419d7d0;  1 drivers
v0x7ffdf4127460_0 .net "and_c", 0 0, L_0x7ffdf419d8a0;  1 drivers
v0x7ffdf41274f0_0 .net "and_d", 0 0, L_0x7ffdf419d9c0;  1 drivers
v0x7ffdf4127590_0 .net "input_a", 0 0, L_0x7ffdf419d000;  alias, 1 drivers
v0x7ffdf4127670_0 .net "input_b", 0 0, L_0x7ffdf419d1b0;  alias, 1 drivers
v0x7ffdf4127710_0 .net "input_c", 0 0, L_0x7ffdf419d290;  alias, 1 drivers
v0x7ffdf41277a0_0 .net "input_d", 0 0, L_0x7ffdf3563368;  alias, 1 drivers
v0x7ffdf4127830_0 .net "output_e", 0 0, L_0x7ffdf419da70;  alias, 1 drivers
v0x7ffdf4127950_0 .net "sel_0", 0 0, L_0x7ffdf419dc90;  1 drivers
v0x7ffdf41279f0_0 .net "sel_0_invert", 0 0, L_0x7ffdf419d5c0;  1 drivers
v0x7ffdf4127a90_0 .net "sel_1", 0 0, L_0x7ffdf419ddb0;  1 drivers
v0x7ffdf4127b30_0 .net "sel_1_invert", 0 0, L_0x7ffdf419d630;  1 drivers
S_0x7ffdf41287c0 .scope module, "ALU_14" "ALU_1bit" 3 29, 4 38 0, S_0x7ffdf36f4670;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "result";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "a";
    .port_info 3 /INPUT 1 "b";
    .port_info 4 /INPUT 1 "invertA";
    .port_info 5 /INPUT 1 "invertB";
    .port_info 6 /INPUT 2 "operation";
    .port_info 7 /INPUT 1 "carryIn";
    .port_info 8 /INPUT 1 "less";
L_0x7ffdf419c8e0 .functor NOT 1, L_0x7ffdf419f5f0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf419e1f0 .functor NOT 1, L_0x7ffdf419f910, C4<0>, C4<0>, C4<0>;
L_0x7ffdf419e720 .functor AND 1, L_0x7ffdf419e3b0, L_0x7ffdf419e630, C4<1>, C4<1>;
L_0x7ffdf419e8d0 .functor OR 1, L_0x7ffdf419e3b0, L_0x7ffdf419e630, C4<0>, C4<0>;
v0x7ffdf412ac50_0 .net "a", 0 0, L_0x7ffdf419f5f0;  1 drivers
v0x7ffdf412ad10_0 .net "and_ab", 0 0, L_0x7ffdf419e720;  1 drivers
v0x7ffdf412ada0_0 .net "b", 0 0, L_0x7ffdf419f910;  1 drivers
v0x7ffdf412ae50_0 .net "carryIn", 0 0, L_0x7ffdf419d480;  alias, 1 drivers
v0x7ffdf412aee0_0 .net "carryOut", 0 0, L_0x7ffdf419eb80;  alias, 1 drivers
v0x7ffdf412afb0_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf412b040_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf412b0d0_0 .net "invert_a", 0 0, L_0x7ffdf419c8e0;  1 drivers
v0x7ffdf412b180_0 .net "invert_b", 0 0, L_0x7ffdf419e1f0;  1 drivers
L_0x7ffdf35633b0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7ffdf412b2b0_0 .net "less", 0 0, L_0x7ffdf35633b0;  1 drivers
v0x7ffdf412b340_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf412b3d0_0 .net "or_ab", 0 0, L_0x7ffdf419e8d0;  1 drivers
v0x7ffdf412b460_0 .net "result", 0 0, L_0x7ffdf419f190;  1 drivers
v0x7ffdf412b510_0 .net "select_a", 0 0, L_0x7ffdf419e3b0;  1 drivers
v0x7ffdf412b5e0_0 .net "select_b", 0 0, L_0x7ffdf419e630;  1 drivers
v0x7ffdf412b6b0_0 .net "sum_ans", 0 0, L_0x7ffdf419e9b0;  1 drivers
L_0x7ffdf419f3b0 .part L_0x7ffdf41c3a00, 0, 1;
L_0x7ffdf419f4d0 .part L_0x7ffdf41c3a00, 1, 1;
S_0x7ffdf4128a60 .scope module, "adder" "Full_adder" 4 63, 5 1 0, S_0x7ffdf41287c0;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "carryIn";
    .port_info 3 /INPUT 1 "input1";
    .port_info 4 /INPUT 1 "input2";
L_0x7ffdf419e940 .functor XOR 1, L_0x7ffdf419e3b0, L_0x7ffdf419e630, C4<0>, C4<0>;
L_0x7ffdf419e9b0 .functor XOR 1, L_0x7ffdf419e940, L_0x7ffdf419d480, C4<0>, C4<0>;
L_0x7ffdf419ea20 .functor AND 1, L_0x7ffdf419e3b0, L_0x7ffdf419e630, C4<1>, C4<1>;
L_0x7ffdf419ead0 .functor AND 1, L_0x7ffdf419e940, L_0x7ffdf419d480, C4<1>, C4<1>;
L_0x7ffdf419eb80 .functor OR 1, L_0x7ffdf419ea20, L_0x7ffdf419ead0, C4<0>, C4<0>;
v0x7ffdf4128cd0_0 .net "carryIn", 0 0, L_0x7ffdf419d480;  alias, 1 drivers
v0x7ffdf4128da0_0 .net "carryOut", 0 0, L_0x7ffdf419eb80;  alias, 1 drivers
v0x7ffdf4128e30_0 .net "input1", 0 0, L_0x7ffdf419e3b0;  alias, 1 drivers
v0x7ffdf4128ec0_0 .net "input2", 0 0, L_0x7ffdf419e630;  alias, 1 drivers
v0x7ffdf4128f50_0 .net "sum", 0 0, L_0x7ffdf419e9b0;  alias, 1 drivers
v0x7ffdf4129020_0 .net "w1", 0 0, L_0x7ffdf419e940;  1 drivers
v0x7ffdf41290b0_0 .net "w2", 0 0, L_0x7ffdf419ea20;  1 drivers
v0x7ffdf4129150_0 .net "w3", 0 0, L_0x7ffdf419ead0;  1 drivers
S_0x7ffdf4129270 .scope module, "select_A" "MUX_2_1" 4 57, 4 1 0, S_0x7ffdf41287c0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf419e260 .functor NOT 1, L_0x7ffdf41c38c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf419e2d0 .functor AND 1, L_0x7ffdf419f5f0, L_0x7ffdf419e260, C4<1>, C4<1>;
L_0x7ffdf419e340 .functor AND 1, L_0x7ffdf419c8e0, L_0x7ffdf41c38c0, C4<1>, C4<1>;
L_0x7ffdf419e3b0 .functor OR 1, L_0x7ffdf419e2d0, L_0x7ffdf419e340, C4<0>, C4<0>;
v0x7ffdf4129490_0 .net "and_a", 0 0, L_0x7ffdf419e2d0;  1 drivers
v0x7ffdf4129520_0 .net "and_b", 0 0, L_0x7ffdf419e340;  1 drivers
v0x7ffdf41295b0_0 .net "input_a", 0 0, L_0x7ffdf419f5f0;  alias, 1 drivers
v0x7ffdf4129660_0 .net "input_b", 0 0, L_0x7ffdf419c8e0;  alias, 1 drivers
v0x7ffdf4129700_0 .net "invert_sel", 0 0, L_0x7ffdf419e260;  1 drivers
v0x7ffdf41297e0_0 .net "output_c", 0 0, L_0x7ffdf419e3b0;  alias, 1 drivers
v0x7ffdf4129870_0 .net "sel", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
S_0x7ffdf4129950 .scope module, "select_B" "MUX_2_1" 4 58, 4 1 0, S_0x7ffdf41287c0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf419e4a0 .functor NOT 1, L_0x7ffdf41c3960, C4<0>, C4<0>, C4<0>;
L_0x7ffdf419e510 .functor AND 1, L_0x7ffdf419f910, L_0x7ffdf419e4a0, C4<1>, C4<1>;
L_0x7ffdf419e5c0 .functor AND 1, L_0x7ffdf419e1f0, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf419e630 .functor OR 1, L_0x7ffdf419e510, L_0x7ffdf419e5c0, C4<0>, C4<0>;
v0x7ffdf4129b90_0 .net "and_a", 0 0, L_0x7ffdf419e510;  1 drivers
v0x7ffdf4129c30_0 .net "and_b", 0 0, L_0x7ffdf419e5c0;  1 drivers
v0x7ffdf4129cd0_0 .net "input_a", 0 0, L_0x7ffdf419f910;  alias, 1 drivers
v0x7ffdf4129d80_0 .net "input_b", 0 0, L_0x7ffdf419e1f0;  alias, 1 drivers
v0x7ffdf4129e20_0 .net "invert_sel", 0 0, L_0x7ffdf419e4a0;  1 drivers
v0x7ffdf4129f00_0 .net "output_c", 0 0, L_0x7ffdf419e630;  alias, 1 drivers
v0x7ffdf4129f90_0 .net "sel", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
S_0x7ffdf412a070 .scope module, "select_F" "MUX_4_1" 4 64, 4 15 0, S_0x7ffdf41287c0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /INPUT 1 "input_c";
    .port_info 3 /INPUT 1 "input_d";
    .port_info 4 /OUTPUT 1 "output_e";
    .port_info 5 /INPUT 1 "sel_0";
    .port_info 6 /INPUT 1 "sel_1";
L_0x7ffdf419ecc0 .functor NOT 1, L_0x7ffdf419f3b0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf419ed30 .functor NOT 1, L_0x7ffdf419f4d0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf419edc0 .functor AND 1, L_0x7ffdf419e720, L_0x7ffdf419ecc0, L_0x7ffdf419ed30, C4<1>;
L_0x7ffdf419eef0 .functor AND 1, L_0x7ffdf419e8d0, L_0x7ffdf419f3b0, L_0x7ffdf419ed30, C4<1>;
L_0x7ffdf419efc0 .functor AND 1, L_0x7ffdf419e9b0, L_0x7ffdf419ecc0, L_0x7ffdf419f4d0, C4<1>;
L_0x7ffdf419f0e0 .functor AND 1, L_0x7ffdf35633b0, L_0x7ffdf419f3b0, L_0x7ffdf419f4d0, C4<1>;
L_0x7ffdf419f190 .functor OR 1, L_0x7ffdf419edc0, L_0x7ffdf419eef0, L_0x7ffdf419efc0, L_0x7ffdf419f0e0;
v0x7ffdf412a320_0 .net "and_a", 0 0, L_0x7ffdf419edc0;  1 drivers
v0x7ffdf412a3d0_0 .net "and_b", 0 0, L_0x7ffdf419eef0;  1 drivers
v0x7ffdf412a470_0 .net "and_c", 0 0, L_0x7ffdf419efc0;  1 drivers
v0x7ffdf412a500_0 .net "and_d", 0 0, L_0x7ffdf419f0e0;  1 drivers
v0x7ffdf412a5a0_0 .net "input_a", 0 0, L_0x7ffdf419e720;  alias, 1 drivers
v0x7ffdf412a680_0 .net "input_b", 0 0, L_0x7ffdf419e8d0;  alias, 1 drivers
v0x7ffdf412a720_0 .net "input_c", 0 0, L_0x7ffdf419e9b0;  alias, 1 drivers
v0x7ffdf412a7b0_0 .net "input_d", 0 0, L_0x7ffdf35633b0;  alias, 1 drivers
v0x7ffdf412a840_0 .net "output_e", 0 0, L_0x7ffdf419f190;  alias, 1 drivers
v0x7ffdf412a960_0 .net "sel_0", 0 0, L_0x7ffdf419f3b0;  1 drivers
v0x7ffdf412aa00_0 .net "sel_0_invert", 0 0, L_0x7ffdf419ecc0;  1 drivers
v0x7ffdf412aaa0_0 .net "sel_1", 0 0, L_0x7ffdf419f4d0;  1 drivers
v0x7ffdf412ab40_0 .net "sel_1_invert", 0 0, L_0x7ffdf419ed30;  1 drivers
S_0x7ffdf412b7d0 .scope module, "ALU_15" "ALU_1bit" 3 30, 4 38 0, S_0x7ffdf36f4670;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "result";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "a";
    .port_info 3 /INPUT 1 "b";
    .port_info 4 /INPUT 1 "invertA";
    .port_info 5 /INPUT 1 "invertB";
    .port_info 6 /INPUT 2 "operation";
    .port_info 7 /INPUT 1 "carryIn";
    .port_info 8 /INPUT 1 "less";
L_0x7ffdf419dff0 .functor NOT 1, L_0x7ffdf3709fe0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf419e060 .functor NOT 1, L_0x7ffdf3706bc0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a0050 .functor AND 1, L_0x7ffdf419fce0, L_0x7ffdf419ff60, C4<1>, C4<1>;
L_0x7ffdf41a0200 .functor OR 1, L_0x7ffdf419fce0, L_0x7ffdf419ff60, C4<0>, C4<0>;
v0x7ffdf412dd60_0 .net "a", 0 0, L_0x7ffdf3709fe0;  1 drivers
v0x7ffdf412de20_0 .net "and_ab", 0 0, L_0x7ffdf41a0050;  1 drivers
v0x7ffdf412deb0_0 .net "b", 0 0, L_0x7ffdf3706bc0;  1 drivers
v0x7ffdf412df60_0 .net "carryIn", 0 0, L_0x7ffdf419eb80;  alias, 1 drivers
v0x7ffdf412dff0_0 .net "carryOut", 0 0, L_0x7ffdf41a04b0;  alias, 1 drivers
v0x7ffdf412e0c0_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf412e150_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf412e1e0_0 .net "invert_a", 0 0, L_0x7ffdf419dff0;  1 drivers
v0x7ffdf412e290_0 .net "invert_b", 0 0, L_0x7ffdf419e060;  1 drivers
L_0x7ffdf35633f8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7ffdf412e3c0_0 .net "less", 0 0, L_0x7ffdf35633f8;  1 drivers
v0x7ffdf412e450_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf412e4e0_0 .net "or_ab", 0 0, L_0x7ffdf41a0200;  1 drivers
v0x7ffdf412e570_0 .net "result", 0 0, L_0x7ffdf41a0ac0;  1 drivers
v0x7ffdf412e620_0 .net "select_a", 0 0, L_0x7ffdf419fce0;  1 drivers
v0x7ffdf412e6f0_0 .net "select_b", 0 0, L_0x7ffdf419ff60;  1 drivers
v0x7ffdf412e7c0_0 .net "sum_ans", 0 0, L_0x7ffdf41a02e0;  1 drivers
L_0x7ffdf41a0ce0 .part L_0x7ffdf41c3a00, 0, 1;
L_0x7ffdf370c130 .part L_0x7ffdf41c3a00, 1, 1;
S_0x7ffdf412ba70 .scope module, "adder" "Full_adder" 4 63, 5 1 0, S_0x7ffdf412b7d0;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "carryIn";
    .port_info 3 /INPUT 1 "input1";
    .port_info 4 /INPUT 1 "input2";
L_0x7ffdf41a0270 .functor XOR 1, L_0x7ffdf419fce0, L_0x7ffdf419ff60, C4<0>, C4<0>;
L_0x7ffdf41a02e0 .functor XOR 1, L_0x7ffdf41a0270, L_0x7ffdf419eb80, C4<0>, C4<0>;
L_0x7ffdf41a0350 .functor AND 1, L_0x7ffdf419fce0, L_0x7ffdf419ff60, C4<1>, C4<1>;
L_0x7ffdf41a0400 .functor AND 1, L_0x7ffdf41a0270, L_0x7ffdf419eb80, C4<1>, C4<1>;
L_0x7ffdf41a04b0 .functor OR 1, L_0x7ffdf41a0350, L_0x7ffdf41a0400, C4<0>, C4<0>;
v0x7ffdf412bce0_0 .net "carryIn", 0 0, L_0x7ffdf419eb80;  alias, 1 drivers
v0x7ffdf412bdb0_0 .net "carryOut", 0 0, L_0x7ffdf41a04b0;  alias, 1 drivers
v0x7ffdf412be40_0 .net "input1", 0 0, L_0x7ffdf419fce0;  alias, 1 drivers
v0x7ffdf412bed0_0 .net "input2", 0 0, L_0x7ffdf419ff60;  alias, 1 drivers
v0x7ffdf412bf60_0 .net "sum", 0 0, L_0x7ffdf41a02e0;  alias, 1 drivers
v0x7ffdf412c030_0 .net "w1", 0 0, L_0x7ffdf41a0270;  1 drivers
v0x7ffdf412c0c0_0 .net "w2", 0 0, L_0x7ffdf41a0350;  1 drivers
v0x7ffdf412c160_0 .net "w3", 0 0, L_0x7ffdf41a0400;  1 drivers
S_0x7ffdf412c280 .scope module, "select_A" "MUX_2_1" 4 57, 4 1 0, S_0x7ffdf412b7d0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf4193f30 .functor NOT 1, L_0x7ffdf41c38c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4193fa0 .functor AND 1, L_0x7ffdf3709fe0, L_0x7ffdf4193f30, C4<1>, C4<1>;
L_0x7ffdf419fc70 .functor AND 1, L_0x7ffdf419dff0, L_0x7ffdf41c38c0, C4<1>, C4<1>;
L_0x7ffdf419fce0 .functor OR 1, L_0x7ffdf4193fa0, L_0x7ffdf419fc70, C4<0>, C4<0>;
v0x7ffdf412c4a0_0 .net "and_a", 0 0, L_0x7ffdf4193fa0;  1 drivers
v0x7ffdf412c530_0 .net "and_b", 0 0, L_0x7ffdf419fc70;  1 drivers
v0x7ffdf412c5c0_0 .net "input_a", 0 0, L_0x7ffdf3709fe0;  alias, 1 drivers
v0x7ffdf412c670_0 .net "input_b", 0 0, L_0x7ffdf419dff0;  alias, 1 drivers
v0x7ffdf412c710_0 .net "invert_sel", 0 0, L_0x7ffdf4193f30;  1 drivers
v0x7ffdf412c7f0_0 .net "output_c", 0 0, L_0x7ffdf419fce0;  alias, 1 drivers
v0x7ffdf412c880_0 .net "sel", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
S_0x7ffdf412c960 .scope module, "select_B" "MUX_2_1" 4 58, 4 1 0, S_0x7ffdf412b7d0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf419fdd0 .functor NOT 1, L_0x7ffdf41c3960, C4<0>, C4<0>, C4<0>;
L_0x7ffdf419fe40 .functor AND 1, L_0x7ffdf3706bc0, L_0x7ffdf419fdd0, C4<1>, C4<1>;
L_0x7ffdf419fef0 .functor AND 1, L_0x7ffdf419e060, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf419ff60 .functor OR 1, L_0x7ffdf419fe40, L_0x7ffdf419fef0, C4<0>, C4<0>;
v0x7ffdf412cba0_0 .net "and_a", 0 0, L_0x7ffdf419fe40;  1 drivers
v0x7ffdf412cc40_0 .net "and_b", 0 0, L_0x7ffdf419fef0;  1 drivers
v0x7ffdf412cce0_0 .net "input_a", 0 0, L_0x7ffdf3706bc0;  alias, 1 drivers
v0x7ffdf412cd90_0 .net "input_b", 0 0, L_0x7ffdf419e060;  alias, 1 drivers
v0x7ffdf412ce30_0 .net "invert_sel", 0 0, L_0x7ffdf419fdd0;  1 drivers
v0x7ffdf412cf10_0 .net "output_c", 0 0, L_0x7ffdf419ff60;  alias, 1 drivers
v0x7ffdf412cfa0_0 .net "sel", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
S_0x7ffdf412d230 .scope module, "select_F" "MUX_4_1" 4 64, 4 15 0, S_0x7ffdf412b7d0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /INPUT 1 "input_c";
    .port_info 3 /INPUT 1 "input_d";
    .port_info 4 /OUTPUT 1 "output_e";
    .port_info 5 /INPUT 1 "sel_0";
    .port_info 6 /INPUT 1 "sel_1";
L_0x7ffdf41a05f0 .functor NOT 1, L_0x7ffdf41a0ce0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a0660 .functor NOT 1, L_0x7ffdf370c130, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a06f0 .functor AND 1, L_0x7ffdf41a0050, L_0x7ffdf41a05f0, L_0x7ffdf41a0660, C4<1>;
L_0x7ffdf41a0820 .functor AND 1, L_0x7ffdf41a0200, L_0x7ffdf41a0ce0, L_0x7ffdf41a0660, C4<1>;
L_0x7ffdf41a08f0 .functor AND 1, L_0x7ffdf41a02e0, L_0x7ffdf41a05f0, L_0x7ffdf370c130, C4<1>;
L_0x7ffdf41a0a10 .functor AND 1, L_0x7ffdf35633f8, L_0x7ffdf41a0ce0, L_0x7ffdf370c130, C4<1>;
L_0x7ffdf41a0ac0 .functor OR 1, L_0x7ffdf41a06f0, L_0x7ffdf41a0820, L_0x7ffdf41a08f0, L_0x7ffdf41a0a10;
v0x7ffdf412d450_0 .net "and_a", 0 0, L_0x7ffdf41a06f0;  1 drivers
v0x7ffdf412d4e0_0 .net "and_b", 0 0, L_0x7ffdf41a0820;  1 drivers
v0x7ffdf412d580_0 .net "and_c", 0 0, L_0x7ffdf41a08f0;  1 drivers
v0x7ffdf412d610_0 .net "and_d", 0 0, L_0x7ffdf41a0a10;  1 drivers
v0x7ffdf412d6b0_0 .net "input_a", 0 0, L_0x7ffdf41a0050;  alias, 1 drivers
v0x7ffdf412d790_0 .net "input_b", 0 0, L_0x7ffdf41a0200;  alias, 1 drivers
v0x7ffdf412d830_0 .net "input_c", 0 0, L_0x7ffdf41a02e0;  alias, 1 drivers
v0x7ffdf412d8c0_0 .net "input_d", 0 0, L_0x7ffdf35633f8;  alias, 1 drivers
v0x7ffdf412d950_0 .net "output_e", 0 0, L_0x7ffdf41a0ac0;  alias, 1 drivers
v0x7ffdf412da70_0 .net "sel_0", 0 0, L_0x7ffdf41a0ce0;  1 drivers
v0x7ffdf412db10_0 .net "sel_0_invert", 0 0, L_0x7ffdf41a05f0;  1 drivers
v0x7ffdf412dbb0_0 .net "sel_1", 0 0, L_0x7ffdf370c130;  1 drivers
v0x7ffdf412dc50_0 .net "sel_1_invert", 0 0, L_0x7ffdf41a0660;  1 drivers
S_0x7ffdf412e8e0 .scope module, "ALU_16" "ALU_1bit" 3 31, 4 38 0, S_0x7ffdf36f4670;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "result";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "a";
    .port_info 3 /INPUT 1 "b";
    .port_info 4 /INPUT 1 "invertA";
    .port_info 5 /INPUT 1 "invertB";
    .port_info 6 /INPUT 2 "operation";
    .port_info 7 /INPUT 1 "carryIn";
    .port_info 8 /INPUT 1 "less";
L_0x7ffdf3706c60 .functor NOT 1, L_0x7ffdf41a1590, C4<0>, C4<0>, C4<0>;
L_0x7ffdf370a080 .functor NOT 1, L_0x7ffdf41a17c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf3706a00 .functor AND 1, L_0x7ffdf370c440, L_0x7ffdf3709e40, C4<1>, C4<1>;
L_0x7ffdf3705f70 .functor OR 1, L_0x7ffdf370c440, L_0x7ffdf3709e40, C4<0>, C4<0>;
v0x7ffdf4130eb0_0 .net "a", 0 0, L_0x7ffdf41a1590;  1 drivers
v0x7ffdf4130f70_0 .net "and_ab", 0 0, L_0x7ffdf3706a00;  1 drivers
v0x7ffdf4131000_0 .net "b", 0 0, L_0x7ffdf41a17c0;  1 drivers
v0x7ffdf41310b0_0 .net "carryIn", 0 0, L_0x7ffdf41a04b0;  alias, 1 drivers
v0x7ffdf4131140_0 .net "carryOut", 0 0, L_0x7ffdf4193d90;  alias, 1 drivers
v0x7ffdf4131210_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf41312a0_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf4131330_0 .net "invert_a", 0 0, L_0x7ffdf3706c60;  1 drivers
v0x7ffdf41313e0_0 .net "invert_b", 0 0, L_0x7ffdf370a080;  1 drivers
L_0x7ffdf3563440 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7ffdf4131510_0 .net "less", 0 0, L_0x7ffdf3563440;  1 drivers
v0x7ffdf41315a0_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf4131730_0 .net "or_ab", 0 0, L_0x7ffdf3705f70;  1 drivers
v0x7ffdf41317c0_0 .net "result", 0 0, L_0x7ffdf41a1160;  1 drivers
v0x7ffdf4131850_0 .net "select_a", 0 0, L_0x7ffdf370c440;  1 drivers
v0x7ffdf41318e0_0 .net "select_b", 0 0, L_0x7ffdf3709e40;  1 drivers
v0x7ffdf41319b0_0 .net "sum_ans", 0 0, L_0x7ffdf37043b0;  1 drivers
L_0x7ffdf41a1350 .part L_0x7ffdf41c3a00, 0, 1;
L_0x7ffdf41a1470 .part L_0x7ffdf41c3a00, 1, 1;
S_0x7ffdf412ec00 .scope module, "adder" "Full_adder" 4 63, 5 1 0, S_0x7ffdf412e8e0;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "carryIn";
    .port_info 3 /INPUT 1 "input1";
    .port_info 4 /INPUT 1 "input2";
L_0x7ffdf3705fe0 .functor XOR 1, L_0x7ffdf370c440, L_0x7ffdf3709e40, C4<0>, C4<0>;
L_0x7ffdf37043b0 .functor XOR 1, L_0x7ffdf3705fe0, L_0x7ffdf41a04b0, C4<0>, C4<0>;
L_0x7ffdf3704420 .functor AND 1, L_0x7ffdf370c440, L_0x7ffdf3709e40, C4<1>, C4<1>;
L_0x7ffdf4193d20 .functor AND 1, L_0x7ffdf3705fe0, L_0x7ffdf41a04b0, C4<1>, C4<1>;
L_0x7ffdf4193d90 .functor OR 1, L_0x7ffdf3704420, L_0x7ffdf4193d20, C4<0>, C4<0>;
v0x7ffdf412ee70_0 .net "carryIn", 0 0, L_0x7ffdf41a04b0;  alias, 1 drivers
v0x7ffdf412ef00_0 .net "carryOut", 0 0, L_0x7ffdf4193d90;  alias, 1 drivers
v0x7ffdf412ef90_0 .net "input1", 0 0, L_0x7ffdf370c440;  alias, 1 drivers
v0x7ffdf412f020_0 .net "input2", 0 0, L_0x7ffdf3709e40;  alias, 1 drivers
v0x7ffdf412f0b0_0 .net "sum", 0 0, L_0x7ffdf37043b0;  alias, 1 drivers
v0x7ffdf412f180_0 .net "w1", 0 0, L_0x7ffdf3705fe0;  1 drivers
v0x7ffdf412f210_0 .net "w2", 0 0, L_0x7ffdf3704420;  1 drivers
v0x7ffdf412f2b0_0 .net "w3", 0 0, L_0x7ffdf4193d20;  1 drivers
S_0x7ffdf412f3d0 .scope module, "select_A" "MUX_2_1" 4 57, 4 1 0, S_0x7ffdf412e8e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf3706d60 .functor NOT 1, L_0x7ffdf41c38c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf3706740 .functor AND 1, L_0x7ffdf41a1590, L_0x7ffdf3706d60, C4<1>, C4<1>;
L_0x7ffdf370c3d0 .functor AND 1, L_0x7ffdf3706c60, L_0x7ffdf41c38c0, C4<1>, C4<1>;
L_0x7ffdf370c440 .functor OR 1, L_0x7ffdf3706740, L_0x7ffdf370c3d0, C4<0>, C4<0>;
v0x7ffdf412f5f0_0 .net "and_a", 0 0, L_0x7ffdf3706740;  1 drivers
v0x7ffdf412f680_0 .net "and_b", 0 0, L_0x7ffdf370c3d0;  1 drivers
v0x7ffdf412f710_0 .net "input_a", 0 0, L_0x7ffdf41a1590;  alias, 1 drivers
v0x7ffdf412f7c0_0 .net "input_b", 0 0, L_0x7ffdf3706c60;  alias, 1 drivers
v0x7ffdf412f860_0 .net "invert_sel", 0 0, L_0x7ffdf3706d60;  1 drivers
v0x7ffdf412f940_0 .net "output_c", 0 0, L_0x7ffdf370c440;  alias, 1 drivers
v0x7ffdf412f9d0_0 .net "sel", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
S_0x7ffdf412fc60 .scope module, "select_B" "MUX_2_1" 4 58, 4 1 0, S_0x7ffdf412e8e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf3709060 .functor NOT 1, L_0x7ffdf41c3960, C4<0>, C4<0>, C4<0>;
L_0x7ffdf37090d0 .functor AND 1, L_0x7ffdf41a17c0, L_0x7ffdf3709060, C4<1>, C4<1>;
L_0x7ffdf3709dd0 .functor AND 1, L_0x7ffdf370a080, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf3709e40 .functor OR 1, L_0x7ffdf37090d0, L_0x7ffdf3709dd0, C4<0>, C4<0>;
v0x7ffdf412fe30_0 .net "and_a", 0 0, L_0x7ffdf37090d0;  1 drivers
v0x7ffdf412fec0_0 .net "and_b", 0 0, L_0x7ffdf3709dd0;  1 drivers
v0x7ffdf412ff50_0 .net "input_a", 0 0, L_0x7ffdf41a17c0;  alias, 1 drivers
v0x7ffdf412ffe0_0 .net "input_b", 0 0, L_0x7ffdf370a080;  alias, 1 drivers
v0x7ffdf4130080_0 .net "invert_sel", 0 0, L_0x7ffdf3709060;  1 drivers
v0x7ffdf4130160_0 .net "output_c", 0 0, L_0x7ffdf3709e40;  alias, 1 drivers
v0x7ffdf41301f0_0 .net "sel", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
S_0x7ffdf41302d0 .scope module, "select_F" "MUX_4_1" 4 64, 4 15 0, S_0x7ffdf412e8e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /INPUT 1 "input_c";
    .port_info 3 /INPUT 1 "input_d";
    .port_info 4 /OUTPUT 1 "output_e";
    .port_info 5 /INPUT 1 "sel_0";
    .port_info 6 /INPUT 1 "sel_1";
L_0x7ffdf41a0e00 .functor NOT 1, L_0x7ffdf41a1350, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a0e70 .functor NOT 1, L_0x7ffdf41a1470, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a0ee0 .functor AND 1, L_0x7ffdf3706a00, L_0x7ffdf41a0e00, L_0x7ffdf41a0e70, C4<1>;
L_0x7ffdf41a0f50 .functor AND 1, L_0x7ffdf3705f70, L_0x7ffdf41a1350, L_0x7ffdf41a0e70, C4<1>;
L_0x7ffdf41a0fc0 .functor AND 1, L_0x7ffdf37043b0, L_0x7ffdf41a0e00, L_0x7ffdf41a1470, C4<1>;
L_0x7ffdf41a10b0 .functor AND 1, L_0x7ffdf3563440, L_0x7ffdf41a1350, L_0x7ffdf41a1470, C4<1>;
L_0x7ffdf41a1160 .functor OR 1, L_0x7ffdf41a0ee0, L_0x7ffdf41a0f50, L_0x7ffdf41a0fc0, L_0x7ffdf41a10b0;
v0x7ffdf4130580_0 .net "and_a", 0 0, L_0x7ffdf41a0ee0;  1 drivers
v0x7ffdf4130630_0 .net "and_b", 0 0, L_0x7ffdf41a0f50;  1 drivers
v0x7ffdf41306d0_0 .net "and_c", 0 0, L_0x7ffdf41a0fc0;  1 drivers
v0x7ffdf4130760_0 .net "and_d", 0 0, L_0x7ffdf41a10b0;  1 drivers
v0x7ffdf4130800_0 .net "input_a", 0 0, L_0x7ffdf3706a00;  alias, 1 drivers
v0x7ffdf41308e0_0 .net "input_b", 0 0, L_0x7ffdf3705f70;  alias, 1 drivers
v0x7ffdf4130980_0 .net "input_c", 0 0, L_0x7ffdf37043b0;  alias, 1 drivers
v0x7ffdf4130a10_0 .net "input_d", 0 0, L_0x7ffdf3563440;  alias, 1 drivers
v0x7ffdf4130aa0_0 .net "output_e", 0 0, L_0x7ffdf41a1160;  alias, 1 drivers
v0x7ffdf4130bc0_0 .net "sel_0", 0 0, L_0x7ffdf41a1350;  1 drivers
v0x7ffdf4130c60_0 .net "sel_0_invert", 0 0, L_0x7ffdf41a0e00;  1 drivers
v0x7ffdf4130d00_0 .net "sel_1", 0 0, L_0x7ffdf41a1470;  1 drivers
v0x7ffdf4130da0_0 .net "sel_1_invert", 0 0, L_0x7ffdf41a0e70;  1 drivers
S_0x7ffdf4131ad0 .scope module, "ALU_17" "ALU_1bit" 3 32, 4 38 0, S_0x7ffdf36f4670;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "result";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "a";
    .port_info 3 /INPUT 1 "b";
    .port_info 4 /INPUT 1 "invertA";
    .port_info 5 /INPUT 1 "invertB";
    .port_info 6 /INPUT 2 "operation";
    .port_info 7 /INPUT 1 "carryIn";
    .port_info 8 /INPUT 1 "less";
L_0x7ffdf41a18e0 .functor NOT 1, L_0x7ffdf41a2e10, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a1950 .functor NOT 1, L_0x7ffdf41a16b0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a1f40 .functor AND 1, L_0x7ffdf41a1bd0, L_0x7ffdf41a1e50, C4<1>, C4<1>;
L_0x7ffdf41a20f0 .functor OR 1, L_0x7ffdf41a1bd0, L_0x7ffdf41a1e50, C4<0>, C4<0>;
v0x7ffdf4133f40_0 .net "a", 0 0, L_0x7ffdf41a2e10;  1 drivers
v0x7ffdf4134000_0 .net "and_ab", 0 0, L_0x7ffdf41a1f40;  1 drivers
v0x7ffdf4134090_0 .net "b", 0 0, L_0x7ffdf41a16b0;  1 drivers
v0x7ffdf4134140_0 .net "carryIn", 0 0, L_0x7ffdf4193d90;  alias, 1 drivers
v0x7ffdf41341d0_0 .net "carryOut", 0 0, L_0x7ffdf41a23a0;  alias, 1 drivers
v0x7ffdf41342a0_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf4134330_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf41343c0_0 .net "invert_a", 0 0, L_0x7ffdf41a18e0;  1 drivers
v0x7ffdf4134470_0 .net "invert_b", 0 0, L_0x7ffdf41a1950;  1 drivers
L_0x7ffdf3563488 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7ffdf41345a0_0 .net "less", 0 0, L_0x7ffdf3563488;  1 drivers
v0x7ffdf4134630_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf41346c0_0 .net "or_ab", 0 0, L_0x7ffdf41a20f0;  1 drivers
v0x7ffdf4134750_0 .net "result", 0 0, L_0x7ffdf41a29b0;  1 drivers
v0x7ffdf4134800_0 .net "select_a", 0 0, L_0x7ffdf41a1bd0;  1 drivers
v0x7ffdf41348d0_0 .net "select_b", 0 0, L_0x7ffdf41a1e50;  1 drivers
v0x7ffdf41349a0_0 .net "sum_ans", 0 0, L_0x7ffdf41a21d0;  1 drivers
L_0x7ffdf41a2bd0 .part L_0x7ffdf41c3a00, 0, 1;
L_0x7ffdf41a2cf0 .part L_0x7ffdf41c3a00, 1, 1;
S_0x7ffdf4131d70 .scope module, "adder" "Full_adder" 4 63, 5 1 0, S_0x7ffdf4131ad0;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "carryIn";
    .port_info 3 /INPUT 1 "input1";
    .port_info 4 /INPUT 1 "input2";
L_0x7ffdf41a2160 .functor XOR 1, L_0x7ffdf41a1bd0, L_0x7ffdf41a1e50, C4<0>, C4<0>;
L_0x7ffdf41a21d0 .functor XOR 1, L_0x7ffdf41a2160, L_0x7ffdf4193d90, C4<0>, C4<0>;
L_0x7ffdf41a2240 .functor AND 1, L_0x7ffdf41a1bd0, L_0x7ffdf41a1e50, C4<1>, C4<1>;
L_0x7ffdf41a22f0 .functor AND 1, L_0x7ffdf41a2160, L_0x7ffdf4193d90, C4<1>, C4<1>;
L_0x7ffdf41a23a0 .functor OR 1, L_0x7ffdf41a2240, L_0x7ffdf41a22f0, C4<0>, C4<0>;
v0x7ffdf4131fb0_0 .net "carryIn", 0 0, L_0x7ffdf4193d90;  alias, 1 drivers
v0x7ffdf4132080_0 .net "carryOut", 0 0, L_0x7ffdf41a23a0;  alias, 1 drivers
v0x7ffdf4132110_0 .net "input1", 0 0, L_0x7ffdf41a1bd0;  alias, 1 drivers
v0x7ffdf41321a0_0 .net "input2", 0 0, L_0x7ffdf41a1e50;  alias, 1 drivers
v0x7ffdf4132230_0 .net "sum", 0 0, L_0x7ffdf41a21d0;  alias, 1 drivers
v0x7ffdf4132300_0 .net "w1", 0 0, L_0x7ffdf41a2160;  1 drivers
v0x7ffdf41323a0_0 .net "w2", 0 0, L_0x7ffdf41a2240;  1 drivers
v0x7ffdf4132440_0 .net "w3", 0 0, L_0x7ffdf41a22f0;  1 drivers
S_0x7ffdf4132560 .scope module, "select_A" "MUX_2_1" 4 57, 4 1 0, S_0x7ffdf4131ad0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41a1a40 .functor NOT 1, L_0x7ffdf41c38c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a1ab0 .functor AND 1, L_0x7ffdf41a2e10, L_0x7ffdf41a1a40, C4<1>, C4<1>;
L_0x7ffdf41a1b60 .functor AND 1, L_0x7ffdf41a18e0, L_0x7ffdf41c38c0, C4<1>, C4<1>;
L_0x7ffdf41a1bd0 .functor OR 1, L_0x7ffdf41a1ab0, L_0x7ffdf41a1b60, C4<0>, C4<0>;
v0x7ffdf4132780_0 .net "and_a", 0 0, L_0x7ffdf41a1ab0;  1 drivers
v0x7ffdf4132810_0 .net "and_b", 0 0, L_0x7ffdf41a1b60;  1 drivers
v0x7ffdf41328a0_0 .net "input_a", 0 0, L_0x7ffdf41a2e10;  alias, 1 drivers
v0x7ffdf4132950_0 .net "input_b", 0 0, L_0x7ffdf41a18e0;  alias, 1 drivers
v0x7ffdf41329f0_0 .net "invert_sel", 0 0, L_0x7ffdf41a1a40;  1 drivers
v0x7ffdf4132ad0_0 .net "output_c", 0 0, L_0x7ffdf41a1bd0;  alias, 1 drivers
v0x7ffdf4132b60_0 .net "sel", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
S_0x7ffdf4132c40 .scope module, "select_B" "MUX_2_1" 4 58, 4 1 0, S_0x7ffdf4131ad0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41a1cc0 .functor NOT 1, L_0x7ffdf41c3960, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a1d30 .functor AND 1, L_0x7ffdf41a16b0, L_0x7ffdf41a1cc0, C4<1>, C4<1>;
L_0x7ffdf41a1de0 .functor AND 1, L_0x7ffdf41a1950, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf41a1e50 .functor OR 1, L_0x7ffdf41a1d30, L_0x7ffdf41a1de0, C4<0>, C4<0>;
v0x7ffdf4132e80_0 .net "and_a", 0 0, L_0x7ffdf41a1d30;  1 drivers
v0x7ffdf4132f20_0 .net "and_b", 0 0, L_0x7ffdf41a1de0;  1 drivers
v0x7ffdf4132fc0_0 .net "input_a", 0 0, L_0x7ffdf41a16b0;  alias, 1 drivers
v0x7ffdf4133070_0 .net "input_b", 0 0, L_0x7ffdf41a1950;  alias, 1 drivers
v0x7ffdf4133110_0 .net "invert_sel", 0 0, L_0x7ffdf41a1cc0;  1 drivers
v0x7ffdf41331f0_0 .net "output_c", 0 0, L_0x7ffdf41a1e50;  alias, 1 drivers
v0x7ffdf4133280_0 .net "sel", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
S_0x7ffdf4133360 .scope module, "select_F" "MUX_4_1" 4 64, 4 15 0, S_0x7ffdf4131ad0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /INPUT 1 "input_c";
    .port_info 3 /INPUT 1 "input_d";
    .port_info 4 /OUTPUT 1 "output_e";
    .port_info 5 /INPUT 1 "sel_0";
    .port_info 6 /INPUT 1 "sel_1";
L_0x7ffdf41a24e0 .functor NOT 1, L_0x7ffdf41a2bd0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a2550 .functor NOT 1, L_0x7ffdf41a2cf0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a25e0 .functor AND 1, L_0x7ffdf41a1f40, L_0x7ffdf41a24e0, L_0x7ffdf41a2550, C4<1>;
L_0x7ffdf41a2710 .functor AND 1, L_0x7ffdf41a20f0, L_0x7ffdf41a2bd0, L_0x7ffdf41a2550, C4<1>;
L_0x7ffdf41a27e0 .functor AND 1, L_0x7ffdf41a21d0, L_0x7ffdf41a24e0, L_0x7ffdf41a2cf0, C4<1>;
L_0x7ffdf41a2900 .functor AND 1, L_0x7ffdf3563488, L_0x7ffdf41a2bd0, L_0x7ffdf41a2cf0, C4<1>;
L_0x7ffdf41a29b0 .functor OR 1, L_0x7ffdf41a25e0, L_0x7ffdf41a2710, L_0x7ffdf41a27e0, L_0x7ffdf41a2900;
v0x7ffdf4133610_0 .net "and_a", 0 0, L_0x7ffdf41a25e0;  1 drivers
v0x7ffdf41336c0_0 .net "and_b", 0 0, L_0x7ffdf41a2710;  1 drivers
v0x7ffdf4133760_0 .net "and_c", 0 0, L_0x7ffdf41a27e0;  1 drivers
v0x7ffdf41337f0_0 .net "and_d", 0 0, L_0x7ffdf41a2900;  1 drivers
v0x7ffdf4133890_0 .net "input_a", 0 0, L_0x7ffdf41a1f40;  alias, 1 drivers
v0x7ffdf4133970_0 .net "input_b", 0 0, L_0x7ffdf41a20f0;  alias, 1 drivers
v0x7ffdf4133a10_0 .net "input_c", 0 0, L_0x7ffdf41a21d0;  alias, 1 drivers
v0x7ffdf4133aa0_0 .net "input_d", 0 0, L_0x7ffdf3563488;  alias, 1 drivers
v0x7ffdf4133b30_0 .net "output_e", 0 0, L_0x7ffdf41a29b0;  alias, 1 drivers
v0x7ffdf4133c50_0 .net "sel_0", 0 0, L_0x7ffdf41a2bd0;  1 drivers
v0x7ffdf4133cf0_0 .net "sel_0_invert", 0 0, L_0x7ffdf41a24e0;  1 drivers
v0x7ffdf4133d90_0 .net "sel_1", 0 0, L_0x7ffdf41a2cf0;  1 drivers
v0x7ffdf4133e30_0 .net "sel_1_invert", 0 0, L_0x7ffdf41a2550;  1 drivers
S_0x7ffdf4134ac0 .scope module, "ALU_18" "ALU_1bit" 3 33, 4 38 0, S_0x7ffdf36f4670;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "result";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "a";
    .port_info 3 /INPUT 1 "b";
    .port_info 4 /INPUT 1 "invertA";
    .port_info 5 /INPUT 1 "invertB";
    .port_info 6 /INPUT 2 "operation";
    .port_info 7 /INPUT 1 "carryIn";
    .port_info 8 /INPUT 1 "less";
L_0x7ffdf41a1750 .functor NOT 1, L_0x7ffdf41a45c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4196c70 .functor NOT 1, L_0x7ffdf41a2f30, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a36d0 .functor AND 1, L_0x7ffdf41a3360, L_0x7ffdf41a35e0, C4<1>, C4<1>;
L_0x7ffdf41a3880 .functor OR 1, L_0x7ffdf41a3360, L_0x7ffdf41a35e0, C4<0>, C4<0>;
v0x7ffdf4136f50_0 .net "a", 0 0, L_0x7ffdf41a45c0;  1 drivers
v0x7ffdf4137010_0 .net "and_ab", 0 0, L_0x7ffdf41a36d0;  1 drivers
v0x7ffdf41370a0_0 .net "b", 0 0, L_0x7ffdf41a2f30;  1 drivers
v0x7ffdf4137150_0 .net "carryIn", 0 0, L_0x7ffdf41a23a0;  alias, 1 drivers
v0x7ffdf41371e0_0 .net "carryOut", 0 0, L_0x7ffdf41a3b50;  alias, 1 drivers
v0x7ffdf41372b0_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf4137340_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf41373d0_0 .net "invert_a", 0 0, L_0x7ffdf41a1750;  1 drivers
v0x7ffdf4137480_0 .net "invert_b", 0 0, L_0x7ffdf4196c70;  1 drivers
L_0x7ffdf35634d0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7ffdf41375b0_0 .net "less", 0 0, L_0x7ffdf35634d0;  1 drivers
v0x7ffdf4137640_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf41376d0_0 .net "or_ab", 0 0, L_0x7ffdf41a3880;  1 drivers
v0x7ffdf4137760_0 .net "result", 0 0, L_0x7ffdf41a4160;  1 drivers
v0x7ffdf4137810_0 .net "select_a", 0 0, L_0x7ffdf41a3360;  1 drivers
v0x7ffdf41378e0_0 .net "select_b", 0 0, L_0x7ffdf41a35e0;  1 drivers
v0x7ffdf41379b0_0 .net "sum_ans", 0 0, L_0x7ffdf41a3960;  1 drivers
L_0x7ffdf41a4380 .part L_0x7ffdf41c3a00, 0, 1;
L_0x7ffdf41a44a0 .part L_0x7ffdf41c3a00, 1, 1;
S_0x7ffdf4134d60 .scope module, "adder" "Full_adder" 4 63, 5 1 0, S_0x7ffdf4134ac0;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "carryIn";
    .port_info 3 /INPUT 1 "input1";
    .port_info 4 /INPUT 1 "input2";
L_0x7ffdf41a38f0 .functor XOR 1, L_0x7ffdf41a3360, L_0x7ffdf41a35e0, C4<0>, C4<0>;
L_0x7ffdf41a3960 .functor XOR 1, L_0x7ffdf41a38f0, L_0x7ffdf41a23a0, C4<0>, C4<0>;
L_0x7ffdf41a3a10 .functor AND 1, L_0x7ffdf41a3360, L_0x7ffdf41a35e0, C4<1>, C4<1>;
L_0x7ffdf41a3aa0 .functor AND 1, L_0x7ffdf41a38f0, L_0x7ffdf41a23a0, C4<1>, C4<1>;
L_0x7ffdf41a3b50 .functor OR 1, L_0x7ffdf41a3a10, L_0x7ffdf41a3aa0, C4<0>, C4<0>;
v0x7ffdf4134fd0_0 .net "carryIn", 0 0, L_0x7ffdf41a23a0;  alias, 1 drivers
v0x7ffdf41350a0_0 .net "carryOut", 0 0, L_0x7ffdf41a3b50;  alias, 1 drivers
v0x7ffdf4135130_0 .net "input1", 0 0, L_0x7ffdf41a3360;  alias, 1 drivers
v0x7ffdf41351c0_0 .net "input2", 0 0, L_0x7ffdf41a35e0;  alias, 1 drivers
v0x7ffdf4135250_0 .net "sum", 0 0, L_0x7ffdf41a3960;  alias, 1 drivers
v0x7ffdf4135320_0 .net "w1", 0 0, L_0x7ffdf41a38f0;  1 drivers
v0x7ffdf41353b0_0 .net "w2", 0 0, L_0x7ffdf41a3a10;  1 drivers
v0x7ffdf4135450_0 .net "w3", 0 0, L_0x7ffdf41a3aa0;  1 drivers
S_0x7ffdf4135570 .scope module, "select_A" "MUX_2_1" 4 57, 4 1 0, S_0x7ffdf4134ac0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41a31d0 .functor NOT 1, L_0x7ffdf41c38c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a3240 .functor AND 1, L_0x7ffdf41a45c0, L_0x7ffdf41a31d0, C4<1>, C4<1>;
L_0x7ffdf41a32f0 .functor AND 1, L_0x7ffdf41a1750, L_0x7ffdf41c38c0, C4<1>, C4<1>;
L_0x7ffdf41a3360 .functor OR 1, L_0x7ffdf41a3240, L_0x7ffdf41a32f0, C4<0>, C4<0>;
v0x7ffdf4135790_0 .net "and_a", 0 0, L_0x7ffdf41a3240;  1 drivers
v0x7ffdf4135820_0 .net "and_b", 0 0, L_0x7ffdf41a32f0;  1 drivers
v0x7ffdf41358b0_0 .net "input_a", 0 0, L_0x7ffdf41a45c0;  alias, 1 drivers
v0x7ffdf4135960_0 .net "input_b", 0 0, L_0x7ffdf41a1750;  alias, 1 drivers
v0x7ffdf4135a00_0 .net "invert_sel", 0 0, L_0x7ffdf41a31d0;  1 drivers
v0x7ffdf4135ae0_0 .net "output_c", 0 0, L_0x7ffdf41a3360;  alias, 1 drivers
v0x7ffdf4135b70_0 .net "sel", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
S_0x7ffdf4135c50 .scope module, "select_B" "MUX_2_1" 4 58, 4 1 0, S_0x7ffdf4134ac0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41a3450 .functor NOT 1, L_0x7ffdf41c3960, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a34c0 .functor AND 1, L_0x7ffdf41a2f30, L_0x7ffdf41a3450, C4<1>, C4<1>;
L_0x7ffdf41a3570 .functor AND 1, L_0x7ffdf4196c70, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf41a35e0 .functor OR 1, L_0x7ffdf41a34c0, L_0x7ffdf41a3570, C4<0>, C4<0>;
v0x7ffdf4135e90_0 .net "and_a", 0 0, L_0x7ffdf41a34c0;  1 drivers
v0x7ffdf4135f30_0 .net "and_b", 0 0, L_0x7ffdf41a3570;  1 drivers
v0x7ffdf4135fd0_0 .net "input_a", 0 0, L_0x7ffdf41a2f30;  alias, 1 drivers
v0x7ffdf4136080_0 .net "input_b", 0 0, L_0x7ffdf4196c70;  alias, 1 drivers
v0x7ffdf4136120_0 .net "invert_sel", 0 0, L_0x7ffdf41a3450;  1 drivers
v0x7ffdf4136200_0 .net "output_c", 0 0, L_0x7ffdf41a35e0;  alias, 1 drivers
v0x7ffdf4136290_0 .net "sel", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
S_0x7ffdf4136370 .scope module, "select_F" "MUX_4_1" 4 64, 4 15 0, S_0x7ffdf4134ac0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /INPUT 1 "input_c";
    .port_info 3 /INPUT 1 "input_d";
    .port_info 4 /OUTPUT 1 "output_e";
    .port_info 5 /INPUT 1 "sel_0";
    .port_info 6 /INPUT 1 "sel_1";
L_0x7ffdf41a3c90 .functor NOT 1, L_0x7ffdf41a4380, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a3d00 .functor NOT 1, L_0x7ffdf41a44a0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a3d90 .functor AND 1, L_0x7ffdf41a36d0, L_0x7ffdf41a3c90, L_0x7ffdf41a3d00, C4<1>;
L_0x7ffdf41a3ec0 .functor AND 1, L_0x7ffdf41a3880, L_0x7ffdf41a4380, L_0x7ffdf41a3d00, C4<1>;
L_0x7ffdf41a3f90 .functor AND 1, L_0x7ffdf41a3960, L_0x7ffdf41a3c90, L_0x7ffdf41a44a0, C4<1>;
L_0x7ffdf41a40b0 .functor AND 1, L_0x7ffdf35634d0, L_0x7ffdf41a4380, L_0x7ffdf41a44a0, C4<1>;
L_0x7ffdf41a4160 .functor OR 1, L_0x7ffdf41a3d90, L_0x7ffdf41a3ec0, L_0x7ffdf41a3f90, L_0x7ffdf41a40b0;
v0x7ffdf4136620_0 .net "and_a", 0 0, L_0x7ffdf41a3d90;  1 drivers
v0x7ffdf41366d0_0 .net "and_b", 0 0, L_0x7ffdf41a3ec0;  1 drivers
v0x7ffdf4136770_0 .net "and_c", 0 0, L_0x7ffdf41a3f90;  1 drivers
v0x7ffdf4136800_0 .net "and_d", 0 0, L_0x7ffdf41a40b0;  1 drivers
v0x7ffdf41368a0_0 .net "input_a", 0 0, L_0x7ffdf41a36d0;  alias, 1 drivers
v0x7ffdf4136980_0 .net "input_b", 0 0, L_0x7ffdf41a3880;  alias, 1 drivers
v0x7ffdf4136a20_0 .net "input_c", 0 0, L_0x7ffdf41a3960;  alias, 1 drivers
v0x7ffdf4136ab0_0 .net "input_d", 0 0, L_0x7ffdf35634d0;  alias, 1 drivers
v0x7ffdf4136b40_0 .net "output_e", 0 0, L_0x7ffdf41a4160;  alias, 1 drivers
v0x7ffdf4136c60_0 .net "sel_0", 0 0, L_0x7ffdf41a4380;  1 drivers
v0x7ffdf4136d00_0 .net "sel_0_invert", 0 0, L_0x7ffdf41a3c90;  1 drivers
v0x7ffdf4136da0_0 .net "sel_1", 0 0, L_0x7ffdf41a44a0;  1 drivers
v0x7ffdf4136e40_0 .net "sel_1_invert", 0 0, L_0x7ffdf41a3d00;  1 drivers
S_0x7ffdf4137ad0 .scope module, "ALU_19" "ALU_1bit" 3 34, 4 38 0, S_0x7ffdf36f4670;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "result";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "a";
    .port_info 3 /INPUT 1 "b";
    .port_info 4 /INPUT 1 "invertA";
    .port_info 5 /INPUT 1 "invertB";
    .port_info 6 /INPUT 2 "operation";
    .port_info 7 /INPUT 1 "carryIn";
    .port_info 8 /INPUT 1 "less";
L_0x7ffdf41a4810 .functor NOT 1, L_0x7ffdf41a5ce0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a4880 .functor NOT 1, L_0x7ffdf41a46e0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a4df0 .functor AND 1, L_0x7ffdf41a4a80, L_0x7ffdf41a4d00, C4<1>, C4<1>;
L_0x7ffdf41a4fa0 .functor OR 1, L_0x7ffdf41a4a80, L_0x7ffdf41a4d00, C4<0>, C4<0>;
v0x7ffdf4139f60_0 .net "a", 0 0, L_0x7ffdf41a5ce0;  1 drivers
v0x7ffdf413a020_0 .net "and_ab", 0 0, L_0x7ffdf41a4df0;  1 drivers
v0x7ffdf413a0b0_0 .net "b", 0 0, L_0x7ffdf41a46e0;  1 drivers
v0x7ffdf413a160_0 .net "carryIn", 0 0, L_0x7ffdf41a3b50;  alias, 1 drivers
v0x7ffdf413a1f0_0 .net "carryOut", 0 0, L_0x7ffdf41a5270;  alias, 1 drivers
v0x7ffdf413a2c0_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf413a350_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf413a3e0_0 .net "invert_a", 0 0, L_0x7ffdf41a4810;  1 drivers
v0x7ffdf413a490_0 .net "invert_b", 0 0, L_0x7ffdf41a4880;  1 drivers
L_0x7ffdf3563518 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7ffdf413a5c0_0 .net "less", 0 0, L_0x7ffdf3563518;  1 drivers
v0x7ffdf413a650_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf413a6e0_0 .net "or_ab", 0 0, L_0x7ffdf41a4fa0;  1 drivers
v0x7ffdf413a770_0 .net "result", 0 0, L_0x7ffdf41a5880;  1 drivers
v0x7ffdf413a820_0 .net "select_a", 0 0, L_0x7ffdf41a4a80;  1 drivers
v0x7ffdf413a8f0_0 .net "select_b", 0 0, L_0x7ffdf41a4d00;  1 drivers
v0x7ffdf413a9c0_0 .net "sum_ans", 0 0, L_0x7ffdf41a5080;  1 drivers
L_0x7ffdf41a5aa0 .part L_0x7ffdf41c3a00, 0, 1;
L_0x7ffdf41a5bc0 .part L_0x7ffdf41c3a00, 1, 1;
S_0x7ffdf4137d70 .scope module, "adder" "Full_adder" 4 63, 5 1 0, S_0x7ffdf4137ad0;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "carryIn";
    .port_info 3 /INPUT 1 "input1";
    .port_info 4 /INPUT 1 "input2";
L_0x7ffdf41a5010 .functor XOR 1, L_0x7ffdf41a4a80, L_0x7ffdf41a4d00, C4<0>, C4<0>;
L_0x7ffdf41a5080 .functor XOR 1, L_0x7ffdf41a5010, L_0x7ffdf41a3b50, C4<0>, C4<0>;
L_0x7ffdf41a5130 .functor AND 1, L_0x7ffdf41a4a80, L_0x7ffdf41a4d00, C4<1>, C4<1>;
L_0x7ffdf41a51c0 .functor AND 1, L_0x7ffdf41a5010, L_0x7ffdf41a3b50, C4<1>, C4<1>;
L_0x7ffdf41a5270 .functor OR 1, L_0x7ffdf41a5130, L_0x7ffdf41a51c0, C4<0>, C4<0>;
v0x7ffdf4137fe0_0 .net "carryIn", 0 0, L_0x7ffdf41a3b50;  alias, 1 drivers
v0x7ffdf41380b0_0 .net "carryOut", 0 0, L_0x7ffdf41a5270;  alias, 1 drivers
v0x7ffdf4138140_0 .net "input1", 0 0, L_0x7ffdf41a4a80;  alias, 1 drivers
v0x7ffdf41381d0_0 .net "input2", 0 0, L_0x7ffdf41a4d00;  alias, 1 drivers
v0x7ffdf4138260_0 .net "sum", 0 0, L_0x7ffdf41a5080;  alias, 1 drivers
v0x7ffdf4138330_0 .net "w1", 0 0, L_0x7ffdf41a5010;  1 drivers
v0x7ffdf41383c0_0 .net "w2", 0 0, L_0x7ffdf41a5130;  1 drivers
v0x7ffdf4138460_0 .net "w3", 0 0, L_0x7ffdf41a51c0;  1 drivers
S_0x7ffdf4138580 .scope module, "select_A" "MUX_2_1" 4 57, 4 1 0, S_0x7ffdf4137ad0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41a48f0 .functor NOT 1, L_0x7ffdf41c38c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a4960 .functor AND 1, L_0x7ffdf41a5ce0, L_0x7ffdf41a48f0, C4<1>, C4<1>;
L_0x7ffdf41a4a10 .functor AND 1, L_0x7ffdf41a4810, L_0x7ffdf41c38c0, C4<1>, C4<1>;
L_0x7ffdf41a4a80 .functor OR 1, L_0x7ffdf41a4960, L_0x7ffdf41a4a10, C4<0>, C4<0>;
v0x7ffdf41387a0_0 .net "and_a", 0 0, L_0x7ffdf41a4960;  1 drivers
v0x7ffdf4138830_0 .net "and_b", 0 0, L_0x7ffdf41a4a10;  1 drivers
v0x7ffdf41388c0_0 .net "input_a", 0 0, L_0x7ffdf41a5ce0;  alias, 1 drivers
v0x7ffdf4138970_0 .net "input_b", 0 0, L_0x7ffdf41a4810;  alias, 1 drivers
v0x7ffdf4138a10_0 .net "invert_sel", 0 0, L_0x7ffdf41a48f0;  1 drivers
v0x7ffdf4138af0_0 .net "output_c", 0 0, L_0x7ffdf41a4a80;  alias, 1 drivers
v0x7ffdf4138b80_0 .net "sel", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
S_0x7ffdf4138c60 .scope module, "select_B" "MUX_2_1" 4 58, 4 1 0, S_0x7ffdf4137ad0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41a4b70 .functor NOT 1, L_0x7ffdf41c3960, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a4be0 .functor AND 1, L_0x7ffdf41a46e0, L_0x7ffdf41a4b70, C4<1>, C4<1>;
L_0x7ffdf41a4c90 .functor AND 1, L_0x7ffdf41a4880, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf41a4d00 .functor OR 1, L_0x7ffdf41a4be0, L_0x7ffdf41a4c90, C4<0>, C4<0>;
v0x7ffdf4138ea0_0 .net "and_a", 0 0, L_0x7ffdf41a4be0;  1 drivers
v0x7ffdf4138f40_0 .net "and_b", 0 0, L_0x7ffdf41a4c90;  1 drivers
v0x7ffdf4138fe0_0 .net "input_a", 0 0, L_0x7ffdf41a46e0;  alias, 1 drivers
v0x7ffdf4139090_0 .net "input_b", 0 0, L_0x7ffdf41a4880;  alias, 1 drivers
v0x7ffdf4139130_0 .net "invert_sel", 0 0, L_0x7ffdf41a4b70;  1 drivers
v0x7ffdf4139210_0 .net "output_c", 0 0, L_0x7ffdf41a4d00;  alias, 1 drivers
v0x7ffdf41392a0_0 .net "sel", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
S_0x7ffdf4139380 .scope module, "select_F" "MUX_4_1" 4 64, 4 15 0, S_0x7ffdf4137ad0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /INPUT 1 "input_c";
    .port_info 3 /INPUT 1 "input_d";
    .port_info 4 /OUTPUT 1 "output_e";
    .port_info 5 /INPUT 1 "sel_0";
    .port_info 6 /INPUT 1 "sel_1";
L_0x7ffdf41a53b0 .functor NOT 1, L_0x7ffdf41a5aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a5420 .functor NOT 1, L_0x7ffdf41a5bc0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a54b0 .functor AND 1, L_0x7ffdf41a4df0, L_0x7ffdf41a53b0, L_0x7ffdf41a5420, C4<1>;
L_0x7ffdf41a55e0 .functor AND 1, L_0x7ffdf41a4fa0, L_0x7ffdf41a5aa0, L_0x7ffdf41a5420, C4<1>;
L_0x7ffdf41a56b0 .functor AND 1, L_0x7ffdf41a5080, L_0x7ffdf41a53b0, L_0x7ffdf41a5bc0, C4<1>;
L_0x7ffdf41a57d0 .functor AND 1, L_0x7ffdf3563518, L_0x7ffdf41a5aa0, L_0x7ffdf41a5bc0, C4<1>;
L_0x7ffdf41a5880 .functor OR 1, L_0x7ffdf41a54b0, L_0x7ffdf41a55e0, L_0x7ffdf41a56b0, L_0x7ffdf41a57d0;
v0x7ffdf4139630_0 .net "and_a", 0 0, L_0x7ffdf41a54b0;  1 drivers
v0x7ffdf41396e0_0 .net "and_b", 0 0, L_0x7ffdf41a55e0;  1 drivers
v0x7ffdf4139780_0 .net "and_c", 0 0, L_0x7ffdf41a56b0;  1 drivers
v0x7ffdf4139810_0 .net "and_d", 0 0, L_0x7ffdf41a57d0;  1 drivers
v0x7ffdf41398b0_0 .net "input_a", 0 0, L_0x7ffdf41a4df0;  alias, 1 drivers
v0x7ffdf4139990_0 .net "input_b", 0 0, L_0x7ffdf41a4fa0;  alias, 1 drivers
v0x7ffdf4139a30_0 .net "input_c", 0 0, L_0x7ffdf41a5080;  alias, 1 drivers
v0x7ffdf4139ac0_0 .net "input_d", 0 0, L_0x7ffdf3563518;  alias, 1 drivers
v0x7ffdf4139b50_0 .net "output_e", 0 0, L_0x7ffdf41a5880;  alias, 1 drivers
v0x7ffdf4139c70_0 .net "sel_0", 0 0, L_0x7ffdf41a5aa0;  1 drivers
v0x7ffdf4139d10_0 .net "sel_0_invert", 0 0, L_0x7ffdf41a53b0;  1 drivers
v0x7ffdf4139db0_0 .net "sel_1", 0 0, L_0x7ffdf41a5bc0;  1 drivers
v0x7ffdf4139e50_0 .net "sel_1_invert", 0 0, L_0x7ffdf41a5420;  1 drivers
S_0x7ffdf413aae0 .scope module, "ALU_2" "ALU_1bit" 3 17, 4 38 0, S_0x7ffdf36f4670;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "result";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "a";
    .port_info 3 /INPUT 1 "b";
    .port_info 4 /INPUT 1 "invertA";
    .port_info 5 /INPUT 1 "invertB";
    .port_info 6 /INPUT 2 "operation";
    .port_info 7 /INPUT 1 "carryIn";
    .port_info 8 /INPUT 1 "less";
L_0x7ffdf418c9b0 .functor NOT 1, L_0x7ffdf418dea0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf418ca20 .functor NOT 1, L_0x7ffdf418e040, C4<0>, C4<0>, C4<0>;
L_0x7ffdf418cf90 .functor AND 1, L_0x7ffdf418cc20, L_0x7ffdf418cea0, C4<1>, C4<1>;
L_0x7ffdf418d140 .functor OR 1, L_0x7ffdf418cc20, L_0x7ffdf418cea0, C4<0>, C4<0>;
v0x7ffdf413cf70_0 .net "a", 0 0, L_0x7ffdf418dea0;  1 drivers
v0x7ffdf413d030_0 .net "and_ab", 0 0, L_0x7ffdf418cf90;  1 drivers
v0x7ffdf413d0c0_0 .net "b", 0 0, L_0x7ffdf418e040;  1 drivers
v0x7ffdf413d170_0 .net "carryIn", 0 0, L_0x7ffdf418bd00;  alias, 1 drivers
v0x7ffdf413d200_0 .net "carryOut", 0 0, L_0x7ffdf418d430;  alias, 1 drivers
v0x7ffdf413d2d0_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf413d360_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf413d3f0_0 .net "invert_a", 0 0, L_0x7ffdf418c9b0;  1 drivers
v0x7ffdf413d4a0_0 .net "invert_b", 0 0, L_0x7ffdf418ca20;  1 drivers
L_0x7ffdf3563050 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7ffdf413d5d0_0 .net "less", 0 0, L_0x7ffdf3563050;  1 drivers
v0x7ffdf413d660_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf413d6f0_0 .net "or_ab", 0 0, L_0x7ffdf418d140;  1 drivers
v0x7ffdf413d780_0 .net "result", 0 0, L_0x7ffdf418da40;  1 drivers
v0x7ffdf413d830_0 .net "select_a", 0 0, L_0x7ffdf418cc20;  1 drivers
v0x7ffdf413d900_0 .net "select_b", 0 0, L_0x7ffdf418cea0;  1 drivers
v0x7ffdf413d9d0_0 .net "sum_ans", 0 0, L_0x7ffdf418d220;  1 drivers
L_0x7ffdf418dc60 .part L_0x7ffdf41c3a00, 0, 1;
L_0x7ffdf418dd80 .part L_0x7ffdf41c3a00, 1, 1;
S_0x7ffdf413ad80 .scope module, "adder" "Full_adder" 4 63, 5 1 0, S_0x7ffdf413aae0;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "carryIn";
    .port_info 3 /INPUT 1 "input1";
    .port_info 4 /INPUT 1 "input2";
L_0x7ffdf418d1b0 .functor XOR 1, L_0x7ffdf418cc20, L_0x7ffdf418cea0, C4<0>, C4<0>;
L_0x7ffdf418d220 .functor XOR 1, L_0x7ffdf418d1b0, L_0x7ffdf418bd00, C4<0>, C4<0>;
L_0x7ffdf418d2d0 .functor AND 1, L_0x7ffdf418cc20, L_0x7ffdf418cea0, C4<1>, C4<1>;
L_0x7ffdf418d380 .functor AND 1, L_0x7ffdf418d1b0, L_0x7ffdf418bd00, C4<1>, C4<1>;
L_0x7ffdf418d430 .functor OR 1, L_0x7ffdf418d2d0, L_0x7ffdf418d380, C4<0>, C4<0>;
v0x7ffdf413aff0_0 .net "carryIn", 0 0, L_0x7ffdf418bd00;  alias, 1 drivers
v0x7ffdf413b0c0_0 .net "carryOut", 0 0, L_0x7ffdf418d430;  alias, 1 drivers
v0x7ffdf413b150_0 .net "input1", 0 0, L_0x7ffdf418cc20;  alias, 1 drivers
v0x7ffdf413b1e0_0 .net "input2", 0 0, L_0x7ffdf418cea0;  alias, 1 drivers
v0x7ffdf413b270_0 .net "sum", 0 0, L_0x7ffdf418d220;  alias, 1 drivers
v0x7ffdf413b340_0 .net "w1", 0 0, L_0x7ffdf418d1b0;  1 drivers
v0x7ffdf413b3d0_0 .net "w2", 0 0, L_0x7ffdf418d2d0;  1 drivers
v0x7ffdf413b470_0 .net "w3", 0 0, L_0x7ffdf418d380;  1 drivers
S_0x7ffdf413b590 .scope module, "select_A" "MUX_2_1" 4 57, 4 1 0, S_0x7ffdf413aae0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf418ca90 .functor NOT 1, L_0x7ffdf41c38c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf418cb00 .functor AND 1, L_0x7ffdf418dea0, L_0x7ffdf418ca90, C4<1>, C4<1>;
L_0x7ffdf418cbb0 .functor AND 1, L_0x7ffdf418c9b0, L_0x7ffdf41c38c0, C4<1>, C4<1>;
L_0x7ffdf418cc20 .functor OR 1, L_0x7ffdf418cb00, L_0x7ffdf418cbb0, C4<0>, C4<0>;
v0x7ffdf413b7b0_0 .net "and_a", 0 0, L_0x7ffdf418cb00;  1 drivers
v0x7ffdf413b840_0 .net "and_b", 0 0, L_0x7ffdf418cbb0;  1 drivers
v0x7ffdf413b8d0_0 .net "input_a", 0 0, L_0x7ffdf418dea0;  alias, 1 drivers
v0x7ffdf413b980_0 .net "input_b", 0 0, L_0x7ffdf418c9b0;  alias, 1 drivers
v0x7ffdf413ba20_0 .net "invert_sel", 0 0, L_0x7ffdf418ca90;  1 drivers
v0x7ffdf413bb00_0 .net "output_c", 0 0, L_0x7ffdf418cc20;  alias, 1 drivers
v0x7ffdf413bb90_0 .net "sel", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
S_0x7ffdf413bc70 .scope module, "select_B" "MUX_2_1" 4 58, 4 1 0, S_0x7ffdf413aae0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf418cd10 .functor NOT 1, L_0x7ffdf41c3960, C4<0>, C4<0>, C4<0>;
L_0x7ffdf418cd80 .functor AND 1, L_0x7ffdf418e040, L_0x7ffdf418cd10, C4<1>, C4<1>;
L_0x7ffdf418ce30 .functor AND 1, L_0x7ffdf418ca20, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf418cea0 .functor OR 1, L_0x7ffdf418cd80, L_0x7ffdf418ce30, C4<0>, C4<0>;
v0x7ffdf413beb0_0 .net "and_a", 0 0, L_0x7ffdf418cd80;  1 drivers
v0x7ffdf413bf50_0 .net "and_b", 0 0, L_0x7ffdf418ce30;  1 drivers
v0x7ffdf413bff0_0 .net "input_a", 0 0, L_0x7ffdf418e040;  alias, 1 drivers
v0x7ffdf413c0a0_0 .net "input_b", 0 0, L_0x7ffdf418ca20;  alias, 1 drivers
v0x7ffdf413c140_0 .net "invert_sel", 0 0, L_0x7ffdf418cd10;  1 drivers
v0x7ffdf413c220_0 .net "output_c", 0 0, L_0x7ffdf418cea0;  alias, 1 drivers
v0x7ffdf413c2b0_0 .net "sel", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
S_0x7ffdf413c390 .scope module, "select_F" "MUX_4_1" 4 64, 4 15 0, S_0x7ffdf413aae0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /INPUT 1 "input_c";
    .port_info 3 /INPUT 1 "input_d";
    .port_info 4 /OUTPUT 1 "output_e";
    .port_info 5 /INPUT 1 "sel_0";
    .port_info 6 /INPUT 1 "sel_1";
L_0x7ffdf418d570 .functor NOT 1, L_0x7ffdf418dc60, C4<0>, C4<0>, C4<0>;
L_0x7ffdf418d5e0 .functor NOT 1, L_0x7ffdf418dd80, C4<0>, C4<0>, C4<0>;
L_0x7ffdf418d670 .functor AND 1, L_0x7ffdf418cf90, L_0x7ffdf418d570, L_0x7ffdf418d5e0, C4<1>;
L_0x7ffdf418d7a0 .functor AND 1, L_0x7ffdf418d140, L_0x7ffdf418dc60, L_0x7ffdf418d5e0, C4<1>;
L_0x7ffdf418d870 .functor AND 1, L_0x7ffdf418d220, L_0x7ffdf418d570, L_0x7ffdf418dd80, C4<1>;
L_0x7ffdf418d990 .functor AND 1, L_0x7ffdf3563050, L_0x7ffdf418dc60, L_0x7ffdf418dd80, C4<1>;
L_0x7ffdf418da40 .functor OR 1, L_0x7ffdf418d670, L_0x7ffdf418d7a0, L_0x7ffdf418d870, L_0x7ffdf418d990;
v0x7ffdf413c640_0 .net "and_a", 0 0, L_0x7ffdf418d670;  1 drivers
v0x7ffdf413c6f0_0 .net "and_b", 0 0, L_0x7ffdf418d7a0;  1 drivers
v0x7ffdf413c790_0 .net "and_c", 0 0, L_0x7ffdf418d870;  1 drivers
v0x7ffdf413c820_0 .net "and_d", 0 0, L_0x7ffdf418d990;  1 drivers
v0x7ffdf413c8c0_0 .net "input_a", 0 0, L_0x7ffdf418cf90;  alias, 1 drivers
v0x7ffdf413c9a0_0 .net "input_b", 0 0, L_0x7ffdf418d140;  alias, 1 drivers
v0x7ffdf413ca40_0 .net "input_c", 0 0, L_0x7ffdf418d220;  alias, 1 drivers
v0x7ffdf413cad0_0 .net "input_d", 0 0, L_0x7ffdf3563050;  alias, 1 drivers
v0x7ffdf413cb60_0 .net "output_e", 0 0, L_0x7ffdf418da40;  alias, 1 drivers
v0x7ffdf413cc80_0 .net "sel_0", 0 0, L_0x7ffdf418dc60;  1 drivers
v0x7ffdf413cd20_0 .net "sel_0_invert", 0 0, L_0x7ffdf418d570;  1 drivers
v0x7ffdf413cdc0_0 .net "sel_1", 0 0, L_0x7ffdf418dd80;  1 drivers
v0x7ffdf413ce60_0 .net "sel_1_invert", 0 0, L_0x7ffdf418d5e0;  1 drivers
S_0x7ffdf413daf0 .scope module, "ALU_20" "ALU_1bit" 3 35, 4 38 0, S_0x7ffdf36f4670;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "result";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "a";
    .port_info 3 /INPUT 1 "b";
    .port_info 4 /INPUT 1 "invertA";
    .port_info 5 /INPUT 1 "invertB";
    .port_info 6 /INPUT 2 "operation";
    .port_info 7 /INPUT 1 "carryIn";
    .port_info 8 /INPUT 1 "less";
L_0x7ffdf41a5f40 .functor NOT 1, L_0x7ffdf41a7410, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a5fb0 .functor NOT 1, L_0x7ffdf41a5e00, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a6520 .functor AND 1, L_0x7ffdf41a61b0, L_0x7ffdf41a6430, C4<1>, C4<1>;
L_0x7ffdf41a66d0 .functor OR 1, L_0x7ffdf41a61b0, L_0x7ffdf41a6430, C4<0>, C4<0>;
v0x7ffdf413ff80_0 .net "a", 0 0, L_0x7ffdf41a7410;  1 drivers
v0x7ffdf4140040_0 .net "and_ab", 0 0, L_0x7ffdf41a6520;  1 drivers
v0x7ffdf41400d0_0 .net "b", 0 0, L_0x7ffdf41a5e00;  1 drivers
v0x7ffdf4140180_0 .net "carryIn", 0 0, L_0x7ffdf41a5270;  alias, 1 drivers
v0x7ffdf4140210_0 .net "carryOut", 0 0, L_0x7ffdf41a69a0;  alias, 1 drivers
v0x7ffdf41402e0_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf4140370_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf4140400_0 .net "invert_a", 0 0, L_0x7ffdf41a5f40;  1 drivers
v0x7ffdf41404b0_0 .net "invert_b", 0 0, L_0x7ffdf41a5fb0;  1 drivers
L_0x7ffdf3563560 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7ffdf41405e0_0 .net "less", 0 0, L_0x7ffdf3563560;  1 drivers
v0x7ffdf4140670_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf4140700_0 .net "or_ab", 0 0, L_0x7ffdf41a66d0;  1 drivers
v0x7ffdf4140790_0 .net "result", 0 0, L_0x7ffdf41a6fb0;  1 drivers
v0x7ffdf4140840_0 .net "select_a", 0 0, L_0x7ffdf41a61b0;  1 drivers
v0x7ffdf4140910_0 .net "select_b", 0 0, L_0x7ffdf41a6430;  1 drivers
v0x7ffdf41409e0_0 .net "sum_ans", 0 0, L_0x7ffdf41a67b0;  1 drivers
L_0x7ffdf41a71d0 .part L_0x7ffdf41c3a00, 0, 1;
L_0x7ffdf41a72f0 .part L_0x7ffdf41c3a00, 1, 1;
S_0x7ffdf413dd90 .scope module, "adder" "Full_adder" 4 63, 5 1 0, S_0x7ffdf413daf0;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "carryIn";
    .port_info 3 /INPUT 1 "input1";
    .port_info 4 /INPUT 1 "input2";
L_0x7ffdf41a6740 .functor XOR 1, L_0x7ffdf41a61b0, L_0x7ffdf41a6430, C4<0>, C4<0>;
L_0x7ffdf41a67b0 .functor XOR 1, L_0x7ffdf41a6740, L_0x7ffdf41a5270, C4<0>, C4<0>;
L_0x7ffdf41a6860 .functor AND 1, L_0x7ffdf41a61b0, L_0x7ffdf41a6430, C4<1>, C4<1>;
L_0x7ffdf41a68f0 .functor AND 1, L_0x7ffdf41a6740, L_0x7ffdf41a5270, C4<1>, C4<1>;
L_0x7ffdf41a69a0 .functor OR 1, L_0x7ffdf41a6860, L_0x7ffdf41a68f0, C4<0>, C4<0>;
v0x7ffdf413e000_0 .net "carryIn", 0 0, L_0x7ffdf41a5270;  alias, 1 drivers
v0x7ffdf413e0d0_0 .net "carryOut", 0 0, L_0x7ffdf41a69a0;  alias, 1 drivers
v0x7ffdf413e160_0 .net "input1", 0 0, L_0x7ffdf41a61b0;  alias, 1 drivers
v0x7ffdf413e1f0_0 .net "input2", 0 0, L_0x7ffdf41a6430;  alias, 1 drivers
v0x7ffdf413e280_0 .net "sum", 0 0, L_0x7ffdf41a67b0;  alias, 1 drivers
v0x7ffdf413e350_0 .net "w1", 0 0, L_0x7ffdf41a6740;  1 drivers
v0x7ffdf413e3e0_0 .net "w2", 0 0, L_0x7ffdf41a6860;  1 drivers
v0x7ffdf413e480_0 .net "w3", 0 0, L_0x7ffdf41a68f0;  1 drivers
S_0x7ffdf413e5a0 .scope module, "select_A" "MUX_2_1" 4 57, 4 1 0, S_0x7ffdf413daf0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41a6020 .functor NOT 1, L_0x7ffdf41c38c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a6090 .functor AND 1, L_0x7ffdf41a7410, L_0x7ffdf41a6020, C4<1>, C4<1>;
L_0x7ffdf41a6140 .functor AND 1, L_0x7ffdf41a5f40, L_0x7ffdf41c38c0, C4<1>, C4<1>;
L_0x7ffdf41a61b0 .functor OR 1, L_0x7ffdf41a6090, L_0x7ffdf41a6140, C4<0>, C4<0>;
v0x7ffdf413e7c0_0 .net "and_a", 0 0, L_0x7ffdf41a6090;  1 drivers
v0x7ffdf413e850_0 .net "and_b", 0 0, L_0x7ffdf41a6140;  1 drivers
v0x7ffdf413e8e0_0 .net "input_a", 0 0, L_0x7ffdf41a7410;  alias, 1 drivers
v0x7ffdf413e990_0 .net "input_b", 0 0, L_0x7ffdf41a5f40;  alias, 1 drivers
v0x7ffdf413ea30_0 .net "invert_sel", 0 0, L_0x7ffdf41a6020;  1 drivers
v0x7ffdf413eb10_0 .net "output_c", 0 0, L_0x7ffdf41a61b0;  alias, 1 drivers
v0x7ffdf413eba0_0 .net "sel", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
S_0x7ffdf413ec80 .scope module, "select_B" "MUX_2_1" 4 58, 4 1 0, S_0x7ffdf413daf0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41a62a0 .functor NOT 1, L_0x7ffdf41c3960, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a6310 .functor AND 1, L_0x7ffdf41a5e00, L_0x7ffdf41a62a0, C4<1>, C4<1>;
L_0x7ffdf41a63c0 .functor AND 1, L_0x7ffdf41a5fb0, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf41a6430 .functor OR 1, L_0x7ffdf41a6310, L_0x7ffdf41a63c0, C4<0>, C4<0>;
v0x7ffdf413eec0_0 .net "and_a", 0 0, L_0x7ffdf41a6310;  1 drivers
v0x7ffdf413ef60_0 .net "and_b", 0 0, L_0x7ffdf41a63c0;  1 drivers
v0x7ffdf413f000_0 .net "input_a", 0 0, L_0x7ffdf41a5e00;  alias, 1 drivers
v0x7ffdf413f0b0_0 .net "input_b", 0 0, L_0x7ffdf41a5fb0;  alias, 1 drivers
v0x7ffdf413f150_0 .net "invert_sel", 0 0, L_0x7ffdf41a62a0;  1 drivers
v0x7ffdf413f230_0 .net "output_c", 0 0, L_0x7ffdf41a6430;  alias, 1 drivers
v0x7ffdf413f2c0_0 .net "sel", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
S_0x7ffdf413f3a0 .scope module, "select_F" "MUX_4_1" 4 64, 4 15 0, S_0x7ffdf413daf0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /INPUT 1 "input_c";
    .port_info 3 /INPUT 1 "input_d";
    .port_info 4 /OUTPUT 1 "output_e";
    .port_info 5 /INPUT 1 "sel_0";
    .port_info 6 /INPUT 1 "sel_1";
L_0x7ffdf41a6ae0 .functor NOT 1, L_0x7ffdf41a71d0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a6b50 .functor NOT 1, L_0x7ffdf41a72f0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a6be0 .functor AND 1, L_0x7ffdf41a6520, L_0x7ffdf41a6ae0, L_0x7ffdf41a6b50, C4<1>;
L_0x7ffdf41a6d10 .functor AND 1, L_0x7ffdf41a66d0, L_0x7ffdf41a71d0, L_0x7ffdf41a6b50, C4<1>;
L_0x7ffdf41a6de0 .functor AND 1, L_0x7ffdf41a67b0, L_0x7ffdf41a6ae0, L_0x7ffdf41a72f0, C4<1>;
L_0x7ffdf41a6f00 .functor AND 1, L_0x7ffdf3563560, L_0x7ffdf41a71d0, L_0x7ffdf41a72f0, C4<1>;
L_0x7ffdf41a6fb0 .functor OR 1, L_0x7ffdf41a6be0, L_0x7ffdf41a6d10, L_0x7ffdf41a6de0, L_0x7ffdf41a6f00;
v0x7ffdf413f650_0 .net "and_a", 0 0, L_0x7ffdf41a6be0;  1 drivers
v0x7ffdf413f700_0 .net "and_b", 0 0, L_0x7ffdf41a6d10;  1 drivers
v0x7ffdf413f7a0_0 .net "and_c", 0 0, L_0x7ffdf41a6de0;  1 drivers
v0x7ffdf413f830_0 .net "and_d", 0 0, L_0x7ffdf41a6f00;  1 drivers
v0x7ffdf413f8d0_0 .net "input_a", 0 0, L_0x7ffdf41a6520;  alias, 1 drivers
v0x7ffdf413f9b0_0 .net "input_b", 0 0, L_0x7ffdf41a66d0;  alias, 1 drivers
v0x7ffdf413fa50_0 .net "input_c", 0 0, L_0x7ffdf41a67b0;  alias, 1 drivers
v0x7ffdf413fae0_0 .net "input_d", 0 0, L_0x7ffdf3563560;  alias, 1 drivers
v0x7ffdf413fb70_0 .net "output_e", 0 0, L_0x7ffdf41a6fb0;  alias, 1 drivers
v0x7ffdf413fc90_0 .net "sel_0", 0 0, L_0x7ffdf41a71d0;  1 drivers
v0x7ffdf413fd30_0 .net "sel_0_invert", 0 0, L_0x7ffdf41a6ae0;  1 drivers
v0x7ffdf413fdd0_0 .net "sel_1", 0 0, L_0x7ffdf41a72f0;  1 drivers
v0x7ffdf413fe70_0 .net "sel_1_invert", 0 0, L_0x7ffdf41a6b50;  1 drivers
S_0x7ffdf4140b00 .scope module, "ALU_21" "ALU_1bit" 3 36, 4 38 0, S_0x7ffdf36f4670;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "result";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "a";
    .port_info 3 /INPUT 1 "b";
    .port_info 4 /INPUT 1 "invertA";
    .port_info 5 /INPUT 1 "invertB";
    .port_info 6 /INPUT 2 "operation";
    .port_info 7 /INPUT 1 "carryIn";
    .port_info 8 /INPUT 1 "less";
L_0x7ffdf41a7680 .functor NOT 1, L_0x7ffdf41a8b30, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a76f0 .functor NOT 1, L_0x7ffdf41a7530, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a7c60 .functor AND 1, L_0x7ffdf41a78f0, L_0x7ffdf41a7b70, C4<1>, C4<1>;
L_0x7ffdf41a7e10 .functor OR 1, L_0x7ffdf41a78f0, L_0x7ffdf41a7b70, C4<0>, C4<0>;
v0x7ffdf4142f90_0 .net "a", 0 0, L_0x7ffdf41a8b30;  1 drivers
v0x7ffdf4143050_0 .net "and_ab", 0 0, L_0x7ffdf41a7c60;  1 drivers
v0x7ffdf41430e0_0 .net "b", 0 0, L_0x7ffdf41a7530;  1 drivers
v0x7ffdf4143190_0 .net "carryIn", 0 0, L_0x7ffdf41a69a0;  alias, 1 drivers
v0x7ffdf4143220_0 .net "carryOut", 0 0, L_0x7ffdf41a80c0;  alias, 1 drivers
v0x7ffdf41432f0_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf4143380_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf4143410_0 .net "invert_a", 0 0, L_0x7ffdf41a7680;  1 drivers
v0x7ffdf41434c0_0 .net "invert_b", 0 0, L_0x7ffdf41a76f0;  1 drivers
L_0x7ffdf35635a8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7ffdf41435f0_0 .net "less", 0 0, L_0x7ffdf35635a8;  1 drivers
v0x7ffdf4143680_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf4143710_0 .net "or_ab", 0 0, L_0x7ffdf41a7e10;  1 drivers
v0x7ffdf41437a0_0 .net "result", 0 0, L_0x7ffdf41a86d0;  1 drivers
v0x7ffdf4143850_0 .net "select_a", 0 0, L_0x7ffdf41a78f0;  1 drivers
v0x7ffdf4143920_0 .net "select_b", 0 0, L_0x7ffdf41a7b70;  1 drivers
v0x7ffdf41439f0_0 .net "sum_ans", 0 0, L_0x7ffdf41a7ef0;  1 drivers
L_0x7ffdf41a88f0 .part L_0x7ffdf41c3a00, 0, 1;
L_0x7ffdf41a8a10 .part L_0x7ffdf41c3a00, 1, 1;
S_0x7ffdf4140da0 .scope module, "adder" "Full_adder" 4 63, 5 1 0, S_0x7ffdf4140b00;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "carryIn";
    .port_info 3 /INPUT 1 "input1";
    .port_info 4 /INPUT 1 "input2";
L_0x7ffdf41a7e80 .functor XOR 1, L_0x7ffdf41a78f0, L_0x7ffdf41a7b70, C4<0>, C4<0>;
L_0x7ffdf41a7ef0 .functor XOR 1, L_0x7ffdf41a7e80, L_0x7ffdf41a69a0, C4<0>, C4<0>;
L_0x7ffdf41a7f60 .functor AND 1, L_0x7ffdf41a78f0, L_0x7ffdf41a7b70, C4<1>, C4<1>;
L_0x7ffdf41a8010 .functor AND 1, L_0x7ffdf41a7e80, L_0x7ffdf41a69a0, C4<1>, C4<1>;
L_0x7ffdf41a80c0 .functor OR 1, L_0x7ffdf41a7f60, L_0x7ffdf41a8010, C4<0>, C4<0>;
v0x7ffdf4141010_0 .net "carryIn", 0 0, L_0x7ffdf41a69a0;  alias, 1 drivers
v0x7ffdf41410e0_0 .net "carryOut", 0 0, L_0x7ffdf41a80c0;  alias, 1 drivers
v0x7ffdf4141170_0 .net "input1", 0 0, L_0x7ffdf41a78f0;  alias, 1 drivers
v0x7ffdf4141200_0 .net "input2", 0 0, L_0x7ffdf41a7b70;  alias, 1 drivers
v0x7ffdf4141290_0 .net "sum", 0 0, L_0x7ffdf41a7ef0;  alias, 1 drivers
v0x7ffdf4141360_0 .net "w1", 0 0, L_0x7ffdf41a7e80;  1 drivers
v0x7ffdf41413f0_0 .net "w2", 0 0, L_0x7ffdf41a7f60;  1 drivers
v0x7ffdf4141490_0 .net "w3", 0 0, L_0x7ffdf41a8010;  1 drivers
S_0x7ffdf41415b0 .scope module, "select_A" "MUX_2_1" 4 57, 4 1 0, S_0x7ffdf4140b00;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41a7760 .functor NOT 1, L_0x7ffdf41c38c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a77d0 .functor AND 1, L_0x7ffdf41a8b30, L_0x7ffdf41a7760, C4<1>, C4<1>;
L_0x7ffdf41a7880 .functor AND 1, L_0x7ffdf41a7680, L_0x7ffdf41c38c0, C4<1>, C4<1>;
L_0x7ffdf41a78f0 .functor OR 1, L_0x7ffdf41a77d0, L_0x7ffdf41a7880, C4<0>, C4<0>;
v0x7ffdf41417d0_0 .net "and_a", 0 0, L_0x7ffdf41a77d0;  1 drivers
v0x7ffdf4141860_0 .net "and_b", 0 0, L_0x7ffdf41a7880;  1 drivers
v0x7ffdf41418f0_0 .net "input_a", 0 0, L_0x7ffdf41a8b30;  alias, 1 drivers
v0x7ffdf41419a0_0 .net "input_b", 0 0, L_0x7ffdf41a7680;  alias, 1 drivers
v0x7ffdf4141a40_0 .net "invert_sel", 0 0, L_0x7ffdf41a7760;  1 drivers
v0x7ffdf4141b20_0 .net "output_c", 0 0, L_0x7ffdf41a78f0;  alias, 1 drivers
v0x7ffdf4141bb0_0 .net "sel", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
S_0x7ffdf4141c90 .scope module, "select_B" "MUX_2_1" 4 58, 4 1 0, S_0x7ffdf4140b00;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41a79e0 .functor NOT 1, L_0x7ffdf41c3960, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a7a50 .functor AND 1, L_0x7ffdf41a7530, L_0x7ffdf41a79e0, C4<1>, C4<1>;
L_0x7ffdf41a7b00 .functor AND 1, L_0x7ffdf41a76f0, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf41a7b70 .functor OR 1, L_0x7ffdf41a7a50, L_0x7ffdf41a7b00, C4<0>, C4<0>;
v0x7ffdf4141ed0_0 .net "and_a", 0 0, L_0x7ffdf41a7a50;  1 drivers
v0x7ffdf4141f70_0 .net "and_b", 0 0, L_0x7ffdf41a7b00;  1 drivers
v0x7ffdf4142010_0 .net "input_a", 0 0, L_0x7ffdf41a7530;  alias, 1 drivers
v0x7ffdf41420c0_0 .net "input_b", 0 0, L_0x7ffdf41a76f0;  alias, 1 drivers
v0x7ffdf4142160_0 .net "invert_sel", 0 0, L_0x7ffdf41a79e0;  1 drivers
v0x7ffdf4142240_0 .net "output_c", 0 0, L_0x7ffdf41a7b70;  alias, 1 drivers
v0x7ffdf41422d0_0 .net "sel", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
S_0x7ffdf41423b0 .scope module, "select_F" "MUX_4_1" 4 64, 4 15 0, S_0x7ffdf4140b00;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /INPUT 1 "input_c";
    .port_info 3 /INPUT 1 "input_d";
    .port_info 4 /OUTPUT 1 "output_e";
    .port_info 5 /INPUT 1 "sel_0";
    .port_info 6 /INPUT 1 "sel_1";
L_0x7ffdf41a8200 .functor NOT 1, L_0x7ffdf41a88f0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a8270 .functor NOT 1, L_0x7ffdf41a8a10, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a8300 .functor AND 1, L_0x7ffdf41a7c60, L_0x7ffdf41a8200, L_0x7ffdf41a8270, C4<1>;
L_0x7ffdf41a8430 .functor AND 1, L_0x7ffdf41a7e10, L_0x7ffdf41a88f0, L_0x7ffdf41a8270, C4<1>;
L_0x7ffdf41a8500 .functor AND 1, L_0x7ffdf41a7ef0, L_0x7ffdf41a8200, L_0x7ffdf41a8a10, C4<1>;
L_0x7ffdf41a8620 .functor AND 1, L_0x7ffdf35635a8, L_0x7ffdf41a88f0, L_0x7ffdf41a8a10, C4<1>;
L_0x7ffdf41a86d0 .functor OR 1, L_0x7ffdf41a8300, L_0x7ffdf41a8430, L_0x7ffdf41a8500, L_0x7ffdf41a8620;
v0x7ffdf4142660_0 .net "and_a", 0 0, L_0x7ffdf41a8300;  1 drivers
v0x7ffdf4142710_0 .net "and_b", 0 0, L_0x7ffdf41a8430;  1 drivers
v0x7ffdf41427b0_0 .net "and_c", 0 0, L_0x7ffdf41a8500;  1 drivers
v0x7ffdf4142840_0 .net "and_d", 0 0, L_0x7ffdf41a8620;  1 drivers
v0x7ffdf41428e0_0 .net "input_a", 0 0, L_0x7ffdf41a7c60;  alias, 1 drivers
v0x7ffdf41429c0_0 .net "input_b", 0 0, L_0x7ffdf41a7e10;  alias, 1 drivers
v0x7ffdf4142a60_0 .net "input_c", 0 0, L_0x7ffdf41a7ef0;  alias, 1 drivers
v0x7ffdf4142af0_0 .net "input_d", 0 0, L_0x7ffdf35635a8;  alias, 1 drivers
v0x7ffdf4142b80_0 .net "output_e", 0 0, L_0x7ffdf41a86d0;  alias, 1 drivers
v0x7ffdf4142ca0_0 .net "sel_0", 0 0, L_0x7ffdf41a88f0;  1 drivers
v0x7ffdf4142d40_0 .net "sel_0_invert", 0 0, L_0x7ffdf41a8200;  1 drivers
v0x7ffdf4142de0_0 .net "sel_1", 0 0, L_0x7ffdf41a8a10;  1 drivers
v0x7ffdf4142e80_0 .net "sel_1_invert", 0 0, L_0x7ffdf41a8270;  1 drivers
S_0x7ffdf4143b10 .scope module, "ALU_22" "ALU_1bit" 3 37, 4 38 0, S_0x7ffdf36f4670;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "result";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "a";
    .port_info 3 /INPUT 1 "b";
    .port_info 4 /INPUT 1 "invertA";
    .port_info 5 /INPUT 1 "invertB";
    .port_info 6 /INPUT 2 "operation";
    .port_info 7 /INPUT 1 "carryIn";
    .port_info 8 /INPUT 1 "less";
L_0x7ffdf41a8db0 .functor NOT 1, L_0x7ffdf41aa260, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a8e20 .functor NOT 1, L_0x7ffdf41a8c50, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a9390 .functor AND 1, L_0x7ffdf41a9020, L_0x7ffdf41a92a0, C4<1>, C4<1>;
L_0x7ffdf41a9540 .functor OR 1, L_0x7ffdf41a9020, L_0x7ffdf41a92a0, C4<0>, C4<0>;
v0x7ffdf4145da0_0 .net "a", 0 0, L_0x7ffdf41aa260;  1 drivers
v0x7ffdf4145e60_0 .net "and_ab", 0 0, L_0x7ffdf41a9390;  1 drivers
v0x7ffdf4145ef0_0 .net "b", 0 0, L_0x7ffdf41a8c50;  1 drivers
v0x7ffdf4145fa0_0 .net "carryIn", 0 0, L_0x7ffdf41a80c0;  alias, 1 drivers
v0x7ffdf4146030_0 .net "carryOut", 0 0, L_0x7ffdf41a97f0;  alias, 1 drivers
v0x7ffdf4146100_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf4146190_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf4146220_0 .net "invert_a", 0 0, L_0x7ffdf41a8db0;  1 drivers
v0x7ffdf41462d0_0 .net "invert_b", 0 0, L_0x7ffdf41a8e20;  1 drivers
L_0x7ffdf35635f0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7ffdf4146400_0 .net "less", 0 0, L_0x7ffdf35635f0;  1 drivers
v0x7ffdf4146490_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf4146520_0 .net "or_ab", 0 0, L_0x7ffdf41a9540;  1 drivers
v0x7ffdf41465b0_0 .net "result", 0 0, L_0x7ffdf41a9e00;  1 drivers
v0x7ffdf4146660_0 .net "select_a", 0 0, L_0x7ffdf41a9020;  1 drivers
v0x7ffdf4146730_0 .net "select_b", 0 0, L_0x7ffdf41a92a0;  1 drivers
v0x7ffdf4146800_0 .net "sum_ans", 0 0, L_0x7ffdf41a9620;  1 drivers
L_0x7ffdf41aa020 .part L_0x7ffdf41c3a00, 0, 1;
L_0x7ffdf41aa140 .part L_0x7ffdf41c3a00, 1, 1;
S_0x7ffdf4143db0 .scope module, "adder" "Full_adder" 4 63, 5 1 0, S_0x7ffdf4143b10;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "carryIn";
    .port_info 3 /INPUT 1 "input1";
    .port_info 4 /INPUT 1 "input2";
L_0x7ffdf41a95b0 .functor XOR 1, L_0x7ffdf41a9020, L_0x7ffdf41a92a0, C4<0>, C4<0>;
L_0x7ffdf41a9620 .functor XOR 1, L_0x7ffdf41a95b0, L_0x7ffdf41a80c0, C4<0>, C4<0>;
L_0x7ffdf41a9690 .functor AND 1, L_0x7ffdf41a9020, L_0x7ffdf41a92a0, C4<1>, C4<1>;
L_0x7ffdf41a9740 .functor AND 1, L_0x7ffdf41a95b0, L_0x7ffdf41a80c0, C4<1>, C4<1>;
L_0x7ffdf41a97f0 .functor OR 1, L_0x7ffdf41a9690, L_0x7ffdf41a9740, C4<0>, C4<0>;
v0x7ffdf4144020_0 .net "carryIn", 0 0, L_0x7ffdf41a80c0;  alias, 1 drivers
v0x7ffdf41440f0_0 .net "carryOut", 0 0, L_0x7ffdf41a97f0;  alias, 1 drivers
v0x7ffdf4144180_0 .net "input1", 0 0, L_0x7ffdf41a9020;  alias, 1 drivers
v0x7ffdf4144210_0 .net "input2", 0 0, L_0x7ffdf41a92a0;  alias, 1 drivers
v0x7ffdf41442a0_0 .net "sum", 0 0, L_0x7ffdf41a9620;  alias, 1 drivers
v0x7ffdf4144370_0 .net "w1", 0 0, L_0x7ffdf41a95b0;  1 drivers
v0x7ffdf4144400_0 .net "w2", 0 0, L_0x7ffdf41a9690;  1 drivers
v0x7ffdf41444a0_0 .net "w3", 0 0, L_0x7ffdf41a9740;  1 drivers
S_0x7ffdf41445c0 .scope module, "select_A" "MUX_2_1" 4 57, 4 1 0, S_0x7ffdf4143b10;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41a8e90 .functor NOT 1, L_0x7ffdf41c38c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a8f00 .functor AND 1, L_0x7ffdf41aa260, L_0x7ffdf41a8e90, C4<1>, C4<1>;
L_0x7ffdf41a8fb0 .functor AND 1, L_0x7ffdf41a8db0, L_0x7ffdf41c38c0, C4<1>, C4<1>;
L_0x7ffdf41a9020 .functor OR 1, L_0x7ffdf41a8f00, L_0x7ffdf41a8fb0, C4<0>, C4<0>;
v0x7ffdf41447e0_0 .net "and_a", 0 0, L_0x7ffdf41a8f00;  1 drivers
v0x7ffdf4144870_0 .net "and_b", 0 0, L_0x7ffdf41a8fb0;  1 drivers
v0x7ffdf4144900_0 .net "input_a", 0 0, L_0x7ffdf41aa260;  alias, 1 drivers
v0x7ffdf41449b0_0 .net "input_b", 0 0, L_0x7ffdf41a8db0;  alias, 1 drivers
v0x7ffdf4144a50_0 .net "invert_sel", 0 0, L_0x7ffdf41a8e90;  1 drivers
v0x7ffdf4144b30_0 .net "output_c", 0 0, L_0x7ffdf41a9020;  alias, 1 drivers
v0x7ffdf4144bc0_0 .net "sel", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
S_0x7ffdf4144ca0 .scope module, "select_B" "MUX_2_1" 4 58, 4 1 0, S_0x7ffdf4143b10;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41a9110 .functor NOT 1, L_0x7ffdf41c3960, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a9180 .functor AND 1, L_0x7ffdf41a8c50, L_0x7ffdf41a9110, C4<1>, C4<1>;
L_0x7ffdf41a9230 .functor AND 1, L_0x7ffdf41a8e20, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf41a92a0 .functor OR 1, L_0x7ffdf41a9180, L_0x7ffdf41a9230, C4<0>, C4<0>;
v0x7ffdf4144ee0_0 .net "and_a", 0 0, L_0x7ffdf41a9180;  1 drivers
v0x7ffdf4144f80_0 .net "and_b", 0 0, L_0x7ffdf41a9230;  1 drivers
v0x7ffdf4145020_0 .net "input_a", 0 0, L_0x7ffdf41a8c50;  alias, 1 drivers
v0x7ffdf41450d0_0 .net "input_b", 0 0, L_0x7ffdf41a8e20;  alias, 1 drivers
v0x7ffdf4145170_0 .net "invert_sel", 0 0, L_0x7ffdf41a9110;  1 drivers
v0x7ffdf4145250_0 .net "output_c", 0 0, L_0x7ffdf41a92a0;  alias, 1 drivers
v0x7ffdf41452e0_0 .net "sel", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
S_0x7ffdf412d080 .scope module, "select_F" "MUX_4_1" 4 64, 4 15 0, S_0x7ffdf4143b10;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /INPUT 1 "input_c";
    .port_info 3 /INPUT 1 "input_d";
    .port_info 4 /OUTPUT 1 "output_e";
    .port_info 5 /INPUT 1 "sel_0";
    .port_info 6 /INPUT 1 "sel_1";
L_0x7ffdf41a9930 .functor NOT 1, L_0x7ffdf41aa020, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a99a0 .functor NOT 1, L_0x7ffdf41aa140, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41a9a30 .functor AND 1, L_0x7ffdf41a9390, L_0x7ffdf41a9930, L_0x7ffdf41a99a0, C4<1>;
L_0x7ffdf41a9b60 .functor AND 1, L_0x7ffdf41a9540, L_0x7ffdf41aa020, L_0x7ffdf41a99a0, C4<1>;
L_0x7ffdf41a9c30 .functor AND 1, L_0x7ffdf41a9620, L_0x7ffdf41a9930, L_0x7ffdf41aa140, C4<1>;
L_0x7ffdf41a9d50 .functor AND 1, L_0x7ffdf35635f0, L_0x7ffdf41aa020, L_0x7ffdf41aa140, C4<1>;
L_0x7ffdf41a9e00 .functor OR 1, L_0x7ffdf41a9a30, L_0x7ffdf41a9b60, L_0x7ffdf41a9c30, L_0x7ffdf41a9d50;
v0x7ffdf4145470_0 .net "and_a", 0 0, L_0x7ffdf41a9a30;  1 drivers
v0x7ffdf4145520_0 .net "and_b", 0 0, L_0x7ffdf41a9b60;  1 drivers
v0x7ffdf41455c0_0 .net "and_c", 0 0, L_0x7ffdf41a9c30;  1 drivers
v0x7ffdf4145650_0 .net "and_d", 0 0, L_0x7ffdf41a9d50;  1 drivers
v0x7ffdf41456f0_0 .net "input_a", 0 0, L_0x7ffdf41a9390;  alias, 1 drivers
v0x7ffdf41457d0_0 .net "input_b", 0 0, L_0x7ffdf41a9540;  alias, 1 drivers
v0x7ffdf4145870_0 .net "input_c", 0 0, L_0x7ffdf41a9620;  alias, 1 drivers
v0x7ffdf4145900_0 .net "input_d", 0 0, L_0x7ffdf35635f0;  alias, 1 drivers
v0x7ffdf4145990_0 .net "output_e", 0 0, L_0x7ffdf41a9e00;  alias, 1 drivers
v0x7ffdf4145ab0_0 .net "sel_0", 0 0, L_0x7ffdf41aa020;  1 drivers
v0x7ffdf4145b50_0 .net "sel_0_invert", 0 0, L_0x7ffdf41a9930;  1 drivers
v0x7ffdf4145bf0_0 .net "sel_1", 0 0, L_0x7ffdf41aa140;  1 drivers
v0x7ffdf4145c90_0 .net "sel_1_invert", 0 0, L_0x7ffdf41a99a0;  1 drivers
S_0x7ffdf4146920 .scope module, "ALU_23" "ALU_1bit" 3 38, 4 38 0, S_0x7ffdf36f4670;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "result";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "a";
    .port_info 3 /INPUT 1 "b";
    .port_info 4 /INPUT 1 "invertA";
    .port_info 5 /INPUT 1 "invertB";
    .port_info 6 /INPUT 2 "operation";
    .port_info 7 /INPUT 1 "carryIn";
    .port_info 8 /INPUT 1 "less";
L_0x7ffdf41aa4f0 .functor NOT 1, L_0x7ffdf41ab980, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41aa560 .functor NOT 1, L_0x7ffdf41aa380, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41aaa90 .functor AND 1, L_0x7ffdf41aa720, L_0x7ffdf41aa9a0, C4<1>, C4<1>;
L_0x7ffdf41aac40 .functor OR 1, L_0x7ffdf41aa720, L_0x7ffdf41aa9a0, C4<0>, C4<0>;
v0x7ffdf4148c30_0 .net "a", 0 0, L_0x7ffdf41ab980;  1 drivers
v0x7ffdf4148cf0_0 .net "and_ab", 0 0, L_0x7ffdf41aaa90;  1 drivers
v0x7ffdf4148d80_0 .net "b", 0 0, L_0x7ffdf41aa380;  1 drivers
v0x7ffdf4148e30_0 .net "carryIn", 0 0, L_0x7ffdf41a97f0;  alias, 1 drivers
v0x7ffdf4148ec0_0 .net "carryOut", 0 0, L_0x7ffdf41aaf10;  alias, 1 drivers
v0x7ffdf4148f90_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf4149020_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf41490b0_0 .net "invert_a", 0 0, L_0x7ffdf41aa4f0;  1 drivers
v0x7ffdf4149160_0 .net "invert_b", 0 0, L_0x7ffdf41aa560;  1 drivers
L_0x7ffdf3563638 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7ffdf4149290_0 .net "less", 0 0, L_0x7ffdf3563638;  1 drivers
v0x7ffdf4149320_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf4131630_0 .net "or_ab", 0 0, L_0x7ffdf41aac40;  1 drivers
v0x7ffdf41495b0_0 .net "result", 0 0, L_0x7ffdf41ab520;  1 drivers
v0x7ffdf4149640_0 .net "select_a", 0 0, L_0x7ffdf41aa720;  1 drivers
v0x7ffdf41496d0_0 .net "select_b", 0 0, L_0x7ffdf41aa9a0;  1 drivers
v0x7ffdf41497a0_0 .net "sum_ans", 0 0, L_0x7ffdf41aad20;  1 drivers
L_0x7ffdf41ab740 .part L_0x7ffdf41c3a00, 0, 1;
L_0x7ffdf41ab860 .part L_0x7ffdf41c3a00, 1, 1;
S_0x7ffdf4146cc0 .scope module, "adder" "Full_adder" 4 63, 5 1 0, S_0x7ffdf4146920;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "carryIn";
    .port_info 3 /INPUT 1 "input1";
    .port_info 4 /INPUT 1 "input2";
L_0x7ffdf41aacb0 .functor XOR 1, L_0x7ffdf41aa720, L_0x7ffdf41aa9a0, C4<0>, C4<0>;
L_0x7ffdf41aad20 .functor XOR 1, L_0x7ffdf41aacb0, L_0x7ffdf41a97f0, C4<0>, C4<0>;
L_0x7ffdf41aadd0 .functor AND 1, L_0x7ffdf41aa720, L_0x7ffdf41aa9a0, C4<1>, C4<1>;
L_0x7ffdf41aae60 .functor AND 1, L_0x7ffdf41aacb0, L_0x7ffdf41a97f0, C4<1>, C4<1>;
L_0x7ffdf41aaf10 .functor OR 1, L_0x7ffdf41aadd0, L_0x7ffdf41aae60, C4<0>, C4<0>;
v0x7ffdf4146eb0_0 .net "carryIn", 0 0, L_0x7ffdf41a97f0;  alias, 1 drivers
v0x7ffdf4146f80_0 .net "carryOut", 0 0, L_0x7ffdf41aaf10;  alias, 1 drivers
v0x7ffdf4147010_0 .net "input1", 0 0, L_0x7ffdf41aa720;  alias, 1 drivers
v0x7ffdf41470a0_0 .net "input2", 0 0, L_0x7ffdf41aa9a0;  alias, 1 drivers
v0x7ffdf4147130_0 .net "sum", 0 0, L_0x7ffdf41aad20;  alias, 1 drivers
v0x7ffdf4147200_0 .net "w1", 0 0, L_0x7ffdf41aacb0;  1 drivers
v0x7ffdf4147290_0 .net "w2", 0 0, L_0x7ffdf41aadd0;  1 drivers
v0x7ffdf4147330_0 .net "w3", 0 0, L_0x7ffdf41aae60;  1 drivers
S_0x7ffdf4147450 .scope module, "select_A" "MUX_2_1" 4 57, 4 1 0, S_0x7ffdf4146920;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41aa5d0 .functor NOT 1, L_0x7ffdf41c38c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41aa640 .functor AND 1, L_0x7ffdf41ab980, L_0x7ffdf41aa5d0, C4<1>, C4<1>;
L_0x7ffdf41aa6b0 .functor AND 1, L_0x7ffdf41aa4f0, L_0x7ffdf41c38c0, C4<1>, C4<1>;
L_0x7ffdf41aa720 .functor OR 1, L_0x7ffdf41aa640, L_0x7ffdf41aa6b0, C4<0>, C4<0>;
v0x7ffdf4147670_0 .net "and_a", 0 0, L_0x7ffdf41aa640;  1 drivers
v0x7ffdf4147700_0 .net "and_b", 0 0, L_0x7ffdf41aa6b0;  1 drivers
v0x7ffdf4147790_0 .net "input_a", 0 0, L_0x7ffdf41ab980;  alias, 1 drivers
v0x7ffdf4147840_0 .net "input_b", 0 0, L_0x7ffdf41aa4f0;  alias, 1 drivers
v0x7ffdf41478e0_0 .net "invert_sel", 0 0, L_0x7ffdf41aa5d0;  1 drivers
v0x7ffdf41479c0_0 .net "output_c", 0 0, L_0x7ffdf41aa720;  alias, 1 drivers
v0x7ffdf4147a50_0 .net "sel", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
S_0x7ffdf412fab0 .scope module, "select_B" "MUX_2_1" 4 58, 4 1 0, S_0x7ffdf4146920;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41aa810 .functor NOT 1, L_0x7ffdf41c3960, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41aa880 .functor AND 1, L_0x7ffdf41aa380, L_0x7ffdf41aa810, C4<1>, C4<1>;
L_0x7ffdf41aa930 .functor AND 1, L_0x7ffdf41aa560, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf41aa9a0 .functor OR 1, L_0x7ffdf41aa880, L_0x7ffdf41aa930, C4<0>, C4<0>;
v0x7ffdf4147b90_0 .net "and_a", 0 0, L_0x7ffdf41aa880;  1 drivers
v0x7ffdf4147c20_0 .net "and_b", 0 0, L_0x7ffdf41aa930;  1 drivers
v0x7ffdf4147cb0_0 .net "input_a", 0 0, L_0x7ffdf41aa380;  alias, 1 drivers
v0x7ffdf4147d60_0 .net "input_b", 0 0, L_0x7ffdf41aa560;  alias, 1 drivers
v0x7ffdf4147e00_0 .net "invert_sel", 0 0, L_0x7ffdf41aa810;  1 drivers
v0x7ffdf4147ee0_0 .net "output_c", 0 0, L_0x7ffdf41aa9a0;  alias, 1 drivers
v0x7ffdf4147f70_0 .net "sel", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
S_0x7ffdf4148050 .scope module, "select_F" "MUX_4_1" 4 64, 4 15 0, S_0x7ffdf4146920;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /INPUT 1 "input_c";
    .port_info 3 /INPUT 1 "input_d";
    .port_info 4 /OUTPUT 1 "output_e";
    .port_info 5 /INPUT 1 "sel_0";
    .port_info 6 /INPUT 1 "sel_1";
L_0x7ffdf41ab050 .functor NOT 1, L_0x7ffdf41ab740, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41ab0c0 .functor NOT 1, L_0x7ffdf41ab860, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41ab150 .functor AND 1, L_0x7ffdf41aaa90, L_0x7ffdf41ab050, L_0x7ffdf41ab0c0, C4<1>;
L_0x7ffdf41ab280 .functor AND 1, L_0x7ffdf41aac40, L_0x7ffdf41ab740, L_0x7ffdf41ab0c0, C4<1>;
L_0x7ffdf41ab350 .functor AND 1, L_0x7ffdf41aad20, L_0x7ffdf41ab050, L_0x7ffdf41ab860, C4<1>;
L_0x7ffdf41ab470 .functor AND 1, L_0x7ffdf3563638, L_0x7ffdf41ab740, L_0x7ffdf41ab860, C4<1>;
L_0x7ffdf41ab520 .functor OR 1, L_0x7ffdf41ab150, L_0x7ffdf41ab280, L_0x7ffdf41ab350, L_0x7ffdf41ab470;
v0x7ffdf4148300_0 .net "and_a", 0 0, L_0x7ffdf41ab150;  1 drivers
v0x7ffdf41483b0_0 .net "and_b", 0 0, L_0x7ffdf41ab280;  1 drivers
v0x7ffdf4148450_0 .net "and_c", 0 0, L_0x7ffdf41ab350;  1 drivers
v0x7ffdf41484e0_0 .net "and_d", 0 0, L_0x7ffdf41ab470;  1 drivers
v0x7ffdf4148580_0 .net "input_a", 0 0, L_0x7ffdf41aaa90;  alias, 1 drivers
v0x7ffdf4148660_0 .net "input_b", 0 0, L_0x7ffdf41aac40;  alias, 1 drivers
v0x7ffdf4148700_0 .net "input_c", 0 0, L_0x7ffdf41aad20;  alias, 1 drivers
v0x7ffdf4148790_0 .net "input_d", 0 0, L_0x7ffdf3563638;  alias, 1 drivers
v0x7ffdf4148820_0 .net "output_e", 0 0, L_0x7ffdf41ab520;  alias, 1 drivers
v0x7ffdf4148940_0 .net "sel_0", 0 0, L_0x7ffdf41ab740;  1 drivers
v0x7ffdf41489e0_0 .net "sel_0_invert", 0 0, L_0x7ffdf41ab050;  1 drivers
v0x7ffdf4148a80_0 .net "sel_1", 0 0, L_0x7ffdf41ab860;  1 drivers
v0x7ffdf4148b20_0 .net "sel_1_invert", 0 0, L_0x7ffdf41ab0c0;  1 drivers
S_0x7ffdf41498c0 .scope module, "ALU_24" "ALU_1bit" 3 39, 4 38 0, S_0x7ffdf36f4670;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "result";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "a";
    .port_info 3 /INPUT 1 "b";
    .port_info 4 /INPUT 1 "invertA";
    .port_info 5 /INPUT 1 "invertB";
    .port_info 6 /INPUT 2 "operation";
    .port_info 7 /INPUT 1 "carryIn";
    .port_info 8 /INPUT 1 "less";
L_0x7ffdf41abc20 .functor NOT 1, L_0x7ffdf41ad090, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41abc90 .functor NOT 1, L_0x7ffdf41abaa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41ac1c0 .functor AND 1, L_0x7ffdf41abe50, L_0x7ffdf41ac0d0, C4<1>, C4<1>;
L_0x7ffdf41ac370 .functor OR 1, L_0x7ffdf41abe50, L_0x7ffdf41ac0d0, C4<0>, C4<0>;
v0x7ffdf414bd40_0 .net "a", 0 0, L_0x7ffdf41ad090;  1 drivers
v0x7ffdf414be00_0 .net "and_ab", 0 0, L_0x7ffdf41ac1c0;  1 drivers
v0x7ffdf414be90_0 .net "b", 0 0, L_0x7ffdf41abaa0;  1 drivers
v0x7ffdf414bf40_0 .net "carryIn", 0 0, L_0x7ffdf41aaf10;  alias, 1 drivers
v0x7ffdf414bfd0_0 .net "carryOut", 0 0, L_0x7ffdf41ac620;  alias, 1 drivers
v0x7ffdf414c0a0_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf414c130_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf414c1c0_0 .net "invert_a", 0 0, L_0x7ffdf41abc20;  1 drivers
v0x7ffdf414c270_0 .net "invert_b", 0 0, L_0x7ffdf41abc90;  1 drivers
L_0x7ffdf3563680 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7ffdf414c3a0_0 .net "less", 0 0, L_0x7ffdf3563680;  1 drivers
v0x7ffdf414c430_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf414c4c0_0 .net "or_ab", 0 0, L_0x7ffdf41ac370;  1 drivers
v0x7ffdf414c550_0 .net "result", 0 0, L_0x7ffdf41acc30;  1 drivers
v0x7ffdf414c600_0 .net "select_a", 0 0, L_0x7ffdf41abe50;  1 drivers
v0x7ffdf414c6d0_0 .net "select_b", 0 0, L_0x7ffdf41ac0d0;  1 drivers
v0x7ffdf414c7a0_0 .net "sum_ans", 0 0, L_0x7ffdf41ac450;  1 drivers
L_0x7ffdf41ace50 .part L_0x7ffdf41c3a00, 0, 1;
L_0x7ffdf41acf70 .part L_0x7ffdf41c3a00, 1, 1;
S_0x7ffdf4149b60 .scope module, "adder" "Full_adder" 4 63, 5 1 0, S_0x7ffdf41498c0;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "carryIn";
    .port_info 3 /INPUT 1 "input1";
    .port_info 4 /INPUT 1 "input2";
L_0x7ffdf41ac3e0 .functor XOR 1, L_0x7ffdf41abe50, L_0x7ffdf41ac0d0, C4<0>, C4<0>;
L_0x7ffdf41ac450 .functor XOR 1, L_0x7ffdf41ac3e0, L_0x7ffdf41aaf10, C4<0>, C4<0>;
L_0x7ffdf41ac500 .functor AND 1, L_0x7ffdf41abe50, L_0x7ffdf41ac0d0, C4<1>, C4<1>;
L_0x7ffdf41ac570 .functor AND 1, L_0x7ffdf41ac3e0, L_0x7ffdf41aaf10, C4<1>, C4<1>;
L_0x7ffdf41ac620 .functor OR 1, L_0x7ffdf41ac500, L_0x7ffdf41ac570, C4<0>, C4<0>;
v0x7ffdf4149dd0_0 .net "carryIn", 0 0, L_0x7ffdf41aaf10;  alias, 1 drivers
v0x7ffdf4149ea0_0 .net "carryOut", 0 0, L_0x7ffdf41ac620;  alias, 1 drivers
v0x7ffdf4149f30_0 .net "input1", 0 0, L_0x7ffdf41abe50;  alias, 1 drivers
v0x7ffdf4149fc0_0 .net "input2", 0 0, L_0x7ffdf41ac0d0;  alias, 1 drivers
v0x7ffdf414a050_0 .net "sum", 0 0, L_0x7ffdf41ac450;  alias, 1 drivers
v0x7ffdf414a120_0 .net "w1", 0 0, L_0x7ffdf41ac3e0;  1 drivers
v0x7ffdf414a1b0_0 .net "w2", 0 0, L_0x7ffdf41ac500;  1 drivers
v0x7ffdf414a240_0 .net "w3", 0 0, L_0x7ffdf41ac570;  1 drivers
S_0x7ffdf414a360 .scope module, "select_A" "MUX_2_1" 4 57, 4 1 0, S_0x7ffdf41498c0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41abd00 .functor NOT 1, L_0x7ffdf41c38c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41abd70 .functor AND 1, L_0x7ffdf41ad090, L_0x7ffdf41abd00, C4<1>, C4<1>;
L_0x7ffdf41abde0 .functor AND 1, L_0x7ffdf41abc20, L_0x7ffdf41c38c0, C4<1>, C4<1>;
L_0x7ffdf41abe50 .functor OR 1, L_0x7ffdf41abd70, L_0x7ffdf41abde0, C4<0>, C4<0>;
v0x7ffdf414a580_0 .net "and_a", 0 0, L_0x7ffdf41abd70;  1 drivers
v0x7ffdf414a610_0 .net "and_b", 0 0, L_0x7ffdf41abde0;  1 drivers
v0x7ffdf414a6a0_0 .net "input_a", 0 0, L_0x7ffdf41ad090;  alias, 1 drivers
v0x7ffdf414a750_0 .net "input_b", 0 0, L_0x7ffdf41abc20;  alias, 1 drivers
v0x7ffdf414a7f0_0 .net "invert_sel", 0 0, L_0x7ffdf41abd00;  1 drivers
v0x7ffdf414a8d0_0 .net "output_c", 0 0, L_0x7ffdf41abe50;  alias, 1 drivers
v0x7ffdf414a960_0 .net "sel", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
S_0x7ffdf414aa40 .scope module, "select_B" "MUX_2_1" 4 58, 4 1 0, S_0x7ffdf41498c0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41abf40 .functor NOT 1, L_0x7ffdf41c3960, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41abfb0 .functor AND 1, L_0x7ffdf41abaa0, L_0x7ffdf41abf40, C4<1>, C4<1>;
L_0x7ffdf41ac060 .functor AND 1, L_0x7ffdf41abc90, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf41ac0d0 .functor OR 1, L_0x7ffdf41abfb0, L_0x7ffdf41ac060, C4<0>, C4<0>;
v0x7ffdf414ac80_0 .net "and_a", 0 0, L_0x7ffdf41abfb0;  1 drivers
v0x7ffdf414ad20_0 .net "and_b", 0 0, L_0x7ffdf41ac060;  1 drivers
v0x7ffdf414adc0_0 .net "input_a", 0 0, L_0x7ffdf41abaa0;  alias, 1 drivers
v0x7ffdf414ae70_0 .net "input_b", 0 0, L_0x7ffdf41abc90;  alias, 1 drivers
v0x7ffdf414af10_0 .net "invert_sel", 0 0, L_0x7ffdf41abf40;  1 drivers
v0x7ffdf414aff0_0 .net "output_c", 0 0, L_0x7ffdf41ac0d0;  alias, 1 drivers
v0x7ffdf414b080_0 .net "sel", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
S_0x7ffdf414b160 .scope module, "select_F" "MUX_4_1" 4 64, 4 15 0, S_0x7ffdf41498c0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /INPUT 1 "input_c";
    .port_info 3 /INPUT 1 "input_d";
    .port_info 4 /OUTPUT 1 "output_e";
    .port_info 5 /INPUT 1 "sel_0";
    .port_info 6 /INPUT 1 "sel_1";
L_0x7ffdf41ac760 .functor NOT 1, L_0x7ffdf41ace50, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41ac7d0 .functor NOT 1, L_0x7ffdf41acf70, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41ac860 .functor AND 1, L_0x7ffdf41ac1c0, L_0x7ffdf41ac760, L_0x7ffdf41ac7d0, C4<1>;
L_0x7ffdf41ac990 .functor AND 1, L_0x7ffdf41ac370, L_0x7ffdf41ace50, L_0x7ffdf41ac7d0, C4<1>;
L_0x7ffdf41aca60 .functor AND 1, L_0x7ffdf41ac450, L_0x7ffdf41ac760, L_0x7ffdf41acf70, C4<1>;
L_0x7ffdf41acb80 .functor AND 1, L_0x7ffdf3563680, L_0x7ffdf41ace50, L_0x7ffdf41acf70, C4<1>;
L_0x7ffdf41acc30 .functor OR 1, L_0x7ffdf41ac860, L_0x7ffdf41ac990, L_0x7ffdf41aca60, L_0x7ffdf41acb80;
v0x7ffdf414b410_0 .net "and_a", 0 0, L_0x7ffdf41ac860;  1 drivers
v0x7ffdf414b4c0_0 .net "and_b", 0 0, L_0x7ffdf41ac990;  1 drivers
v0x7ffdf414b560_0 .net "and_c", 0 0, L_0x7ffdf41aca60;  1 drivers
v0x7ffdf414b5f0_0 .net "and_d", 0 0, L_0x7ffdf41acb80;  1 drivers
v0x7ffdf414b690_0 .net "input_a", 0 0, L_0x7ffdf41ac1c0;  alias, 1 drivers
v0x7ffdf414b770_0 .net "input_b", 0 0, L_0x7ffdf41ac370;  alias, 1 drivers
v0x7ffdf414b810_0 .net "input_c", 0 0, L_0x7ffdf41ac450;  alias, 1 drivers
v0x7ffdf414b8a0_0 .net "input_d", 0 0, L_0x7ffdf3563680;  alias, 1 drivers
v0x7ffdf414b930_0 .net "output_e", 0 0, L_0x7ffdf41acc30;  alias, 1 drivers
v0x7ffdf414ba50_0 .net "sel_0", 0 0, L_0x7ffdf41ace50;  1 drivers
v0x7ffdf414baf0_0 .net "sel_0_invert", 0 0, L_0x7ffdf41ac760;  1 drivers
v0x7ffdf414bb90_0 .net "sel_1", 0 0, L_0x7ffdf41acf70;  1 drivers
v0x7ffdf414bc30_0 .net "sel_1_invert", 0 0, L_0x7ffdf41ac7d0;  1 drivers
S_0x7ffdf414c8c0 .scope module, "ALU_25" "ALU_1bit" 3 40, 4 38 0, S_0x7ffdf36f4670;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "result";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "a";
    .port_info 3 /INPUT 1 "b";
    .port_info 4 /INPUT 1 "invertA";
    .port_info 5 /INPUT 1 "invertB";
    .port_info 6 /INPUT 2 "operation";
    .port_info 7 /INPUT 1 "carryIn";
    .port_info 8 /INPUT 1 "less";
L_0x7ffdf41ad340 .functor NOT 1, L_0x7ffdf41ae7b0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41ad3b0 .functor NOT 1, L_0x7ffdf41ad1b0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41ad8e0 .functor AND 1, L_0x7ffdf41ad570, L_0x7ffdf41ad7f0, C4<1>, C4<1>;
L_0x7ffdf41ada90 .functor OR 1, L_0x7ffdf41ad570, L_0x7ffdf41ad7f0, C4<0>, C4<0>;
v0x7ffdf414ed50_0 .net "a", 0 0, L_0x7ffdf41ae7b0;  1 drivers
v0x7ffdf414ee10_0 .net "and_ab", 0 0, L_0x7ffdf41ad8e0;  1 drivers
v0x7ffdf414eea0_0 .net "b", 0 0, L_0x7ffdf41ad1b0;  1 drivers
v0x7ffdf414ef50_0 .net "carryIn", 0 0, L_0x7ffdf41ac620;  alias, 1 drivers
v0x7ffdf414efe0_0 .net "carryOut", 0 0, L_0x7ffdf41add40;  alias, 1 drivers
v0x7ffdf414f0b0_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf414f140_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf414f1d0_0 .net "invert_a", 0 0, L_0x7ffdf41ad340;  1 drivers
v0x7ffdf414f280_0 .net "invert_b", 0 0, L_0x7ffdf41ad3b0;  1 drivers
L_0x7ffdf35636c8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7ffdf414f3b0_0 .net "less", 0 0, L_0x7ffdf35636c8;  1 drivers
v0x7ffdf414f440_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf414f4d0_0 .net "or_ab", 0 0, L_0x7ffdf41ada90;  1 drivers
v0x7ffdf414f560_0 .net "result", 0 0, L_0x7ffdf41ae350;  1 drivers
v0x7ffdf414f610_0 .net "select_a", 0 0, L_0x7ffdf41ad570;  1 drivers
v0x7ffdf414f6e0_0 .net "select_b", 0 0, L_0x7ffdf41ad7f0;  1 drivers
v0x7ffdf414f7b0_0 .net "sum_ans", 0 0, L_0x7ffdf41adb70;  1 drivers
L_0x7ffdf41ae570 .part L_0x7ffdf41c3a00, 0, 1;
L_0x7ffdf41ae690 .part L_0x7ffdf41c3a00, 1, 1;
S_0x7ffdf414cb60 .scope module, "adder" "Full_adder" 4 63, 5 1 0, S_0x7ffdf414c8c0;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "carryIn";
    .port_info 3 /INPUT 1 "input1";
    .port_info 4 /INPUT 1 "input2";
L_0x7ffdf41adb00 .functor XOR 1, L_0x7ffdf41ad570, L_0x7ffdf41ad7f0, C4<0>, C4<0>;
L_0x7ffdf41adb70 .functor XOR 1, L_0x7ffdf41adb00, L_0x7ffdf41ac620, C4<0>, C4<0>;
L_0x7ffdf41adbe0 .functor AND 1, L_0x7ffdf41ad570, L_0x7ffdf41ad7f0, C4<1>, C4<1>;
L_0x7ffdf41adc90 .functor AND 1, L_0x7ffdf41adb00, L_0x7ffdf41ac620, C4<1>, C4<1>;
L_0x7ffdf41add40 .functor OR 1, L_0x7ffdf41adbe0, L_0x7ffdf41adc90, C4<0>, C4<0>;
v0x7ffdf414cdd0_0 .net "carryIn", 0 0, L_0x7ffdf41ac620;  alias, 1 drivers
v0x7ffdf414cea0_0 .net "carryOut", 0 0, L_0x7ffdf41add40;  alias, 1 drivers
v0x7ffdf414cf30_0 .net "input1", 0 0, L_0x7ffdf41ad570;  alias, 1 drivers
v0x7ffdf414cfc0_0 .net "input2", 0 0, L_0x7ffdf41ad7f0;  alias, 1 drivers
v0x7ffdf414d050_0 .net "sum", 0 0, L_0x7ffdf41adb70;  alias, 1 drivers
v0x7ffdf414d120_0 .net "w1", 0 0, L_0x7ffdf41adb00;  1 drivers
v0x7ffdf414d1b0_0 .net "w2", 0 0, L_0x7ffdf41adbe0;  1 drivers
v0x7ffdf414d250_0 .net "w3", 0 0, L_0x7ffdf41adc90;  1 drivers
S_0x7ffdf414d370 .scope module, "select_A" "MUX_2_1" 4 57, 4 1 0, S_0x7ffdf414c8c0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41ad420 .functor NOT 1, L_0x7ffdf41c38c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41ad490 .functor AND 1, L_0x7ffdf41ae7b0, L_0x7ffdf41ad420, C4<1>, C4<1>;
L_0x7ffdf41ad500 .functor AND 1, L_0x7ffdf41ad340, L_0x7ffdf41c38c0, C4<1>, C4<1>;
L_0x7ffdf41ad570 .functor OR 1, L_0x7ffdf41ad490, L_0x7ffdf41ad500, C4<0>, C4<0>;
v0x7ffdf414d590_0 .net "and_a", 0 0, L_0x7ffdf41ad490;  1 drivers
v0x7ffdf414d620_0 .net "and_b", 0 0, L_0x7ffdf41ad500;  1 drivers
v0x7ffdf414d6b0_0 .net "input_a", 0 0, L_0x7ffdf41ae7b0;  alias, 1 drivers
v0x7ffdf414d760_0 .net "input_b", 0 0, L_0x7ffdf41ad340;  alias, 1 drivers
v0x7ffdf414d800_0 .net "invert_sel", 0 0, L_0x7ffdf41ad420;  1 drivers
v0x7ffdf414d8e0_0 .net "output_c", 0 0, L_0x7ffdf41ad570;  alias, 1 drivers
v0x7ffdf414d970_0 .net "sel", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
S_0x7ffdf414da50 .scope module, "select_B" "MUX_2_1" 4 58, 4 1 0, S_0x7ffdf414c8c0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41ad660 .functor NOT 1, L_0x7ffdf41c3960, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41ad6d0 .functor AND 1, L_0x7ffdf41ad1b0, L_0x7ffdf41ad660, C4<1>, C4<1>;
L_0x7ffdf41ad780 .functor AND 1, L_0x7ffdf41ad3b0, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf41ad7f0 .functor OR 1, L_0x7ffdf41ad6d0, L_0x7ffdf41ad780, C4<0>, C4<0>;
v0x7ffdf414dc90_0 .net "and_a", 0 0, L_0x7ffdf41ad6d0;  1 drivers
v0x7ffdf414dd30_0 .net "and_b", 0 0, L_0x7ffdf41ad780;  1 drivers
v0x7ffdf414ddd0_0 .net "input_a", 0 0, L_0x7ffdf41ad1b0;  alias, 1 drivers
v0x7ffdf414de80_0 .net "input_b", 0 0, L_0x7ffdf41ad3b0;  alias, 1 drivers
v0x7ffdf414df20_0 .net "invert_sel", 0 0, L_0x7ffdf41ad660;  1 drivers
v0x7ffdf414e000_0 .net "output_c", 0 0, L_0x7ffdf41ad7f0;  alias, 1 drivers
v0x7ffdf414e090_0 .net "sel", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
S_0x7ffdf414e170 .scope module, "select_F" "MUX_4_1" 4 64, 4 15 0, S_0x7ffdf414c8c0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /INPUT 1 "input_c";
    .port_info 3 /INPUT 1 "input_d";
    .port_info 4 /OUTPUT 1 "output_e";
    .port_info 5 /INPUT 1 "sel_0";
    .port_info 6 /INPUT 1 "sel_1";
L_0x7ffdf41ade80 .functor NOT 1, L_0x7ffdf41ae570, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41adef0 .functor NOT 1, L_0x7ffdf41ae690, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41adf80 .functor AND 1, L_0x7ffdf41ad8e0, L_0x7ffdf41ade80, L_0x7ffdf41adef0, C4<1>;
L_0x7ffdf41ae0b0 .functor AND 1, L_0x7ffdf41ada90, L_0x7ffdf41ae570, L_0x7ffdf41adef0, C4<1>;
L_0x7ffdf41ae180 .functor AND 1, L_0x7ffdf41adb70, L_0x7ffdf41ade80, L_0x7ffdf41ae690, C4<1>;
L_0x7ffdf41ae2a0 .functor AND 1, L_0x7ffdf35636c8, L_0x7ffdf41ae570, L_0x7ffdf41ae690, C4<1>;
L_0x7ffdf41ae350 .functor OR 1, L_0x7ffdf41adf80, L_0x7ffdf41ae0b0, L_0x7ffdf41ae180, L_0x7ffdf41ae2a0;
v0x7ffdf414e420_0 .net "and_a", 0 0, L_0x7ffdf41adf80;  1 drivers
v0x7ffdf414e4d0_0 .net "and_b", 0 0, L_0x7ffdf41ae0b0;  1 drivers
v0x7ffdf414e570_0 .net "and_c", 0 0, L_0x7ffdf41ae180;  1 drivers
v0x7ffdf414e600_0 .net "and_d", 0 0, L_0x7ffdf41ae2a0;  1 drivers
v0x7ffdf414e6a0_0 .net "input_a", 0 0, L_0x7ffdf41ad8e0;  alias, 1 drivers
v0x7ffdf414e780_0 .net "input_b", 0 0, L_0x7ffdf41ada90;  alias, 1 drivers
v0x7ffdf414e820_0 .net "input_c", 0 0, L_0x7ffdf41adb70;  alias, 1 drivers
v0x7ffdf414e8b0_0 .net "input_d", 0 0, L_0x7ffdf35636c8;  alias, 1 drivers
v0x7ffdf414e940_0 .net "output_e", 0 0, L_0x7ffdf41ae350;  alias, 1 drivers
v0x7ffdf414ea60_0 .net "sel_0", 0 0, L_0x7ffdf41ae570;  1 drivers
v0x7ffdf414eb00_0 .net "sel_0_invert", 0 0, L_0x7ffdf41ade80;  1 drivers
v0x7ffdf414eba0_0 .net "sel_1", 0 0, L_0x7ffdf41ae690;  1 drivers
v0x7ffdf414ec40_0 .net "sel_1_invert", 0 0, L_0x7ffdf41adef0;  1 drivers
S_0x7ffdf414f8d0 .scope module, "ALU_26" "ALU_1bit" 3 41, 4 38 0, S_0x7ffdf36f4670;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "result";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "a";
    .port_info 3 /INPUT 1 "b";
    .port_info 4 /INPUT 1 "invertA";
    .port_info 5 /INPUT 1 "invertB";
    .port_info 6 /INPUT 2 "operation";
    .port_info 7 /INPUT 1 "carryIn";
    .port_info 8 /INPUT 1 "less";
L_0x7ffdf41ad2d0 .functor NOT 1, L_0x7ffdf41afed0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41aea70 .functor NOT 1, L_0x7ffdf41ae8d0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41aefe0 .functor AND 1, L_0x7ffdf41aec70, L_0x7ffdf41aeef0, C4<1>, C4<1>;
L_0x7ffdf41af190 .functor OR 1, L_0x7ffdf41aec70, L_0x7ffdf41aeef0, C4<0>, C4<0>;
v0x7ffdf4151d60_0 .net "a", 0 0, L_0x7ffdf41afed0;  1 drivers
v0x7ffdf4151e20_0 .net "and_ab", 0 0, L_0x7ffdf41aefe0;  1 drivers
v0x7ffdf4151eb0_0 .net "b", 0 0, L_0x7ffdf41ae8d0;  1 drivers
v0x7ffdf4151f60_0 .net "carryIn", 0 0, L_0x7ffdf41add40;  alias, 1 drivers
v0x7ffdf4151ff0_0 .net "carryOut", 0 0, L_0x7ffdf41af460;  alias, 1 drivers
v0x7ffdf41520c0_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf4152150_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf41521e0_0 .net "invert_a", 0 0, L_0x7ffdf41ad2d0;  1 drivers
v0x7ffdf4152290_0 .net "invert_b", 0 0, L_0x7ffdf41aea70;  1 drivers
L_0x7ffdf3563710 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7ffdf41523c0_0 .net "less", 0 0, L_0x7ffdf3563710;  1 drivers
v0x7ffdf4152450_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf41524e0_0 .net "or_ab", 0 0, L_0x7ffdf41af190;  1 drivers
v0x7ffdf4152570_0 .net "result", 0 0, L_0x7ffdf41afa70;  1 drivers
v0x7ffdf4152620_0 .net "select_a", 0 0, L_0x7ffdf41aec70;  1 drivers
v0x7ffdf41526f0_0 .net "select_b", 0 0, L_0x7ffdf41aeef0;  1 drivers
v0x7ffdf41527c0_0 .net "sum_ans", 0 0, L_0x7ffdf41af270;  1 drivers
L_0x7ffdf41afc90 .part L_0x7ffdf41c3a00, 0, 1;
L_0x7ffdf41afdb0 .part L_0x7ffdf41c3a00, 1, 1;
S_0x7ffdf414fb70 .scope module, "adder" "Full_adder" 4 63, 5 1 0, S_0x7ffdf414f8d0;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "carryIn";
    .port_info 3 /INPUT 1 "input1";
    .port_info 4 /INPUT 1 "input2";
L_0x7ffdf41af200 .functor XOR 1, L_0x7ffdf41aec70, L_0x7ffdf41aeef0, C4<0>, C4<0>;
L_0x7ffdf41af270 .functor XOR 1, L_0x7ffdf41af200, L_0x7ffdf41add40, C4<0>, C4<0>;
L_0x7ffdf41af320 .functor AND 1, L_0x7ffdf41aec70, L_0x7ffdf41aeef0, C4<1>, C4<1>;
L_0x7ffdf41af3b0 .functor AND 1, L_0x7ffdf41af200, L_0x7ffdf41add40, C4<1>, C4<1>;
L_0x7ffdf41af460 .functor OR 1, L_0x7ffdf41af320, L_0x7ffdf41af3b0, C4<0>, C4<0>;
v0x7ffdf414fde0_0 .net "carryIn", 0 0, L_0x7ffdf41add40;  alias, 1 drivers
v0x7ffdf414feb0_0 .net "carryOut", 0 0, L_0x7ffdf41af460;  alias, 1 drivers
v0x7ffdf414ff40_0 .net "input1", 0 0, L_0x7ffdf41aec70;  alias, 1 drivers
v0x7ffdf414ffd0_0 .net "input2", 0 0, L_0x7ffdf41aeef0;  alias, 1 drivers
v0x7ffdf4150060_0 .net "sum", 0 0, L_0x7ffdf41af270;  alias, 1 drivers
v0x7ffdf4150130_0 .net "w1", 0 0, L_0x7ffdf41af200;  1 drivers
v0x7ffdf41501c0_0 .net "w2", 0 0, L_0x7ffdf41af320;  1 drivers
v0x7ffdf4150260_0 .net "w3", 0 0, L_0x7ffdf41af3b0;  1 drivers
S_0x7ffdf4150380 .scope module, "select_A" "MUX_2_1" 4 57, 4 1 0, S_0x7ffdf414f8d0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41aeae0 .functor NOT 1, L_0x7ffdf41c38c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41aeb50 .functor AND 1, L_0x7ffdf41afed0, L_0x7ffdf41aeae0, C4<1>, C4<1>;
L_0x7ffdf41aec00 .functor AND 1, L_0x7ffdf41ad2d0, L_0x7ffdf41c38c0, C4<1>, C4<1>;
L_0x7ffdf41aec70 .functor OR 1, L_0x7ffdf41aeb50, L_0x7ffdf41aec00, C4<0>, C4<0>;
v0x7ffdf41505a0_0 .net "and_a", 0 0, L_0x7ffdf41aeb50;  1 drivers
v0x7ffdf4150630_0 .net "and_b", 0 0, L_0x7ffdf41aec00;  1 drivers
v0x7ffdf41506c0_0 .net "input_a", 0 0, L_0x7ffdf41afed0;  alias, 1 drivers
v0x7ffdf4150770_0 .net "input_b", 0 0, L_0x7ffdf41ad2d0;  alias, 1 drivers
v0x7ffdf4150810_0 .net "invert_sel", 0 0, L_0x7ffdf41aeae0;  1 drivers
v0x7ffdf41508f0_0 .net "output_c", 0 0, L_0x7ffdf41aec70;  alias, 1 drivers
v0x7ffdf4150980_0 .net "sel", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
S_0x7ffdf4150a60 .scope module, "select_B" "MUX_2_1" 4 58, 4 1 0, S_0x7ffdf414f8d0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41aed60 .functor NOT 1, L_0x7ffdf41c3960, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41aedd0 .functor AND 1, L_0x7ffdf41ae8d0, L_0x7ffdf41aed60, C4<1>, C4<1>;
L_0x7ffdf41aee80 .functor AND 1, L_0x7ffdf41aea70, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf41aeef0 .functor OR 1, L_0x7ffdf41aedd0, L_0x7ffdf41aee80, C4<0>, C4<0>;
v0x7ffdf4150ca0_0 .net "and_a", 0 0, L_0x7ffdf41aedd0;  1 drivers
v0x7ffdf4150d40_0 .net "and_b", 0 0, L_0x7ffdf41aee80;  1 drivers
v0x7ffdf4150de0_0 .net "input_a", 0 0, L_0x7ffdf41ae8d0;  alias, 1 drivers
v0x7ffdf4150e90_0 .net "input_b", 0 0, L_0x7ffdf41aea70;  alias, 1 drivers
v0x7ffdf4150f30_0 .net "invert_sel", 0 0, L_0x7ffdf41aed60;  1 drivers
v0x7ffdf4151010_0 .net "output_c", 0 0, L_0x7ffdf41aeef0;  alias, 1 drivers
v0x7ffdf41510a0_0 .net "sel", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
S_0x7ffdf4151180 .scope module, "select_F" "MUX_4_1" 4 64, 4 15 0, S_0x7ffdf414f8d0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /INPUT 1 "input_c";
    .port_info 3 /INPUT 1 "input_d";
    .port_info 4 /OUTPUT 1 "output_e";
    .port_info 5 /INPUT 1 "sel_0";
    .port_info 6 /INPUT 1 "sel_1";
L_0x7ffdf41af5a0 .functor NOT 1, L_0x7ffdf41afc90, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41af610 .functor NOT 1, L_0x7ffdf41afdb0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41af6a0 .functor AND 1, L_0x7ffdf41aefe0, L_0x7ffdf41af5a0, L_0x7ffdf41af610, C4<1>;
L_0x7ffdf41af7d0 .functor AND 1, L_0x7ffdf41af190, L_0x7ffdf41afc90, L_0x7ffdf41af610, C4<1>;
L_0x7ffdf41af8a0 .functor AND 1, L_0x7ffdf41af270, L_0x7ffdf41af5a0, L_0x7ffdf41afdb0, C4<1>;
L_0x7ffdf41af9c0 .functor AND 1, L_0x7ffdf3563710, L_0x7ffdf41afc90, L_0x7ffdf41afdb0, C4<1>;
L_0x7ffdf41afa70 .functor OR 1, L_0x7ffdf41af6a0, L_0x7ffdf41af7d0, L_0x7ffdf41af8a0, L_0x7ffdf41af9c0;
v0x7ffdf4151430_0 .net "and_a", 0 0, L_0x7ffdf41af6a0;  1 drivers
v0x7ffdf41514e0_0 .net "and_b", 0 0, L_0x7ffdf41af7d0;  1 drivers
v0x7ffdf4151580_0 .net "and_c", 0 0, L_0x7ffdf41af8a0;  1 drivers
v0x7ffdf4151610_0 .net "and_d", 0 0, L_0x7ffdf41af9c0;  1 drivers
v0x7ffdf41516b0_0 .net "input_a", 0 0, L_0x7ffdf41aefe0;  alias, 1 drivers
v0x7ffdf4151790_0 .net "input_b", 0 0, L_0x7ffdf41af190;  alias, 1 drivers
v0x7ffdf4151830_0 .net "input_c", 0 0, L_0x7ffdf41af270;  alias, 1 drivers
v0x7ffdf41518c0_0 .net "input_d", 0 0, L_0x7ffdf3563710;  alias, 1 drivers
v0x7ffdf4151950_0 .net "output_e", 0 0, L_0x7ffdf41afa70;  alias, 1 drivers
v0x7ffdf4151a70_0 .net "sel_0", 0 0, L_0x7ffdf41afc90;  1 drivers
v0x7ffdf4151b10_0 .net "sel_0_invert", 0 0, L_0x7ffdf41af5a0;  1 drivers
v0x7ffdf4151bb0_0 .net "sel_1", 0 0, L_0x7ffdf41afdb0;  1 drivers
v0x7ffdf4151c50_0 .net "sel_1_invert", 0 0, L_0x7ffdf41af610;  1 drivers
S_0x7ffdf41528e0 .scope module, "ALU_27" "ALU_1bit" 3 42, 4 38 0, S_0x7ffdf36f4670;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "result";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "a";
    .port_info 3 /INPUT 1 "b";
    .port_info 4 /INPUT 1 "invertA";
    .port_info 5 /INPUT 1 "invertB";
    .port_info 6 /INPUT 2 "operation";
    .port_info 7 /INPUT 1 "carryIn";
    .port_info 8 /INPUT 1 "less";
L_0x7ffdf41ae9f0 .functor NOT 1, L_0x7ffdf41b1600, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41b01a0 .functor NOT 1, L_0x7ffdf41afff0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41b0710 .functor AND 1, L_0x7ffdf41b03a0, L_0x7ffdf41b0620, C4<1>, C4<1>;
L_0x7ffdf41b08c0 .functor OR 1, L_0x7ffdf41b03a0, L_0x7ffdf41b0620, C4<0>, C4<0>;
v0x7ffdf4154d70_0 .net "a", 0 0, L_0x7ffdf41b1600;  1 drivers
v0x7ffdf4154e30_0 .net "and_ab", 0 0, L_0x7ffdf41b0710;  1 drivers
v0x7ffdf4154ec0_0 .net "b", 0 0, L_0x7ffdf41afff0;  1 drivers
v0x7ffdf4154f70_0 .net "carryIn", 0 0, L_0x7ffdf41af460;  alias, 1 drivers
v0x7ffdf4155000_0 .net "carryOut", 0 0, L_0x7ffdf41b0b90;  alias, 1 drivers
v0x7ffdf41550d0_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf4155160_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf41551f0_0 .net "invert_a", 0 0, L_0x7ffdf41ae9f0;  1 drivers
v0x7ffdf41552a0_0 .net "invert_b", 0 0, L_0x7ffdf41b01a0;  1 drivers
L_0x7ffdf3563758 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7ffdf41553d0_0 .net "less", 0 0, L_0x7ffdf3563758;  1 drivers
v0x7ffdf4155460_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf41554f0_0 .net "or_ab", 0 0, L_0x7ffdf41b08c0;  1 drivers
v0x7ffdf4155580_0 .net "result", 0 0, L_0x7ffdf41b11a0;  1 drivers
v0x7ffdf4155630_0 .net "select_a", 0 0, L_0x7ffdf41b03a0;  1 drivers
v0x7ffdf4155700_0 .net "select_b", 0 0, L_0x7ffdf41b0620;  1 drivers
v0x7ffdf41557d0_0 .net "sum_ans", 0 0, L_0x7ffdf41b09a0;  1 drivers
L_0x7ffdf41b13c0 .part L_0x7ffdf41c3a00, 0, 1;
L_0x7ffdf41b14e0 .part L_0x7ffdf41c3a00, 1, 1;
S_0x7ffdf4152b80 .scope module, "adder" "Full_adder" 4 63, 5 1 0, S_0x7ffdf41528e0;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "carryIn";
    .port_info 3 /INPUT 1 "input1";
    .port_info 4 /INPUT 1 "input2";
L_0x7ffdf41b0930 .functor XOR 1, L_0x7ffdf41b03a0, L_0x7ffdf41b0620, C4<0>, C4<0>;
L_0x7ffdf41b09a0 .functor XOR 1, L_0x7ffdf41b0930, L_0x7ffdf41af460, C4<0>, C4<0>;
L_0x7ffdf41b0a50 .functor AND 1, L_0x7ffdf41b03a0, L_0x7ffdf41b0620, C4<1>, C4<1>;
L_0x7ffdf41b0ae0 .functor AND 1, L_0x7ffdf41b0930, L_0x7ffdf41af460, C4<1>, C4<1>;
L_0x7ffdf41b0b90 .functor OR 1, L_0x7ffdf41b0a50, L_0x7ffdf41b0ae0, C4<0>, C4<0>;
v0x7ffdf4152df0_0 .net "carryIn", 0 0, L_0x7ffdf41af460;  alias, 1 drivers
v0x7ffdf4152ec0_0 .net "carryOut", 0 0, L_0x7ffdf41b0b90;  alias, 1 drivers
v0x7ffdf4152f50_0 .net "input1", 0 0, L_0x7ffdf41b03a0;  alias, 1 drivers
v0x7ffdf4152fe0_0 .net "input2", 0 0, L_0x7ffdf41b0620;  alias, 1 drivers
v0x7ffdf4153070_0 .net "sum", 0 0, L_0x7ffdf41b09a0;  alias, 1 drivers
v0x7ffdf4153140_0 .net "w1", 0 0, L_0x7ffdf41b0930;  1 drivers
v0x7ffdf41531d0_0 .net "w2", 0 0, L_0x7ffdf41b0a50;  1 drivers
v0x7ffdf4153270_0 .net "w3", 0 0, L_0x7ffdf41b0ae0;  1 drivers
S_0x7ffdf4153390 .scope module, "select_A" "MUX_2_1" 4 57, 4 1 0, S_0x7ffdf41528e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41b0210 .functor NOT 1, L_0x7ffdf41c38c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41b0280 .functor AND 1, L_0x7ffdf41b1600, L_0x7ffdf41b0210, C4<1>, C4<1>;
L_0x7ffdf41b0330 .functor AND 1, L_0x7ffdf41ae9f0, L_0x7ffdf41c38c0, C4<1>, C4<1>;
L_0x7ffdf41b03a0 .functor OR 1, L_0x7ffdf41b0280, L_0x7ffdf41b0330, C4<0>, C4<0>;
v0x7ffdf41535b0_0 .net "and_a", 0 0, L_0x7ffdf41b0280;  1 drivers
v0x7ffdf4153640_0 .net "and_b", 0 0, L_0x7ffdf41b0330;  1 drivers
v0x7ffdf41536d0_0 .net "input_a", 0 0, L_0x7ffdf41b1600;  alias, 1 drivers
v0x7ffdf4153780_0 .net "input_b", 0 0, L_0x7ffdf41ae9f0;  alias, 1 drivers
v0x7ffdf4153820_0 .net "invert_sel", 0 0, L_0x7ffdf41b0210;  1 drivers
v0x7ffdf4153900_0 .net "output_c", 0 0, L_0x7ffdf41b03a0;  alias, 1 drivers
v0x7ffdf4153990_0 .net "sel", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
S_0x7ffdf4153a70 .scope module, "select_B" "MUX_2_1" 4 58, 4 1 0, S_0x7ffdf41528e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41b0490 .functor NOT 1, L_0x7ffdf41c3960, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41b0500 .functor AND 1, L_0x7ffdf41afff0, L_0x7ffdf41b0490, C4<1>, C4<1>;
L_0x7ffdf41b05b0 .functor AND 1, L_0x7ffdf41b01a0, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf41b0620 .functor OR 1, L_0x7ffdf41b0500, L_0x7ffdf41b05b0, C4<0>, C4<0>;
v0x7ffdf4153cb0_0 .net "and_a", 0 0, L_0x7ffdf41b0500;  1 drivers
v0x7ffdf4153d50_0 .net "and_b", 0 0, L_0x7ffdf41b05b0;  1 drivers
v0x7ffdf4153df0_0 .net "input_a", 0 0, L_0x7ffdf41afff0;  alias, 1 drivers
v0x7ffdf4153ea0_0 .net "input_b", 0 0, L_0x7ffdf41b01a0;  alias, 1 drivers
v0x7ffdf4153f40_0 .net "invert_sel", 0 0, L_0x7ffdf41b0490;  1 drivers
v0x7ffdf4154020_0 .net "output_c", 0 0, L_0x7ffdf41b0620;  alias, 1 drivers
v0x7ffdf41540b0_0 .net "sel", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
S_0x7ffdf4154190 .scope module, "select_F" "MUX_4_1" 4 64, 4 15 0, S_0x7ffdf41528e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /INPUT 1 "input_c";
    .port_info 3 /INPUT 1 "input_d";
    .port_info 4 /OUTPUT 1 "output_e";
    .port_info 5 /INPUT 1 "sel_0";
    .port_info 6 /INPUT 1 "sel_1";
L_0x7ffdf41b0cd0 .functor NOT 1, L_0x7ffdf41b13c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41b0d40 .functor NOT 1, L_0x7ffdf41b14e0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41b0dd0 .functor AND 1, L_0x7ffdf41b0710, L_0x7ffdf41b0cd0, L_0x7ffdf41b0d40, C4<1>;
L_0x7ffdf41b0f00 .functor AND 1, L_0x7ffdf41b08c0, L_0x7ffdf41b13c0, L_0x7ffdf41b0d40, C4<1>;
L_0x7ffdf41b0fd0 .functor AND 1, L_0x7ffdf41b09a0, L_0x7ffdf41b0cd0, L_0x7ffdf41b14e0, C4<1>;
L_0x7ffdf41b10f0 .functor AND 1, L_0x7ffdf3563758, L_0x7ffdf41b13c0, L_0x7ffdf41b14e0, C4<1>;
L_0x7ffdf41b11a0 .functor OR 1, L_0x7ffdf41b0dd0, L_0x7ffdf41b0f00, L_0x7ffdf41b0fd0, L_0x7ffdf41b10f0;
v0x7ffdf4154440_0 .net "and_a", 0 0, L_0x7ffdf41b0dd0;  1 drivers
v0x7ffdf41544f0_0 .net "and_b", 0 0, L_0x7ffdf41b0f00;  1 drivers
v0x7ffdf4154590_0 .net "and_c", 0 0, L_0x7ffdf41b0fd0;  1 drivers
v0x7ffdf4154620_0 .net "and_d", 0 0, L_0x7ffdf41b10f0;  1 drivers
v0x7ffdf41546c0_0 .net "input_a", 0 0, L_0x7ffdf41b0710;  alias, 1 drivers
v0x7ffdf41547a0_0 .net "input_b", 0 0, L_0x7ffdf41b08c0;  alias, 1 drivers
v0x7ffdf4154840_0 .net "input_c", 0 0, L_0x7ffdf41b09a0;  alias, 1 drivers
v0x7ffdf41548d0_0 .net "input_d", 0 0, L_0x7ffdf3563758;  alias, 1 drivers
v0x7ffdf4154960_0 .net "output_e", 0 0, L_0x7ffdf41b11a0;  alias, 1 drivers
v0x7ffdf4154a80_0 .net "sel_0", 0 0, L_0x7ffdf41b13c0;  1 drivers
v0x7ffdf4154b20_0 .net "sel_0_invert", 0 0, L_0x7ffdf41b0cd0;  1 drivers
v0x7ffdf4154bc0_0 .net "sel_1", 0 0, L_0x7ffdf41b14e0;  1 drivers
v0x7ffdf4154c60_0 .net "sel_1_invert", 0 0, L_0x7ffdf41b0d40;  1 drivers
S_0x7ffdf41558f0 .scope module, "ALU_28" "ALU_1bit" 3 43, 4 38 0, S_0x7ffdf36f4670;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "result";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "a";
    .port_info 3 /INPUT 1 "b";
    .port_info 4 /INPUT 1 "invertA";
    .port_info 5 /INPUT 1 "invertB";
    .port_info 6 /INPUT 2 "operation";
    .port_info 7 /INPUT 1 "carryIn";
    .port_info 8 /INPUT 1 "less";
L_0x7ffdf41b0110 .functor NOT 1, L_0x7ffdf41b2d20, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41b18e0 .functor NOT 1, L_0x7ffdf41b1720, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41b1e50 .functor AND 1, L_0x7ffdf41b1ae0, L_0x7ffdf41b1d60, C4<1>, C4<1>;
L_0x7ffdf41b2000 .functor OR 1, L_0x7ffdf41b1ae0, L_0x7ffdf41b1d60, C4<0>, C4<0>;
v0x7ffdf4157d80_0 .net "a", 0 0, L_0x7ffdf41b2d20;  1 drivers
v0x7ffdf4157e40_0 .net "and_ab", 0 0, L_0x7ffdf41b1e50;  1 drivers
v0x7ffdf4157ed0_0 .net "b", 0 0, L_0x7ffdf41b1720;  1 drivers
v0x7ffdf4157f80_0 .net "carryIn", 0 0, L_0x7ffdf41b0b90;  alias, 1 drivers
v0x7ffdf4158010_0 .net "carryOut", 0 0, L_0x7ffdf41b22b0;  alias, 1 drivers
v0x7ffdf41580e0_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf4158170_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf4158200_0 .net "invert_a", 0 0, L_0x7ffdf41b0110;  1 drivers
v0x7ffdf41582b0_0 .net "invert_b", 0 0, L_0x7ffdf41b18e0;  1 drivers
L_0x7ffdf35637a0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7ffdf41583e0_0 .net "less", 0 0, L_0x7ffdf35637a0;  1 drivers
v0x7ffdf4158470_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf4158500_0 .net "or_ab", 0 0, L_0x7ffdf41b2000;  1 drivers
v0x7ffdf4158590_0 .net "result", 0 0, L_0x7ffdf41b28c0;  1 drivers
v0x7ffdf4158640_0 .net "select_a", 0 0, L_0x7ffdf41b1ae0;  1 drivers
v0x7ffdf4158710_0 .net "select_b", 0 0, L_0x7ffdf41b1d60;  1 drivers
v0x7ffdf41587e0_0 .net "sum_ans", 0 0, L_0x7ffdf41b20e0;  1 drivers
L_0x7ffdf41b2ae0 .part L_0x7ffdf41c3a00, 0, 1;
L_0x7ffdf41b2c00 .part L_0x7ffdf41c3a00, 1, 1;
S_0x7ffdf4155b90 .scope module, "adder" "Full_adder" 4 63, 5 1 0, S_0x7ffdf41558f0;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "carryIn";
    .port_info 3 /INPUT 1 "input1";
    .port_info 4 /INPUT 1 "input2";
L_0x7ffdf41b2070 .functor XOR 1, L_0x7ffdf41b1ae0, L_0x7ffdf41b1d60, C4<0>, C4<0>;
L_0x7ffdf41b20e0 .functor XOR 1, L_0x7ffdf41b2070, L_0x7ffdf41b0b90, C4<0>, C4<0>;
L_0x7ffdf41b2150 .functor AND 1, L_0x7ffdf41b1ae0, L_0x7ffdf41b1d60, C4<1>, C4<1>;
L_0x7ffdf41b2200 .functor AND 1, L_0x7ffdf41b2070, L_0x7ffdf41b0b90, C4<1>, C4<1>;
L_0x7ffdf41b22b0 .functor OR 1, L_0x7ffdf41b2150, L_0x7ffdf41b2200, C4<0>, C4<0>;
v0x7ffdf4155e00_0 .net "carryIn", 0 0, L_0x7ffdf41b0b90;  alias, 1 drivers
v0x7ffdf4155ed0_0 .net "carryOut", 0 0, L_0x7ffdf41b22b0;  alias, 1 drivers
v0x7ffdf4155f60_0 .net "input1", 0 0, L_0x7ffdf41b1ae0;  alias, 1 drivers
v0x7ffdf4155ff0_0 .net "input2", 0 0, L_0x7ffdf41b1d60;  alias, 1 drivers
v0x7ffdf4156080_0 .net "sum", 0 0, L_0x7ffdf41b20e0;  alias, 1 drivers
v0x7ffdf4156150_0 .net "w1", 0 0, L_0x7ffdf41b2070;  1 drivers
v0x7ffdf41561e0_0 .net "w2", 0 0, L_0x7ffdf41b2150;  1 drivers
v0x7ffdf4156280_0 .net "w3", 0 0, L_0x7ffdf41b2200;  1 drivers
S_0x7ffdf41563a0 .scope module, "select_A" "MUX_2_1" 4 57, 4 1 0, S_0x7ffdf41558f0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41b1950 .functor NOT 1, L_0x7ffdf41c38c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41b19c0 .functor AND 1, L_0x7ffdf41b2d20, L_0x7ffdf41b1950, C4<1>, C4<1>;
L_0x7ffdf41b1a70 .functor AND 1, L_0x7ffdf41b0110, L_0x7ffdf41c38c0, C4<1>, C4<1>;
L_0x7ffdf41b1ae0 .functor OR 1, L_0x7ffdf41b19c0, L_0x7ffdf41b1a70, C4<0>, C4<0>;
v0x7ffdf41565c0_0 .net "and_a", 0 0, L_0x7ffdf41b19c0;  1 drivers
v0x7ffdf4156650_0 .net "and_b", 0 0, L_0x7ffdf41b1a70;  1 drivers
v0x7ffdf41566e0_0 .net "input_a", 0 0, L_0x7ffdf41b2d20;  alias, 1 drivers
v0x7ffdf4156790_0 .net "input_b", 0 0, L_0x7ffdf41b0110;  alias, 1 drivers
v0x7ffdf4156830_0 .net "invert_sel", 0 0, L_0x7ffdf41b1950;  1 drivers
v0x7ffdf4156910_0 .net "output_c", 0 0, L_0x7ffdf41b1ae0;  alias, 1 drivers
v0x7ffdf41569a0_0 .net "sel", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
S_0x7ffdf4156a80 .scope module, "select_B" "MUX_2_1" 4 58, 4 1 0, S_0x7ffdf41558f0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41b1bd0 .functor NOT 1, L_0x7ffdf41c3960, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41b1c40 .functor AND 1, L_0x7ffdf41b1720, L_0x7ffdf41b1bd0, C4<1>, C4<1>;
L_0x7ffdf41b1cf0 .functor AND 1, L_0x7ffdf41b18e0, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf41b1d60 .functor OR 1, L_0x7ffdf41b1c40, L_0x7ffdf41b1cf0, C4<0>, C4<0>;
v0x7ffdf4156cc0_0 .net "and_a", 0 0, L_0x7ffdf41b1c40;  1 drivers
v0x7ffdf4156d60_0 .net "and_b", 0 0, L_0x7ffdf41b1cf0;  1 drivers
v0x7ffdf4156e00_0 .net "input_a", 0 0, L_0x7ffdf41b1720;  alias, 1 drivers
v0x7ffdf4156eb0_0 .net "input_b", 0 0, L_0x7ffdf41b18e0;  alias, 1 drivers
v0x7ffdf4156f50_0 .net "invert_sel", 0 0, L_0x7ffdf41b1bd0;  1 drivers
v0x7ffdf4157030_0 .net "output_c", 0 0, L_0x7ffdf41b1d60;  alias, 1 drivers
v0x7ffdf41570c0_0 .net "sel", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
S_0x7ffdf41571a0 .scope module, "select_F" "MUX_4_1" 4 64, 4 15 0, S_0x7ffdf41558f0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /INPUT 1 "input_c";
    .port_info 3 /INPUT 1 "input_d";
    .port_info 4 /OUTPUT 1 "output_e";
    .port_info 5 /INPUT 1 "sel_0";
    .port_info 6 /INPUT 1 "sel_1";
L_0x7ffdf41b23f0 .functor NOT 1, L_0x7ffdf41b2ae0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41b2460 .functor NOT 1, L_0x7ffdf41b2c00, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41b24f0 .functor AND 1, L_0x7ffdf41b1e50, L_0x7ffdf41b23f0, L_0x7ffdf41b2460, C4<1>;
L_0x7ffdf41b2620 .functor AND 1, L_0x7ffdf41b2000, L_0x7ffdf41b2ae0, L_0x7ffdf41b2460, C4<1>;
L_0x7ffdf41b26f0 .functor AND 1, L_0x7ffdf41b20e0, L_0x7ffdf41b23f0, L_0x7ffdf41b2c00, C4<1>;
L_0x7ffdf41b2810 .functor AND 1, L_0x7ffdf35637a0, L_0x7ffdf41b2ae0, L_0x7ffdf41b2c00, C4<1>;
L_0x7ffdf41b28c0 .functor OR 1, L_0x7ffdf41b24f0, L_0x7ffdf41b2620, L_0x7ffdf41b26f0, L_0x7ffdf41b2810;
v0x7ffdf4157450_0 .net "and_a", 0 0, L_0x7ffdf41b24f0;  1 drivers
v0x7ffdf4157500_0 .net "and_b", 0 0, L_0x7ffdf41b2620;  1 drivers
v0x7ffdf41575a0_0 .net "and_c", 0 0, L_0x7ffdf41b26f0;  1 drivers
v0x7ffdf4157630_0 .net "and_d", 0 0, L_0x7ffdf41b2810;  1 drivers
v0x7ffdf41576d0_0 .net "input_a", 0 0, L_0x7ffdf41b1e50;  alias, 1 drivers
v0x7ffdf41577b0_0 .net "input_b", 0 0, L_0x7ffdf41b2000;  alias, 1 drivers
v0x7ffdf4157850_0 .net "input_c", 0 0, L_0x7ffdf41b20e0;  alias, 1 drivers
v0x7ffdf41578e0_0 .net "input_d", 0 0, L_0x7ffdf35637a0;  alias, 1 drivers
v0x7ffdf4157970_0 .net "output_e", 0 0, L_0x7ffdf41b28c0;  alias, 1 drivers
v0x7ffdf4157a90_0 .net "sel_0", 0 0, L_0x7ffdf41b2ae0;  1 drivers
v0x7ffdf4157b30_0 .net "sel_0_invert", 0 0, L_0x7ffdf41b23f0;  1 drivers
v0x7ffdf4157bd0_0 .net "sel_1", 0 0, L_0x7ffdf41b2c00;  1 drivers
v0x7ffdf4157c70_0 .net "sel_1_invert", 0 0, L_0x7ffdf41b2460;  1 drivers
S_0x7ffdf4158900 .scope module, "ALU_29" "ALU_1bit" 3 44, 4 38 0, S_0x7ffdf36f4670;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "result";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "a";
    .port_info 3 /INPUT 1 "b";
    .port_info 4 /INPUT 1 "invertA";
    .port_info 5 /INPUT 1 "invertB";
    .port_info 6 /INPUT 2 "operation";
    .port_info 7 /INPUT 1 "carryIn";
    .port_info 8 /INPUT 1 "less";
L_0x7ffdf41b1840 .functor NOT 1, L_0x7ffdf41b4450, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41b3010 .functor NOT 1, L_0x7ffdf41b2e40, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41b3580 .functor AND 1, L_0x7ffdf41b3210, L_0x7ffdf41b3490, C4<1>, C4<1>;
L_0x7ffdf41b3730 .functor OR 1, L_0x7ffdf41b3210, L_0x7ffdf41b3490, C4<0>, C4<0>;
v0x7ffdf415ad90_0 .net "a", 0 0, L_0x7ffdf41b4450;  1 drivers
v0x7ffdf415ae50_0 .net "and_ab", 0 0, L_0x7ffdf41b3580;  1 drivers
v0x7ffdf415aee0_0 .net "b", 0 0, L_0x7ffdf41b2e40;  1 drivers
v0x7ffdf415af90_0 .net "carryIn", 0 0, L_0x7ffdf41b22b0;  alias, 1 drivers
v0x7ffdf415b020_0 .net "carryOut", 0 0, L_0x7ffdf41b39e0;  alias, 1 drivers
v0x7ffdf415b0f0_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf415b180_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf415b210_0 .net "invert_a", 0 0, L_0x7ffdf41b1840;  1 drivers
v0x7ffdf415b2c0_0 .net "invert_b", 0 0, L_0x7ffdf41b3010;  1 drivers
L_0x7ffdf35637e8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7ffdf415b3f0_0 .net "less", 0 0, L_0x7ffdf35637e8;  1 drivers
v0x7ffdf415b480_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf415b510_0 .net "or_ab", 0 0, L_0x7ffdf41b3730;  1 drivers
v0x7ffdf415b5a0_0 .net "result", 0 0, L_0x7ffdf41b3ff0;  1 drivers
v0x7ffdf415b650_0 .net "select_a", 0 0, L_0x7ffdf41b3210;  1 drivers
v0x7ffdf415b720_0 .net "select_b", 0 0, L_0x7ffdf41b3490;  1 drivers
v0x7ffdf415b7f0_0 .net "sum_ans", 0 0, L_0x7ffdf41b3810;  1 drivers
L_0x7ffdf41b4210 .part L_0x7ffdf41c3a00, 0, 1;
L_0x7ffdf41b4330 .part L_0x7ffdf41c3a00, 1, 1;
S_0x7ffdf4158ba0 .scope module, "adder" "Full_adder" 4 63, 5 1 0, S_0x7ffdf4158900;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "carryIn";
    .port_info 3 /INPUT 1 "input1";
    .port_info 4 /INPUT 1 "input2";
L_0x7ffdf41b37a0 .functor XOR 1, L_0x7ffdf41b3210, L_0x7ffdf41b3490, C4<0>, C4<0>;
L_0x7ffdf41b3810 .functor XOR 1, L_0x7ffdf41b37a0, L_0x7ffdf41b22b0, C4<0>, C4<0>;
L_0x7ffdf41b3880 .functor AND 1, L_0x7ffdf41b3210, L_0x7ffdf41b3490, C4<1>, C4<1>;
L_0x7ffdf41b3930 .functor AND 1, L_0x7ffdf41b37a0, L_0x7ffdf41b22b0, C4<1>, C4<1>;
L_0x7ffdf41b39e0 .functor OR 1, L_0x7ffdf41b3880, L_0x7ffdf41b3930, C4<0>, C4<0>;
v0x7ffdf4158e10_0 .net "carryIn", 0 0, L_0x7ffdf41b22b0;  alias, 1 drivers
v0x7ffdf4158ee0_0 .net "carryOut", 0 0, L_0x7ffdf41b39e0;  alias, 1 drivers
v0x7ffdf4158f70_0 .net "input1", 0 0, L_0x7ffdf41b3210;  alias, 1 drivers
v0x7ffdf4159000_0 .net "input2", 0 0, L_0x7ffdf41b3490;  alias, 1 drivers
v0x7ffdf4159090_0 .net "sum", 0 0, L_0x7ffdf41b3810;  alias, 1 drivers
v0x7ffdf4159160_0 .net "w1", 0 0, L_0x7ffdf41b37a0;  1 drivers
v0x7ffdf41591f0_0 .net "w2", 0 0, L_0x7ffdf41b3880;  1 drivers
v0x7ffdf4159290_0 .net "w3", 0 0, L_0x7ffdf41b3930;  1 drivers
S_0x7ffdf41593b0 .scope module, "select_A" "MUX_2_1" 4 57, 4 1 0, S_0x7ffdf4158900;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41b3080 .functor NOT 1, L_0x7ffdf41c38c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41b30f0 .functor AND 1, L_0x7ffdf41b4450, L_0x7ffdf41b3080, C4<1>, C4<1>;
L_0x7ffdf41b31a0 .functor AND 1, L_0x7ffdf41b1840, L_0x7ffdf41c38c0, C4<1>, C4<1>;
L_0x7ffdf41b3210 .functor OR 1, L_0x7ffdf41b30f0, L_0x7ffdf41b31a0, C4<0>, C4<0>;
v0x7ffdf41595d0_0 .net "and_a", 0 0, L_0x7ffdf41b30f0;  1 drivers
v0x7ffdf4159660_0 .net "and_b", 0 0, L_0x7ffdf41b31a0;  1 drivers
v0x7ffdf41596f0_0 .net "input_a", 0 0, L_0x7ffdf41b4450;  alias, 1 drivers
v0x7ffdf41597a0_0 .net "input_b", 0 0, L_0x7ffdf41b1840;  alias, 1 drivers
v0x7ffdf4159840_0 .net "invert_sel", 0 0, L_0x7ffdf41b3080;  1 drivers
v0x7ffdf4159920_0 .net "output_c", 0 0, L_0x7ffdf41b3210;  alias, 1 drivers
v0x7ffdf41599b0_0 .net "sel", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
S_0x7ffdf4159a90 .scope module, "select_B" "MUX_2_1" 4 58, 4 1 0, S_0x7ffdf4158900;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41b3300 .functor NOT 1, L_0x7ffdf41c3960, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41b3370 .functor AND 1, L_0x7ffdf41b2e40, L_0x7ffdf41b3300, C4<1>, C4<1>;
L_0x7ffdf41b3420 .functor AND 1, L_0x7ffdf41b3010, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf41b3490 .functor OR 1, L_0x7ffdf41b3370, L_0x7ffdf41b3420, C4<0>, C4<0>;
v0x7ffdf4159cd0_0 .net "and_a", 0 0, L_0x7ffdf41b3370;  1 drivers
v0x7ffdf4159d70_0 .net "and_b", 0 0, L_0x7ffdf41b3420;  1 drivers
v0x7ffdf4159e10_0 .net "input_a", 0 0, L_0x7ffdf41b2e40;  alias, 1 drivers
v0x7ffdf4159ec0_0 .net "input_b", 0 0, L_0x7ffdf41b3010;  alias, 1 drivers
v0x7ffdf4159f60_0 .net "invert_sel", 0 0, L_0x7ffdf41b3300;  1 drivers
v0x7ffdf415a040_0 .net "output_c", 0 0, L_0x7ffdf41b3490;  alias, 1 drivers
v0x7ffdf415a0d0_0 .net "sel", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
S_0x7ffdf415a1b0 .scope module, "select_F" "MUX_4_1" 4 64, 4 15 0, S_0x7ffdf4158900;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /INPUT 1 "input_c";
    .port_info 3 /INPUT 1 "input_d";
    .port_info 4 /OUTPUT 1 "output_e";
    .port_info 5 /INPUT 1 "sel_0";
    .port_info 6 /INPUT 1 "sel_1";
L_0x7ffdf41b3b20 .functor NOT 1, L_0x7ffdf41b4210, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41b3b90 .functor NOT 1, L_0x7ffdf41b4330, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41b3c20 .functor AND 1, L_0x7ffdf41b3580, L_0x7ffdf41b3b20, L_0x7ffdf41b3b90, C4<1>;
L_0x7ffdf41b3d50 .functor AND 1, L_0x7ffdf41b3730, L_0x7ffdf41b4210, L_0x7ffdf41b3b90, C4<1>;
L_0x7ffdf41b3e20 .functor AND 1, L_0x7ffdf41b3810, L_0x7ffdf41b3b20, L_0x7ffdf41b4330, C4<1>;
L_0x7ffdf41b3f40 .functor AND 1, L_0x7ffdf35637e8, L_0x7ffdf41b4210, L_0x7ffdf41b4330, C4<1>;
L_0x7ffdf41b3ff0 .functor OR 1, L_0x7ffdf41b3c20, L_0x7ffdf41b3d50, L_0x7ffdf41b3e20, L_0x7ffdf41b3f40;
v0x7ffdf415a460_0 .net "and_a", 0 0, L_0x7ffdf41b3c20;  1 drivers
v0x7ffdf415a510_0 .net "and_b", 0 0, L_0x7ffdf41b3d50;  1 drivers
v0x7ffdf415a5b0_0 .net "and_c", 0 0, L_0x7ffdf41b3e20;  1 drivers
v0x7ffdf415a640_0 .net "and_d", 0 0, L_0x7ffdf41b3f40;  1 drivers
v0x7ffdf415a6e0_0 .net "input_a", 0 0, L_0x7ffdf41b3580;  alias, 1 drivers
v0x7ffdf415a7c0_0 .net "input_b", 0 0, L_0x7ffdf41b3730;  alias, 1 drivers
v0x7ffdf415a860_0 .net "input_c", 0 0, L_0x7ffdf41b3810;  alias, 1 drivers
v0x7ffdf415a8f0_0 .net "input_d", 0 0, L_0x7ffdf35637e8;  alias, 1 drivers
v0x7ffdf415a980_0 .net "output_e", 0 0, L_0x7ffdf41b3ff0;  alias, 1 drivers
v0x7ffdf415aaa0_0 .net "sel_0", 0 0, L_0x7ffdf41b4210;  1 drivers
v0x7ffdf415ab40_0 .net "sel_0_invert", 0 0, L_0x7ffdf41b3b20;  1 drivers
v0x7ffdf415abe0_0 .net "sel_1", 0 0, L_0x7ffdf41b4330;  1 drivers
v0x7ffdf415ac80_0 .net "sel_1_invert", 0 0, L_0x7ffdf41b3b90;  1 drivers
S_0x7ffdf415b910 .scope module, "ALU_3" "ALU_1bit" 3 18, 4 38 0, S_0x7ffdf36f4670;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "result";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "a";
    .port_info 3 /INPUT 1 "b";
    .port_info 4 /INPUT 1 "invertA";
    .port_info 5 /INPUT 1 "invertB";
    .port_info 6 /INPUT 2 "operation";
    .port_info 7 /INPUT 1 "carryIn";
    .port_info 8 /INPUT 1 "less";
L_0x7ffdf418e1e0 .functor NOT 1, L_0x7ffdf418f630, C4<0>, C4<0>, C4<0>;
L_0x7ffdf418e250 .functor NOT 1, L_0x7ffdf418f750, C4<0>, C4<0>, C4<0>;
L_0x7ffdf418e740 .functor AND 1, L_0x7ffdf418e410, L_0x7ffdf418e650, C4<1>, C4<1>;
L_0x7ffdf418e8f0 .functor OR 1, L_0x7ffdf418e410, L_0x7ffdf418e650, C4<0>, C4<0>;
v0x7ffdf415dda0_0 .net "a", 0 0, L_0x7ffdf418f630;  1 drivers
v0x7ffdf415de60_0 .net "and_ab", 0 0, L_0x7ffdf418e740;  1 drivers
v0x7ffdf415def0_0 .net "b", 0 0, L_0x7ffdf418f750;  1 drivers
v0x7ffdf415dfa0_0 .net "carryIn", 0 0, L_0x7ffdf418d430;  alias, 1 drivers
v0x7ffdf415e030_0 .net "carryOut", 0 0, L_0x7ffdf418ebc0;  alias, 1 drivers
v0x7ffdf415e100_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf415e190_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf415e220_0 .net "invert_a", 0 0, L_0x7ffdf418e1e0;  1 drivers
v0x7ffdf415e2d0_0 .net "invert_b", 0 0, L_0x7ffdf418e250;  1 drivers
L_0x7ffdf3563098 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7ffdf415e400_0 .net "less", 0 0, L_0x7ffdf3563098;  1 drivers
v0x7ffdf415e490_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf415e520_0 .net "or_ab", 0 0, L_0x7ffdf418e8f0;  1 drivers
v0x7ffdf415e5b0_0 .net "result", 0 0, L_0x7ffdf418f1d0;  1 drivers
v0x7ffdf415e660_0 .net "select_a", 0 0, L_0x7ffdf418e410;  1 drivers
v0x7ffdf415e730_0 .net "select_b", 0 0, L_0x7ffdf418e650;  1 drivers
v0x7ffdf415e800_0 .net "sum_ans", 0 0, L_0x7ffdf418e9d0;  1 drivers
L_0x7ffdf418f3f0 .part L_0x7ffdf41c3a00, 0, 1;
L_0x7ffdf418f510 .part L_0x7ffdf41c3a00, 1, 1;
S_0x7ffdf415bbb0 .scope module, "adder" "Full_adder" 4 63, 5 1 0, S_0x7ffdf415b910;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "carryIn";
    .port_info 3 /INPUT 1 "input1";
    .port_info 4 /INPUT 1 "input2";
L_0x7ffdf418e960 .functor XOR 1, L_0x7ffdf418e410, L_0x7ffdf418e650, C4<0>, C4<0>;
L_0x7ffdf418e9d0 .functor XOR 1, L_0x7ffdf418e960, L_0x7ffdf418d430, C4<0>, C4<0>;
L_0x7ffdf418ea80 .functor AND 1, L_0x7ffdf418e410, L_0x7ffdf418e650, C4<1>, C4<1>;
L_0x7ffdf418eb10 .functor AND 1, L_0x7ffdf418e960, L_0x7ffdf418d430, C4<1>, C4<1>;
L_0x7ffdf418ebc0 .functor OR 1, L_0x7ffdf418ea80, L_0x7ffdf418eb10, C4<0>, C4<0>;
v0x7ffdf415be20_0 .net "carryIn", 0 0, L_0x7ffdf418d430;  alias, 1 drivers
v0x7ffdf415bef0_0 .net "carryOut", 0 0, L_0x7ffdf418ebc0;  alias, 1 drivers
v0x7ffdf415bf80_0 .net "input1", 0 0, L_0x7ffdf418e410;  alias, 1 drivers
v0x7ffdf415c010_0 .net "input2", 0 0, L_0x7ffdf418e650;  alias, 1 drivers
v0x7ffdf415c0a0_0 .net "sum", 0 0, L_0x7ffdf418e9d0;  alias, 1 drivers
v0x7ffdf415c170_0 .net "w1", 0 0, L_0x7ffdf418e960;  1 drivers
v0x7ffdf415c200_0 .net "w2", 0 0, L_0x7ffdf418ea80;  1 drivers
v0x7ffdf415c2a0_0 .net "w3", 0 0, L_0x7ffdf418eb10;  1 drivers
S_0x7ffdf415c3c0 .scope module, "select_A" "MUX_2_1" 4 57, 4 1 0, S_0x7ffdf415b910;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf418e2c0 .functor NOT 1, L_0x7ffdf41c38c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf418e330 .functor AND 1, L_0x7ffdf418f630, L_0x7ffdf418e2c0, C4<1>, C4<1>;
L_0x7ffdf418e3a0 .functor AND 1, L_0x7ffdf418e1e0, L_0x7ffdf41c38c0, C4<1>, C4<1>;
L_0x7ffdf418e410 .functor OR 1, L_0x7ffdf418e330, L_0x7ffdf418e3a0, C4<0>, C4<0>;
v0x7ffdf415c5e0_0 .net "and_a", 0 0, L_0x7ffdf418e330;  1 drivers
v0x7ffdf415c670_0 .net "and_b", 0 0, L_0x7ffdf418e3a0;  1 drivers
v0x7ffdf415c700_0 .net "input_a", 0 0, L_0x7ffdf418f630;  alias, 1 drivers
v0x7ffdf415c7b0_0 .net "input_b", 0 0, L_0x7ffdf418e1e0;  alias, 1 drivers
v0x7ffdf415c850_0 .net "invert_sel", 0 0, L_0x7ffdf418e2c0;  1 drivers
v0x7ffdf415c930_0 .net "output_c", 0 0, L_0x7ffdf418e410;  alias, 1 drivers
v0x7ffdf415c9c0_0 .net "sel", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
S_0x7ffdf415caa0 .scope module, "select_B" "MUX_2_1" 4 58, 4 1 0, S_0x7ffdf415b910;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf418e4c0 .functor NOT 1, L_0x7ffdf41c3960, C4<0>, C4<0>, C4<0>;
L_0x7ffdf418e530 .functor AND 1, L_0x7ffdf418f750, L_0x7ffdf418e4c0, C4<1>, C4<1>;
L_0x7ffdf418e5e0 .functor AND 1, L_0x7ffdf418e250, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf418e650 .functor OR 1, L_0x7ffdf418e530, L_0x7ffdf418e5e0, C4<0>, C4<0>;
v0x7ffdf415cce0_0 .net "and_a", 0 0, L_0x7ffdf418e530;  1 drivers
v0x7ffdf415cd80_0 .net "and_b", 0 0, L_0x7ffdf418e5e0;  1 drivers
v0x7ffdf415ce20_0 .net "input_a", 0 0, L_0x7ffdf418f750;  alias, 1 drivers
v0x7ffdf415ced0_0 .net "input_b", 0 0, L_0x7ffdf418e250;  alias, 1 drivers
v0x7ffdf415cf70_0 .net "invert_sel", 0 0, L_0x7ffdf418e4c0;  1 drivers
v0x7ffdf415d050_0 .net "output_c", 0 0, L_0x7ffdf418e650;  alias, 1 drivers
v0x7ffdf415d0e0_0 .net "sel", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
S_0x7ffdf415d1c0 .scope module, "select_F" "MUX_4_1" 4 64, 4 15 0, S_0x7ffdf415b910;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /INPUT 1 "input_c";
    .port_info 3 /INPUT 1 "input_d";
    .port_info 4 /OUTPUT 1 "output_e";
    .port_info 5 /INPUT 1 "sel_0";
    .port_info 6 /INPUT 1 "sel_1";
L_0x7ffdf418ed00 .functor NOT 1, L_0x7ffdf418f3f0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf418ed70 .functor NOT 1, L_0x7ffdf418f510, C4<0>, C4<0>, C4<0>;
L_0x7ffdf418ee00 .functor AND 1, L_0x7ffdf418e740, L_0x7ffdf418ed00, L_0x7ffdf418ed70, C4<1>;
L_0x7ffdf418ef30 .functor AND 1, L_0x7ffdf418e8f0, L_0x7ffdf418f3f0, L_0x7ffdf418ed70, C4<1>;
L_0x7ffdf418f000 .functor AND 1, L_0x7ffdf418e9d0, L_0x7ffdf418ed00, L_0x7ffdf418f510, C4<1>;
L_0x7ffdf418f120 .functor AND 1, L_0x7ffdf3563098, L_0x7ffdf418f3f0, L_0x7ffdf418f510, C4<1>;
L_0x7ffdf418f1d0 .functor OR 1, L_0x7ffdf418ee00, L_0x7ffdf418ef30, L_0x7ffdf418f000, L_0x7ffdf418f120;
v0x7ffdf415d470_0 .net "and_a", 0 0, L_0x7ffdf418ee00;  1 drivers
v0x7ffdf415d520_0 .net "and_b", 0 0, L_0x7ffdf418ef30;  1 drivers
v0x7ffdf415d5c0_0 .net "and_c", 0 0, L_0x7ffdf418f000;  1 drivers
v0x7ffdf415d650_0 .net "and_d", 0 0, L_0x7ffdf418f120;  1 drivers
v0x7ffdf415d6f0_0 .net "input_a", 0 0, L_0x7ffdf418e740;  alias, 1 drivers
v0x7ffdf415d7d0_0 .net "input_b", 0 0, L_0x7ffdf418e8f0;  alias, 1 drivers
v0x7ffdf415d870_0 .net "input_c", 0 0, L_0x7ffdf418e9d0;  alias, 1 drivers
v0x7ffdf415d900_0 .net "input_d", 0 0, L_0x7ffdf3563098;  alias, 1 drivers
v0x7ffdf415d990_0 .net "output_e", 0 0, L_0x7ffdf418f1d0;  alias, 1 drivers
v0x7ffdf415dab0_0 .net "sel_0", 0 0, L_0x7ffdf418f3f0;  1 drivers
v0x7ffdf415db50_0 .net "sel_0_invert", 0 0, L_0x7ffdf418ed00;  1 drivers
v0x7ffdf415dbf0_0 .net "sel_1", 0 0, L_0x7ffdf418f510;  1 drivers
v0x7ffdf415dc90_0 .net "sel_1_invert", 0 0, L_0x7ffdf418ed70;  1 drivers
S_0x7ffdf415e920 .scope module, "ALU_30" "ALU_1bit" 3 45, 4 38 0, S_0x7ffdf36f4670;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "result";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "a";
    .port_info 3 /INPUT 1 "b";
    .port_info 4 /INPUT 1 "invertA";
    .port_info 5 /INPUT 1 "invertB";
    .port_info 6 /INPUT 2 "operation";
    .port_info 7 /INPUT 1 "carryIn";
    .port_info 8 /INPUT 1 "less";
L_0x7ffdf41b2f60 .functor NOT 1, L_0x7ffdf41b5b70, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41b4750 .functor NOT 1, L_0x7ffdf41b4570, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41b4c80 .functor AND 1, L_0x7ffdf41b4910, L_0x7ffdf41b4b90, C4<1>, C4<1>;
L_0x7ffdf41b4e30 .functor OR 1, L_0x7ffdf41b4910, L_0x7ffdf41b4b90, C4<0>, C4<0>;
v0x7ffdf4160db0_0 .net "a", 0 0, L_0x7ffdf41b5b70;  1 drivers
v0x7ffdf4160e70_0 .net "and_ab", 0 0, L_0x7ffdf41b4c80;  1 drivers
v0x7ffdf4160f00_0 .net "b", 0 0, L_0x7ffdf41b4570;  1 drivers
v0x7ffdf4160fb0_0 .net "carryIn", 0 0, L_0x7ffdf41b39e0;  alias, 1 drivers
v0x7ffdf4161040_0 .net "carryOut", 0 0, L_0x7ffdf41b5100;  alias, 1 drivers
v0x7ffdf4161110_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf41611a0_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf4161230_0 .net "invert_a", 0 0, L_0x7ffdf41b2f60;  1 drivers
v0x7ffdf41612e0_0 .net "invert_b", 0 0, L_0x7ffdf41b4750;  1 drivers
L_0x7ffdf3563830 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7ffdf4161410_0 .net "less", 0 0, L_0x7ffdf3563830;  1 drivers
v0x7ffdf41614a0_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf4161530_0 .net "or_ab", 0 0, L_0x7ffdf41b4e30;  1 drivers
v0x7ffdf41615c0_0 .net "result", 0 0, L_0x7ffdf41b5710;  1 drivers
v0x7ffdf4161670_0 .net "select_a", 0 0, L_0x7ffdf41b4910;  1 drivers
v0x7ffdf4161740_0 .net "select_b", 0 0, L_0x7ffdf41b4b90;  1 drivers
v0x7ffdf4161810_0 .net "sum_ans", 0 0, L_0x7ffdf41b4f10;  1 drivers
L_0x7ffdf41b5930 .part L_0x7ffdf41c3a00, 0, 1;
L_0x7ffdf41b5a50 .part L_0x7ffdf41c3a00, 1, 1;
S_0x7ffdf415ebc0 .scope module, "adder" "Full_adder" 4 63, 5 1 0, S_0x7ffdf415e920;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "carryIn";
    .port_info 3 /INPUT 1 "input1";
    .port_info 4 /INPUT 1 "input2";
L_0x7ffdf41b4ea0 .functor XOR 1, L_0x7ffdf41b4910, L_0x7ffdf41b4b90, C4<0>, C4<0>;
L_0x7ffdf41b4f10 .functor XOR 1, L_0x7ffdf41b4ea0, L_0x7ffdf41b39e0, C4<0>, C4<0>;
L_0x7ffdf41b4fc0 .functor AND 1, L_0x7ffdf41b4910, L_0x7ffdf41b4b90, C4<1>, C4<1>;
L_0x7ffdf41b5050 .functor AND 1, L_0x7ffdf41b4ea0, L_0x7ffdf41b39e0, C4<1>, C4<1>;
L_0x7ffdf41b5100 .functor OR 1, L_0x7ffdf41b4fc0, L_0x7ffdf41b5050, C4<0>, C4<0>;
v0x7ffdf415ee30_0 .net "carryIn", 0 0, L_0x7ffdf41b39e0;  alias, 1 drivers
v0x7ffdf415ef00_0 .net "carryOut", 0 0, L_0x7ffdf41b5100;  alias, 1 drivers
v0x7ffdf415ef90_0 .net "input1", 0 0, L_0x7ffdf41b4910;  alias, 1 drivers
v0x7ffdf415f020_0 .net "input2", 0 0, L_0x7ffdf41b4b90;  alias, 1 drivers
v0x7ffdf415f0b0_0 .net "sum", 0 0, L_0x7ffdf41b4f10;  alias, 1 drivers
v0x7ffdf415f180_0 .net "w1", 0 0, L_0x7ffdf41b4ea0;  1 drivers
v0x7ffdf415f210_0 .net "w2", 0 0, L_0x7ffdf41b4fc0;  1 drivers
v0x7ffdf415f2b0_0 .net "w3", 0 0, L_0x7ffdf41b5050;  1 drivers
S_0x7ffdf415f3d0 .scope module, "select_A" "MUX_2_1" 4 57, 4 1 0, S_0x7ffdf415e920;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41b47c0 .functor NOT 1, L_0x7ffdf41c38c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41b4830 .functor AND 1, L_0x7ffdf41b5b70, L_0x7ffdf41b47c0, C4<1>, C4<1>;
L_0x7ffdf41b48a0 .functor AND 1, L_0x7ffdf41b2f60, L_0x7ffdf41c38c0, C4<1>, C4<1>;
L_0x7ffdf41b4910 .functor OR 1, L_0x7ffdf41b4830, L_0x7ffdf41b48a0, C4<0>, C4<0>;
v0x7ffdf415f5f0_0 .net "and_a", 0 0, L_0x7ffdf41b4830;  1 drivers
v0x7ffdf415f680_0 .net "and_b", 0 0, L_0x7ffdf41b48a0;  1 drivers
v0x7ffdf415f710_0 .net "input_a", 0 0, L_0x7ffdf41b5b70;  alias, 1 drivers
v0x7ffdf415f7c0_0 .net "input_b", 0 0, L_0x7ffdf41b2f60;  alias, 1 drivers
v0x7ffdf415f860_0 .net "invert_sel", 0 0, L_0x7ffdf41b47c0;  1 drivers
v0x7ffdf415f940_0 .net "output_c", 0 0, L_0x7ffdf41b4910;  alias, 1 drivers
v0x7ffdf415f9d0_0 .net "sel", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
S_0x7ffdf415fab0 .scope module, "select_B" "MUX_2_1" 4 58, 4 1 0, S_0x7ffdf415e920;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41b4a00 .functor NOT 1, L_0x7ffdf41c3960, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41b4a70 .functor AND 1, L_0x7ffdf41b4570, L_0x7ffdf41b4a00, C4<1>, C4<1>;
L_0x7ffdf41b4b20 .functor AND 1, L_0x7ffdf41b4750, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf41b4b90 .functor OR 1, L_0x7ffdf41b4a70, L_0x7ffdf41b4b20, C4<0>, C4<0>;
v0x7ffdf415fcf0_0 .net "and_a", 0 0, L_0x7ffdf41b4a70;  1 drivers
v0x7ffdf415fd90_0 .net "and_b", 0 0, L_0x7ffdf41b4b20;  1 drivers
v0x7ffdf415fe30_0 .net "input_a", 0 0, L_0x7ffdf41b4570;  alias, 1 drivers
v0x7ffdf415fee0_0 .net "input_b", 0 0, L_0x7ffdf41b4750;  alias, 1 drivers
v0x7ffdf415ff80_0 .net "invert_sel", 0 0, L_0x7ffdf41b4a00;  1 drivers
v0x7ffdf4160060_0 .net "output_c", 0 0, L_0x7ffdf41b4b90;  alias, 1 drivers
v0x7ffdf41600f0_0 .net "sel", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
S_0x7ffdf41601d0 .scope module, "select_F" "MUX_4_1" 4 64, 4 15 0, S_0x7ffdf415e920;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /INPUT 1 "input_c";
    .port_info 3 /INPUT 1 "input_d";
    .port_info 4 /OUTPUT 1 "output_e";
    .port_info 5 /INPUT 1 "sel_0";
    .port_info 6 /INPUT 1 "sel_1";
L_0x7ffdf41b5240 .functor NOT 1, L_0x7ffdf41b5930, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41b52b0 .functor NOT 1, L_0x7ffdf41b5a50, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41b5340 .functor AND 1, L_0x7ffdf41b4c80, L_0x7ffdf41b5240, L_0x7ffdf41b52b0, C4<1>;
L_0x7ffdf41b5470 .functor AND 1, L_0x7ffdf41b4e30, L_0x7ffdf41b5930, L_0x7ffdf41b52b0, C4<1>;
L_0x7ffdf41b5540 .functor AND 1, L_0x7ffdf41b4f10, L_0x7ffdf41b5240, L_0x7ffdf41b5a50, C4<1>;
L_0x7ffdf41b5660 .functor AND 1, L_0x7ffdf3563830, L_0x7ffdf41b5930, L_0x7ffdf41b5a50, C4<1>;
L_0x7ffdf41b5710 .functor OR 1, L_0x7ffdf41b5340, L_0x7ffdf41b5470, L_0x7ffdf41b5540, L_0x7ffdf41b5660;
v0x7ffdf4160480_0 .net "and_a", 0 0, L_0x7ffdf41b5340;  1 drivers
v0x7ffdf4160530_0 .net "and_b", 0 0, L_0x7ffdf41b5470;  1 drivers
v0x7ffdf41605d0_0 .net "and_c", 0 0, L_0x7ffdf41b5540;  1 drivers
v0x7ffdf4160660_0 .net "and_d", 0 0, L_0x7ffdf41b5660;  1 drivers
v0x7ffdf4160700_0 .net "input_a", 0 0, L_0x7ffdf41b4c80;  alias, 1 drivers
v0x7ffdf41607e0_0 .net "input_b", 0 0, L_0x7ffdf41b4e30;  alias, 1 drivers
v0x7ffdf4160880_0 .net "input_c", 0 0, L_0x7ffdf41b4f10;  alias, 1 drivers
v0x7ffdf4160910_0 .net "input_d", 0 0, L_0x7ffdf3563830;  alias, 1 drivers
v0x7ffdf41609a0_0 .net "output_e", 0 0, L_0x7ffdf41b5710;  alias, 1 drivers
v0x7ffdf4160ac0_0 .net "sel_0", 0 0, L_0x7ffdf41b5930;  1 drivers
v0x7ffdf4160b60_0 .net "sel_0_invert", 0 0, L_0x7ffdf41b5240;  1 drivers
v0x7ffdf4160c00_0 .net "sel_1", 0 0, L_0x7ffdf41b5a50;  1 drivers
v0x7ffdf4160ca0_0 .net "sel_1_invert", 0 0, L_0x7ffdf41b52b0;  1 drivers
S_0x7ffdf4161930 .scope module, "ALU_31" "ALU_1bit_31" 3 47, 4 69 0, S_0x7ffdf36f4670;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "result";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "a";
    .port_info 3 /INPUT 1 "b";
    .port_info 4 /INPUT 1 "invertA";
    .port_info 5 /INPUT 1 "invertB";
    .port_info 6 /INPUT 2 "operation";
    .port_info 7 /INPUT 1 "carryIn";
    .port_info 8 /INPUT 1 "less";
    .port_info 9 /OUTPUT 1 "overflow";
    .port_info 10 /OUTPUT 1 "set";
L_0x7ffdf41b4690 .functor NOT 1, L_0x7ffdf419f710, C4<0>, C4<0>, C4<0>;
L_0x7ffdf419fa30 .functor NOT 1, L_0x7ffdf419f830, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41b5fc0 .functor AND 1, L_0x7ffdf41b5c90, L_0x7ffdf41b5ed0, C4<1>, C4<1>;
L_0x7ffdf41b6170 .functor OR 1, L_0x7ffdf41b5c90, L_0x7ffdf41b5ed0, C4<0>, C4<0>;
L_0x7ffdf41b6ee0 .functor XOR 1, L_0x7ffdf41b5100, L_0x7ffdf41b6420, C4<0>, C4<0>;
v0x7ffdf4163e00_0 .net "a", 0 0, L_0x7ffdf419f710;  1 drivers
v0x7ffdf4163ec0_0 .net "and_ab", 0 0, L_0x7ffdf41b5fc0;  1 drivers
v0x7ffdf4163f50_0 .net "b", 0 0, L_0x7ffdf419f830;  1 drivers
v0x7ffdf4164000_0 .net "carryIn", 0 0, L_0x7ffdf41b5100;  alias, 1 drivers
v0x7ffdf4164090_0 .net "carryOut", 0 0, L_0x7ffdf41b6420;  alias, 1 drivers
v0x7ffdf4164160_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf41641f0_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf4164280_0 .net "invert_a", 0 0, L_0x7ffdf41b4690;  1 drivers
v0x7ffdf4164330_0 .net "invert_b", 0 0, L_0x7ffdf419fa30;  1 drivers
L_0x7ffdf3563878 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7ffdf4164460_0 .net "less", 0 0, L_0x7ffdf3563878;  1 drivers
v0x7ffdf41644f0_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf4164580_0 .net "or_ab", 0 0, L_0x7ffdf41b6170;  1 drivers
v0x7ffdf4164610_0 .net "overflow", 0 0, L_0x7ffdf41b6ee0;  alias, 1 drivers
v0x7ffdf41646a0_0 .net "result", 0 0, L_0x7ffdf41b6a80;  1 drivers
v0x7ffdf4164750_0 .net "select_a", 0 0, L_0x7ffdf41b5c90;  1 drivers
v0x7ffdf4164820_0 .net "select_b", 0 0, L_0x7ffdf41b5ed0;  1 drivers
v0x7ffdf41648f0_0 .net "set", 0 0, L_0x7ffdf41b6250;  alias, 1 drivers
L_0x7ffdf41b6ca0 .part L_0x7ffdf41c3a00, 0, 1;
L_0x7ffdf41b6dc0 .part L_0x7ffdf41c3a00, 1, 1;
S_0x7ffdf4161c10 .scope module, "adder" "Full_adder" 4 95, 5 1 0, S_0x7ffdf4161930;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "carryIn";
    .port_info 3 /INPUT 1 "input1";
    .port_info 4 /INPUT 1 "input2";
L_0x7ffdf41b61e0 .functor XOR 1, L_0x7ffdf41b5c90, L_0x7ffdf41b5ed0, C4<0>, C4<0>;
L_0x7ffdf41b6250 .functor XOR 1, L_0x7ffdf41b61e0, L_0x7ffdf41b5100, C4<0>, C4<0>;
L_0x7ffdf41b6300 .functor AND 1, L_0x7ffdf41b5c90, L_0x7ffdf41b5ed0, C4<1>, C4<1>;
L_0x7ffdf41b6370 .functor AND 1, L_0x7ffdf41b61e0, L_0x7ffdf41b5100, C4<1>, C4<1>;
L_0x7ffdf41b6420 .functor OR 1, L_0x7ffdf41b6300, L_0x7ffdf41b6370, C4<0>, C4<0>;
v0x7ffdf4161e80_0 .net "carryIn", 0 0, L_0x7ffdf41b5100;  alias, 1 drivers
v0x7ffdf4161f50_0 .net "carryOut", 0 0, L_0x7ffdf41b6420;  alias, 1 drivers
v0x7ffdf4161fe0_0 .net "input1", 0 0, L_0x7ffdf41b5c90;  alias, 1 drivers
v0x7ffdf4162070_0 .net "input2", 0 0, L_0x7ffdf41b5ed0;  alias, 1 drivers
v0x7ffdf4162100_0 .net "sum", 0 0, L_0x7ffdf41b6250;  alias, 1 drivers
v0x7ffdf4162210_0 .net "w1", 0 0, L_0x7ffdf41b61e0;  1 drivers
v0x7ffdf41622a0_0 .net "w2", 0 0, L_0x7ffdf41b6300;  1 drivers
v0x7ffdf4162330_0 .net "w3", 0 0, L_0x7ffdf41b6370;  1 drivers
S_0x7ffdf4162430 .scope module, "select_A" "MUX_2_1" 4 89, 4 1 0, S_0x7ffdf4161930;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf419faa0 .functor NOT 1, L_0x7ffdf41c38c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf419fb10 .functor AND 1, L_0x7ffdf419f710, L_0x7ffdf419faa0, C4<1>, C4<1>;
L_0x7ffdf419fb80 .functor AND 1, L_0x7ffdf41b4690, L_0x7ffdf41c38c0, C4<1>, C4<1>;
L_0x7ffdf41b5c90 .functor OR 1, L_0x7ffdf419fb10, L_0x7ffdf419fb80, C4<0>, C4<0>;
v0x7ffdf4162650_0 .net "and_a", 0 0, L_0x7ffdf419fb10;  1 drivers
v0x7ffdf41626e0_0 .net "and_b", 0 0, L_0x7ffdf419fb80;  1 drivers
v0x7ffdf4162770_0 .net "input_a", 0 0, L_0x7ffdf419f710;  alias, 1 drivers
v0x7ffdf4162820_0 .net "input_b", 0 0, L_0x7ffdf41b4690;  alias, 1 drivers
v0x7ffdf41628c0_0 .net "invert_sel", 0 0, L_0x7ffdf419faa0;  1 drivers
v0x7ffdf41629a0_0 .net "output_c", 0 0, L_0x7ffdf41b5c90;  alias, 1 drivers
v0x7ffdf4162a30_0 .net "sel", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
S_0x7ffdf4162b10 .scope module, "select_B" "MUX_2_1" 4 90, 4 1 0, S_0x7ffdf4161930;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41b5d40 .functor NOT 1, L_0x7ffdf41c3960, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41b5db0 .functor AND 1, L_0x7ffdf419f830, L_0x7ffdf41b5d40, C4<1>, C4<1>;
L_0x7ffdf41b5e60 .functor AND 1, L_0x7ffdf419fa30, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf41b5ed0 .functor OR 1, L_0x7ffdf41b5db0, L_0x7ffdf41b5e60, C4<0>, C4<0>;
v0x7ffdf4162d50_0 .net "and_a", 0 0, L_0x7ffdf41b5db0;  1 drivers
v0x7ffdf4162df0_0 .net "and_b", 0 0, L_0x7ffdf41b5e60;  1 drivers
v0x7ffdf4162e90_0 .net "input_a", 0 0, L_0x7ffdf419f830;  alias, 1 drivers
v0x7ffdf4162f40_0 .net "input_b", 0 0, L_0x7ffdf419fa30;  alias, 1 drivers
v0x7ffdf4162fe0_0 .net "invert_sel", 0 0, L_0x7ffdf41b5d40;  1 drivers
v0x7ffdf41630c0_0 .net "output_c", 0 0, L_0x7ffdf41b5ed0;  alias, 1 drivers
v0x7ffdf4163150_0 .net "sel", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
S_0x7ffdf4163230 .scope module, "select_F" "MUX_4_1" 4 96, 4 15 0, S_0x7ffdf4161930;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /INPUT 1 "input_c";
    .port_info 3 /INPUT 1 "input_d";
    .port_info 4 /OUTPUT 1 "output_e";
    .port_info 5 /INPUT 1 "sel_0";
    .port_info 6 /INPUT 1 "sel_1";
L_0x7ffdf41b6560 .functor NOT 1, L_0x7ffdf41b6ca0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41b65d0 .functor NOT 1, L_0x7ffdf41b6dc0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41b6660 .functor AND 1, L_0x7ffdf41b5fc0, L_0x7ffdf41b6560, L_0x7ffdf41b65d0, C4<1>;
L_0x7ffdf41b6790 .functor AND 1, L_0x7ffdf41b6170, L_0x7ffdf41b6ca0, L_0x7ffdf41b65d0, C4<1>;
L_0x7ffdf41b6860 .functor AND 1, L_0x7ffdf41b6250, L_0x7ffdf41b6560, L_0x7ffdf41b6dc0, C4<1>;
L_0x7ffdf41b6a10 .functor AND 1, L_0x7ffdf3563878, L_0x7ffdf41b6ca0, L_0x7ffdf41b6dc0, C4<1>;
L_0x7ffdf41b6a80 .functor OR 1, L_0x7ffdf41b6660, L_0x7ffdf41b6790, L_0x7ffdf41b6860, L_0x7ffdf41b6a10;
v0x7ffdf41634e0_0 .net "and_a", 0 0, L_0x7ffdf41b6660;  1 drivers
v0x7ffdf4163590_0 .net "and_b", 0 0, L_0x7ffdf41b6790;  1 drivers
v0x7ffdf4163630_0 .net "and_c", 0 0, L_0x7ffdf41b6860;  1 drivers
v0x7ffdf41636c0_0 .net "and_d", 0 0, L_0x7ffdf41b6a10;  1 drivers
v0x7ffdf4163760_0 .net "input_a", 0 0, L_0x7ffdf41b5fc0;  alias, 1 drivers
v0x7ffdf4163840_0 .net "input_b", 0 0, L_0x7ffdf41b6170;  alias, 1 drivers
v0x7ffdf41638e0_0 .net "input_c", 0 0, L_0x7ffdf41b6250;  alias, 1 drivers
v0x7ffdf4163970_0 .net "input_d", 0 0, L_0x7ffdf3563878;  alias, 1 drivers
v0x7ffdf4163a10_0 .net "output_e", 0 0, L_0x7ffdf41b6a80;  alias, 1 drivers
v0x7ffdf4163b20_0 .net "sel_0", 0 0, L_0x7ffdf41b6ca0;  1 drivers
v0x7ffdf4163bb0_0 .net "sel_0_invert", 0 0, L_0x7ffdf41b6560;  1 drivers
v0x7ffdf4163c50_0 .net "sel_1", 0 0, L_0x7ffdf41b6dc0;  1 drivers
v0x7ffdf4163cf0_0 .net "sel_1_invert", 0 0, L_0x7ffdf41b65d0;  1 drivers
S_0x7ffdf4164ae0 .scope module, "ALU_4" "ALU_1bit" 3 19, 4 38 0, S_0x7ffdf36f4670;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "result";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "a";
    .port_info 3 /INPUT 1 "b";
    .port_info 4 /INPUT 1 "invertA";
    .port_info 5 /INPUT 1 "invertB";
    .port_info 6 /INPUT 2 "operation";
    .port_info 7 /INPUT 1 "carryIn";
    .port_info 8 /INPUT 1 "less";
L_0x7ffdf418f870 .functor NOT 1, L_0x7ffdf4190d80, C4<0>, C4<0>, C4<0>;
L_0x7ffdf418f8e0 .functor NOT 1, L_0x7ffdf4190ea0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf418fe90 .functor AND 1, L_0x7ffdf418fb20, L_0x7ffdf418fda0, C4<1>, C4<1>;
L_0x7ffdf4190040 .functor OR 1, L_0x7ffdf418fb20, L_0x7ffdf418fda0, C4<0>, C4<0>;
v0x7ffdf4166f70_0 .net "a", 0 0, L_0x7ffdf4190d80;  1 drivers
v0x7ffdf4167030_0 .net "and_ab", 0 0, L_0x7ffdf418fe90;  1 drivers
v0x7ffdf41670c0_0 .net "b", 0 0, L_0x7ffdf4190ea0;  1 drivers
v0x7ffdf4167170_0 .net "carryIn", 0 0, L_0x7ffdf418ebc0;  alias, 1 drivers
v0x7ffdf4167200_0 .net "carryOut", 0 0, L_0x7ffdf4190310;  alias, 1 drivers
v0x7ffdf41672d0_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf4167360_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf41673f0_0 .net "invert_a", 0 0, L_0x7ffdf418f870;  1 drivers
v0x7ffdf41674a0_0 .net "invert_b", 0 0, L_0x7ffdf418f8e0;  1 drivers
L_0x7ffdf35630e0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7ffdf41675d0_0 .net "less", 0 0, L_0x7ffdf35630e0;  1 drivers
v0x7ffdf4167660_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf41676f0_0 .net "or_ab", 0 0, L_0x7ffdf4190040;  1 drivers
v0x7ffdf4167780_0 .net "result", 0 0, L_0x7ffdf4190920;  1 drivers
v0x7ffdf4167830_0 .net "select_a", 0 0, L_0x7ffdf418fb20;  1 drivers
v0x7ffdf4167900_0 .net "select_b", 0 0, L_0x7ffdf418fda0;  1 drivers
v0x7ffdf41679d0_0 .net "sum_ans", 0 0, L_0x7ffdf4190120;  1 drivers
L_0x7ffdf4190b40 .part L_0x7ffdf41c3a00, 0, 1;
L_0x7ffdf4190c60 .part L_0x7ffdf41c3a00, 1, 1;
S_0x7ffdf4164dd0 .scope module, "adder" "Full_adder" 4 63, 5 1 0, S_0x7ffdf4164ae0;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "carryIn";
    .port_info 3 /INPUT 1 "input1";
    .port_info 4 /INPUT 1 "input2";
L_0x7ffdf41900b0 .functor XOR 1, L_0x7ffdf418fb20, L_0x7ffdf418fda0, C4<0>, C4<0>;
L_0x7ffdf4190120 .functor XOR 1, L_0x7ffdf41900b0, L_0x7ffdf418ebc0, C4<0>, C4<0>;
L_0x7ffdf41901d0 .functor AND 1, L_0x7ffdf418fb20, L_0x7ffdf418fda0, C4<1>, C4<1>;
L_0x7ffdf4190260 .functor AND 1, L_0x7ffdf41900b0, L_0x7ffdf418ebc0, C4<1>, C4<1>;
L_0x7ffdf4190310 .functor OR 1, L_0x7ffdf41901d0, L_0x7ffdf4190260, C4<0>, C4<0>;
v0x7ffdf4165010_0 .net "carryIn", 0 0, L_0x7ffdf418ebc0;  alias, 1 drivers
v0x7ffdf41650e0_0 .net "carryOut", 0 0, L_0x7ffdf4190310;  alias, 1 drivers
v0x7ffdf4165170_0 .net "input1", 0 0, L_0x7ffdf418fb20;  alias, 1 drivers
v0x7ffdf4165200_0 .net "input2", 0 0, L_0x7ffdf418fda0;  alias, 1 drivers
v0x7ffdf4165290_0 .net "sum", 0 0, L_0x7ffdf4190120;  alias, 1 drivers
v0x7ffdf4165330_0 .net "w1", 0 0, L_0x7ffdf41900b0;  1 drivers
v0x7ffdf41653d0_0 .net "w2", 0 0, L_0x7ffdf41901d0;  1 drivers
v0x7ffdf4165470_0 .net "w3", 0 0, L_0x7ffdf4190260;  1 drivers
S_0x7ffdf4165590 .scope module, "select_A" "MUX_2_1" 4 57, 4 1 0, S_0x7ffdf4164ae0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf418f990 .functor NOT 1, L_0x7ffdf41c38c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf418fa00 .functor AND 1, L_0x7ffdf4190d80, L_0x7ffdf418f990, C4<1>, C4<1>;
L_0x7ffdf418fab0 .functor AND 1, L_0x7ffdf418f870, L_0x7ffdf41c38c0, C4<1>, C4<1>;
L_0x7ffdf418fb20 .functor OR 1, L_0x7ffdf418fa00, L_0x7ffdf418fab0, C4<0>, C4<0>;
v0x7ffdf41657b0_0 .net "and_a", 0 0, L_0x7ffdf418fa00;  1 drivers
v0x7ffdf4165840_0 .net "and_b", 0 0, L_0x7ffdf418fab0;  1 drivers
v0x7ffdf41658d0_0 .net "input_a", 0 0, L_0x7ffdf4190d80;  alias, 1 drivers
v0x7ffdf4165980_0 .net "input_b", 0 0, L_0x7ffdf418f870;  alias, 1 drivers
v0x7ffdf4165a20_0 .net "invert_sel", 0 0, L_0x7ffdf418f990;  1 drivers
v0x7ffdf4165b00_0 .net "output_c", 0 0, L_0x7ffdf418fb20;  alias, 1 drivers
v0x7ffdf4165b90_0 .net "sel", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
S_0x7ffdf4165c70 .scope module, "select_B" "MUX_2_1" 4 58, 4 1 0, S_0x7ffdf4164ae0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf418fc10 .functor NOT 1, L_0x7ffdf41c3960, C4<0>, C4<0>, C4<0>;
L_0x7ffdf418fc80 .functor AND 1, L_0x7ffdf4190ea0, L_0x7ffdf418fc10, C4<1>, C4<1>;
L_0x7ffdf418fd30 .functor AND 1, L_0x7ffdf418f8e0, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf418fda0 .functor OR 1, L_0x7ffdf418fc80, L_0x7ffdf418fd30, C4<0>, C4<0>;
v0x7ffdf4165eb0_0 .net "and_a", 0 0, L_0x7ffdf418fc80;  1 drivers
v0x7ffdf4165f50_0 .net "and_b", 0 0, L_0x7ffdf418fd30;  1 drivers
v0x7ffdf4165ff0_0 .net "input_a", 0 0, L_0x7ffdf4190ea0;  alias, 1 drivers
v0x7ffdf41660a0_0 .net "input_b", 0 0, L_0x7ffdf418f8e0;  alias, 1 drivers
v0x7ffdf4166140_0 .net "invert_sel", 0 0, L_0x7ffdf418fc10;  1 drivers
v0x7ffdf4166220_0 .net "output_c", 0 0, L_0x7ffdf418fda0;  alias, 1 drivers
v0x7ffdf41662b0_0 .net "sel", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
S_0x7ffdf4166390 .scope module, "select_F" "MUX_4_1" 4 64, 4 15 0, S_0x7ffdf4164ae0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /INPUT 1 "input_c";
    .port_info 3 /INPUT 1 "input_d";
    .port_info 4 /OUTPUT 1 "output_e";
    .port_info 5 /INPUT 1 "sel_0";
    .port_info 6 /INPUT 1 "sel_1";
L_0x7ffdf4190450 .functor NOT 1, L_0x7ffdf4190b40, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41904c0 .functor NOT 1, L_0x7ffdf4190c60, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4190550 .functor AND 1, L_0x7ffdf418fe90, L_0x7ffdf4190450, L_0x7ffdf41904c0, C4<1>;
L_0x7ffdf4190680 .functor AND 1, L_0x7ffdf4190040, L_0x7ffdf4190b40, L_0x7ffdf41904c0, C4<1>;
L_0x7ffdf4190750 .functor AND 1, L_0x7ffdf4190120, L_0x7ffdf4190450, L_0x7ffdf4190c60, C4<1>;
L_0x7ffdf4190870 .functor AND 1, L_0x7ffdf35630e0, L_0x7ffdf4190b40, L_0x7ffdf4190c60, C4<1>;
L_0x7ffdf4190920 .functor OR 1, L_0x7ffdf4190550, L_0x7ffdf4190680, L_0x7ffdf4190750, L_0x7ffdf4190870;
v0x7ffdf4166640_0 .net "and_a", 0 0, L_0x7ffdf4190550;  1 drivers
v0x7ffdf41666f0_0 .net "and_b", 0 0, L_0x7ffdf4190680;  1 drivers
v0x7ffdf4166790_0 .net "and_c", 0 0, L_0x7ffdf4190750;  1 drivers
v0x7ffdf4166820_0 .net "and_d", 0 0, L_0x7ffdf4190870;  1 drivers
v0x7ffdf41668c0_0 .net "input_a", 0 0, L_0x7ffdf418fe90;  alias, 1 drivers
v0x7ffdf41669a0_0 .net "input_b", 0 0, L_0x7ffdf4190040;  alias, 1 drivers
v0x7ffdf4166a40_0 .net "input_c", 0 0, L_0x7ffdf4190120;  alias, 1 drivers
v0x7ffdf4166ad0_0 .net "input_d", 0 0, L_0x7ffdf35630e0;  alias, 1 drivers
v0x7ffdf4166b60_0 .net "output_e", 0 0, L_0x7ffdf4190920;  alias, 1 drivers
v0x7ffdf4166c80_0 .net "sel_0", 0 0, L_0x7ffdf4190b40;  1 drivers
v0x7ffdf4166d20_0 .net "sel_0_invert", 0 0, L_0x7ffdf4190450;  1 drivers
v0x7ffdf4166dc0_0 .net "sel_1", 0 0, L_0x7ffdf4190c60;  1 drivers
v0x7ffdf4166e60_0 .net "sel_1_invert", 0 0, L_0x7ffdf41904c0;  1 drivers
S_0x7ffdf4167af0 .scope module, "ALU_5" "ALU_1bit" 3 20, 4 38 0, S_0x7ffdf36f4670;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "result";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "a";
    .port_info 3 /INPUT 1 "b";
    .port_info 4 /INPUT 1 "invertA";
    .port_info 5 /INPUT 1 "invertB";
    .port_info 6 /INPUT 2 "operation";
    .port_info 7 /INPUT 1 "carryIn";
    .port_info 8 /INPUT 1 "less";
L_0x7ffdf4190fc0 .functor NOT 1, L_0x7ffdf41924b0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4191030 .functor NOT 1, L_0x7ffdf41925d0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41915a0 .functor AND 1, L_0x7ffdf4191230, L_0x7ffdf41914b0, C4<1>, C4<1>;
L_0x7ffdf4191750 .functor OR 1, L_0x7ffdf4191230, L_0x7ffdf41914b0, C4<0>, C4<0>;
v0x7ffdf4169f80_0 .net "a", 0 0, L_0x7ffdf41924b0;  1 drivers
v0x7ffdf416a040_0 .net "and_ab", 0 0, L_0x7ffdf41915a0;  1 drivers
v0x7ffdf416a0d0_0 .net "b", 0 0, L_0x7ffdf41925d0;  1 drivers
v0x7ffdf416a180_0 .net "carryIn", 0 0, L_0x7ffdf4190310;  alias, 1 drivers
v0x7ffdf416a210_0 .net "carryOut", 0 0, L_0x7ffdf4191a40;  alias, 1 drivers
v0x7ffdf416a2e0_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf416a370_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf416a400_0 .net "invert_a", 0 0, L_0x7ffdf4190fc0;  1 drivers
v0x7ffdf416a4b0_0 .net "invert_b", 0 0, L_0x7ffdf4191030;  1 drivers
L_0x7ffdf3563128 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7ffdf416a5e0_0 .net "less", 0 0, L_0x7ffdf3563128;  1 drivers
v0x7ffdf416a670_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf416a700_0 .net "or_ab", 0 0, L_0x7ffdf4191750;  1 drivers
v0x7ffdf416a790_0 .net "result", 0 0, L_0x7ffdf4192050;  1 drivers
v0x7ffdf416a840_0 .net "select_a", 0 0, L_0x7ffdf4191230;  1 drivers
v0x7ffdf416a910_0 .net "select_b", 0 0, L_0x7ffdf41914b0;  1 drivers
v0x7ffdf416a9e0_0 .net "sum_ans", 0 0, L_0x7ffdf4191830;  1 drivers
L_0x7ffdf4192270 .part L_0x7ffdf41c3a00, 0, 1;
L_0x7ffdf4192390 .part L_0x7ffdf41c3a00, 1, 1;
S_0x7ffdf4167d90 .scope module, "adder" "Full_adder" 4 63, 5 1 0, S_0x7ffdf4167af0;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "carryIn";
    .port_info 3 /INPUT 1 "input1";
    .port_info 4 /INPUT 1 "input2";
L_0x7ffdf41917c0 .functor XOR 1, L_0x7ffdf4191230, L_0x7ffdf41914b0, C4<0>, C4<0>;
L_0x7ffdf4191830 .functor XOR 1, L_0x7ffdf41917c0, L_0x7ffdf4190310, C4<0>, C4<0>;
L_0x7ffdf41918e0 .functor AND 1, L_0x7ffdf4191230, L_0x7ffdf41914b0, C4<1>, C4<1>;
L_0x7ffdf4191990 .functor AND 1, L_0x7ffdf41917c0, L_0x7ffdf4190310, C4<1>, C4<1>;
L_0x7ffdf4191a40 .functor OR 1, L_0x7ffdf41918e0, L_0x7ffdf4191990, C4<0>, C4<0>;
v0x7ffdf4168000_0 .net "carryIn", 0 0, L_0x7ffdf4190310;  alias, 1 drivers
v0x7ffdf41680d0_0 .net "carryOut", 0 0, L_0x7ffdf4191a40;  alias, 1 drivers
v0x7ffdf4168160_0 .net "input1", 0 0, L_0x7ffdf4191230;  alias, 1 drivers
v0x7ffdf41681f0_0 .net "input2", 0 0, L_0x7ffdf41914b0;  alias, 1 drivers
v0x7ffdf4168280_0 .net "sum", 0 0, L_0x7ffdf4191830;  alias, 1 drivers
v0x7ffdf4168350_0 .net "w1", 0 0, L_0x7ffdf41917c0;  1 drivers
v0x7ffdf41683e0_0 .net "w2", 0 0, L_0x7ffdf41918e0;  1 drivers
v0x7ffdf4168480_0 .net "w3", 0 0, L_0x7ffdf4191990;  1 drivers
S_0x7ffdf41685a0 .scope module, "select_A" "MUX_2_1" 4 57, 4 1 0, S_0x7ffdf4167af0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41910a0 .functor NOT 1, L_0x7ffdf41c38c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4191110 .functor AND 1, L_0x7ffdf41924b0, L_0x7ffdf41910a0, C4<1>, C4<1>;
L_0x7ffdf41911c0 .functor AND 1, L_0x7ffdf4190fc0, L_0x7ffdf41c38c0, C4<1>, C4<1>;
L_0x7ffdf4191230 .functor OR 1, L_0x7ffdf4191110, L_0x7ffdf41911c0, C4<0>, C4<0>;
v0x7ffdf41687c0_0 .net "and_a", 0 0, L_0x7ffdf4191110;  1 drivers
v0x7ffdf4168850_0 .net "and_b", 0 0, L_0x7ffdf41911c0;  1 drivers
v0x7ffdf41688e0_0 .net "input_a", 0 0, L_0x7ffdf41924b0;  alias, 1 drivers
v0x7ffdf4168990_0 .net "input_b", 0 0, L_0x7ffdf4190fc0;  alias, 1 drivers
v0x7ffdf4168a30_0 .net "invert_sel", 0 0, L_0x7ffdf41910a0;  1 drivers
v0x7ffdf4168b10_0 .net "output_c", 0 0, L_0x7ffdf4191230;  alias, 1 drivers
v0x7ffdf4168ba0_0 .net "sel", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
S_0x7ffdf4168c80 .scope module, "select_B" "MUX_2_1" 4 58, 4 1 0, S_0x7ffdf4167af0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf4191320 .functor NOT 1, L_0x7ffdf41c3960, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4191390 .functor AND 1, L_0x7ffdf41925d0, L_0x7ffdf4191320, C4<1>, C4<1>;
L_0x7ffdf4191440 .functor AND 1, L_0x7ffdf4191030, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf41914b0 .functor OR 1, L_0x7ffdf4191390, L_0x7ffdf4191440, C4<0>, C4<0>;
v0x7ffdf4168ec0_0 .net "and_a", 0 0, L_0x7ffdf4191390;  1 drivers
v0x7ffdf4168f60_0 .net "and_b", 0 0, L_0x7ffdf4191440;  1 drivers
v0x7ffdf4169000_0 .net "input_a", 0 0, L_0x7ffdf41925d0;  alias, 1 drivers
v0x7ffdf41690b0_0 .net "input_b", 0 0, L_0x7ffdf4191030;  alias, 1 drivers
v0x7ffdf4169150_0 .net "invert_sel", 0 0, L_0x7ffdf4191320;  1 drivers
v0x7ffdf4169230_0 .net "output_c", 0 0, L_0x7ffdf41914b0;  alias, 1 drivers
v0x7ffdf41692c0_0 .net "sel", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
S_0x7ffdf41693a0 .scope module, "select_F" "MUX_4_1" 4 64, 4 15 0, S_0x7ffdf4167af0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /INPUT 1 "input_c";
    .port_info 3 /INPUT 1 "input_d";
    .port_info 4 /OUTPUT 1 "output_e";
    .port_info 5 /INPUT 1 "sel_0";
    .port_info 6 /INPUT 1 "sel_1";
L_0x7ffdf4191b80 .functor NOT 1, L_0x7ffdf4192270, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4191bf0 .functor NOT 1, L_0x7ffdf4192390, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4191c80 .functor AND 1, L_0x7ffdf41915a0, L_0x7ffdf4191b80, L_0x7ffdf4191bf0, C4<1>;
L_0x7ffdf4191db0 .functor AND 1, L_0x7ffdf4191750, L_0x7ffdf4192270, L_0x7ffdf4191bf0, C4<1>;
L_0x7ffdf4191e80 .functor AND 1, L_0x7ffdf4191830, L_0x7ffdf4191b80, L_0x7ffdf4192390, C4<1>;
L_0x7ffdf4191fa0 .functor AND 1, L_0x7ffdf3563128, L_0x7ffdf4192270, L_0x7ffdf4192390, C4<1>;
L_0x7ffdf4192050 .functor OR 1, L_0x7ffdf4191c80, L_0x7ffdf4191db0, L_0x7ffdf4191e80, L_0x7ffdf4191fa0;
v0x7ffdf4169650_0 .net "and_a", 0 0, L_0x7ffdf4191c80;  1 drivers
v0x7ffdf4169700_0 .net "and_b", 0 0, L_0x7ffdf4191db0;  1 drivers
v0x7ffdf41697a0_0 .net "and_c", 0 0, L_0x7ffdf4191e80;  1 drivers
v0x7ffdf4169830_0 .net "and_d", 0 0, L_0x7ffdf4191fa0;  1 drivers
v0x7ffdf41698d0_0 .net "input_a", 0 0, L_0x7ffdf41915a0;  alias, 1 drivers
v0x7ffdf41699b0_0 .net "input_b", 0 0, L_0x7ffdf4191750;  alias, 1 drivers
v0x7ffdf4169a50_0 .net "input_c", 0 0, L_0x7ffdf4191830;  alias, 1 drivers
v0x7ffdf4169ae0_0 .net "input_d", 0 0, L_0x7ffdf3563128;  alias, 1 drivers
v0x7ffdf4169b70_0 .net "output_e", 0 0, L_0x7ffdf4192050;  alias, 1 drivers
v0x7ffdf4169c90_0 .net "sel_0", 0 0, L_0x7ffdf4192270;  1 drivers
v0x7ffdf4169d30_0 .net "sel_0_invert", 0 0, L_0x7ffdf4191b80;  1 drivers
v0x7ffdf4169dd0_0 .net "sel_1", 0 0, L_0x7ffdf4192390;  1 drivers
v0x7ffdf4169e70_0 .net "sel_1_invert", 0 0, L_0x7ffdf4191bf0;  1 drivers
S_0x7ffdf416ab00 .scope module, "ALU_6" "ALU_1bit" 3 21, 4 38 0, S_0x7ffdf36f4670;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "result";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "a";
    .port_info 3 /INPUT 1 "b";
    .port_info 4 /INPUT 1 "invertA";
    .port_info 5 /INPUT 1 "invertB";
    .port_info 6 /INPUT 2 "operation";
    .port_info 7 /INPUT 1 "carryIn";
    .port_info 8 /INPUT 1 "less";
L_0x7ffdf41926f0 .functor NOT 1, L_0x7ffdf4193c00, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4192760 .functor NOT 1, L_0x7ffdf4193e90, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4192d10 .functor AND 1, L_0x7ffdf41929a0, L_0x7ffdf4192c20, C4<1>, C4<1>;
L_0x7ffdf4192ec0 .functor OR 1, L_0x7ffdf41929a0, L_0x7ffdf4192c20, C4<0>, C4<0>;
v0x7ffdf416cf90_0 .net "a", 0 0, L_0x7ffdf4193c00;  1 drivers
v0x7ffdf416d050_0 .net "and_ab", 0 0, L_0x7ffdf4192d10;  1 drivers
v0x7ffdf416d0e0_0 .net "b", 0 0, L_0x7ffdf4193e90;  1 drivers
v0x7ffdf416d190_0 .net "carryIn", 0 0, L_0x7ffdf4191a40;  alias, 1 drivers
v0x7ffdf416d220_0 .net "carryOut", 0 0, L_0x7ffdf4193190;  alias, 1 drivers
v0x7ffdf416d2f0_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf416d380_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf416d410_0 .net "invert_a", 0 0, L_0x7ffdf41926f0;  1 drivers
v0x7ffdf416d4c0_0 .net "invert_b", 0 0, L_0x7ffdf4192760;  1 drivers
L_0x7ffdf3563170 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7ffdf416d5f0_0 .net "less", 0 0, L_0x7ffdf3563170;  1 drivers
v0x7ffdf416d680_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf416d710_0 .net "or_ab", 0 0, L_0x7ffdf4192ec0;  1 drivers
v0x7ffdf416d7a0_0 .net "result", 0 0, L_0x7ffdf41937a0;  1 drivers
v0x7ffdf416d850_0 .net "select_a", 0 0, L_0x7ffdf41929a0;  1 drivers
v0x7ffdf416d920_0 .net "select_b", 0 0, L_0x7ffdf4192c20;  1 drivers
v0x7ffdf416d9f0_0 .net "sum_ans", 0 0, L_0x7ffdf4192fa0;  1 drivers
L_0x7ffdf41939c0 .part L_0x7ffdf41c3a00, 0, 1;
L_0x7ffdf4193ae0 .part L_0x7ffdf41c3a00, 1, 1;
S_0x7ffdf416ada0 .scope module, "adder" "Full_adder" 4 63, 5 1 0, S_0x7ffdf416ab00;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "carryIn";
    .port_info 3 /INPUT 1 "input1";
    .port_info 4 /INPUT 1 "input2";
L_0x7ffdf4192f30 .functor XOR 1, L_0x7ffdf41929a0, L_0x7ffdf4192c20, C4<0>, C4<0>;
L_0x7ffdf4192fa0 .functor XOR 1, L_0x7ffdf4192f30, L_0x7ffdf4191a40, C4<0>, C4<0>;
L_0x7ffdf4193050 .functor AND 1, L_0x7ffdf41929a0, L_0x7ffdf4192c20, C4<1>, C4<1>;
L_0x7ffdf41930e0 .functor AND 1, L_0x7ffdf4192f30, L_0x7ffdf4191a40, C4<1>, C4<1>;
L_0x7ffdf4193190 .functor OR 1, L_0x7ffdf4193050, L_0x7ffdf41930e0, C4<0>, C4<0>;
v0x7ffdf416b010_0 .net "carryIn", 0 0, L_0x7ffdf4191a40;  alias, 1 drivers
v0x7ffdf416b0e0_0 .net "carryOut", 0 0, L_0x7ffdf4193190;  alias, 1 drivers
v0x7ffdf416b170_0 .net "input1", 0 0, L_0x7ffdf41929a0;  alias, 1 drivers
v0x7ffdf416b200_0 .net "input2", 0 0, L_0x7ffdf4192c20;  alias, 1 drivers
v0x7ffdf416b290_0 .net "sum", 0 0, L_0x7ffdf4192fa0;  alias, 1 drivers
v0x7ffdf416b360_0 .net "w1", 0 0, L_0x7ffdf4192f30;  1 drivers
v0x7ffdf416b3f0_0 .net "w2", 0 0, L_0x7ffdf4193050;  1 drivers
v0x7ffdf416b490_0 .net "w3", 0 0, L_0x7ffdf41930e0;  1 drivers
S_0x7ffdf416b5b0 .scope module, "select_A" "MUX_2_1" 4 57, 4 1 0, S_0x7ffdf416ab00;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf4192810 .functor NOT 1, L_0x7ffdf41c38c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4192880 .functor AND 1, L_0x7ffdf4193c00, L_0x7ffdf4192810, C4<1>, C4<1>;
L_0x7ffdf4192930 .functor AND 1, L_0x7ffdf41926f0, L_0x7ffdf41c38c0, C4<1>, C4<1>;
L_0x7ffdf41929a0 .functor OR 1, L_0x7ffdf4192880, L_0x7ffdf4192930, C4<0>, C4<0>;
v0x7ffdf416b7d0_0 .net "and_a", 0 0, L_0x7ffdf4192880;  1 drivers
v0x7ffdf416b860_0 .net "and_b", 0 0, L_0x7ffdf4192930;  1 drivers
v0x7ffdf416b8f0_0 .net "input_a", 0 0, L_0x7ffdf4193c00;  alias, 1 drivers
v0x7ffdf416b9a0_0 .net "input_b", 0 0, L_0x7ffdf41926f0;  alias, 1 drivers
v0x7ffdf416ba40_0 .net "invert_sel", 0 0, L_0x7ffdf4192810;  1 drivers
v0x7ffdf416bb20_0 .net "output_c", 0 0, L_0x7ffdf41929a0;  alias, 1 drivers
v0x7ffdf416bbb0_0 .net "sel", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
S_0x7ffdf416bc90 .scope module, "select_B" "MUX_2_1" 4 58, 4 1 0, S_0x7ffdf416ab00;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf4192a90 .functor NOT 1, L_0x7ffdf41c3960, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4192b00 .functor AND 1, L_0x7ffdf4193e90, L_0x7ffdf4192a90, C4<1>, C4<1>;
L_0x7ffdf4192bb0 .functor AND 1, L_0x7ffdf4192760, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf4192c20 .functor OR 1, L_0x7ffdf4192b00, L_0x7ffdf4192bb0, C4<0>, C4<0>;
v0x7ffdf416bed0_0 .net "and_a", 0 0, L_0x7ffdf4192b00;  1 drivers
v0x7ffdf416bf70_0 .net "and_b", 0 0, L_0x7ffdf4192bb0;  1 drivers
v0x7ffdf416c010_0 .net "input_a", 0 0, L_0x7ffdf4193e90;  alias, 1 drivers
v0x7ffdf416c0c0_0 .net "input_b", 0 0, L_0x7ffdf4192760;  alias, 1 drivers
v0x7ffdf416c160_0 .net "invert_sel", 0 0, L_0x7ffdf4192a90;  1 drivers
v0x7ffdf416c240_0 .net "output_c", 0 0, L_0x7ffdf4192c20;  alias, 1 drivers
v0x7ffdf416c2d0_0 .net "sel", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
S_0x7ffdf416c3b0 .scope module, "select_F" "MUX_4_1" 4 64, 4 15 0, S_0x7ffdf416ab00;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /INPUT 1 "input_c";
    .port_info 3 /INPUT 1 "input_d";
    .port_info 4 /OUTPUT 1 "output_e";
    .port_info 5 /INPUT 1 "sel_0";
    .port_info 6 /INPUT 1 "sel_1";
L_0x7ffdf41932d0 .functor NOT 1, L_0x7ffdf41939c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4193340 .functor NOT 1, L_0x7ffdf4193ae0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41933d0 .functor AND 1, L_0x7ffdf4192d10, L_0x7ffdf41932d0, L_0x7ffdf4193340, C4<1>;
L_0x7ffdf4193500 .functor AND 1, L_0x7ffdf4192ec0, L_0x7ffdf41939c0, L_0x7ffdf4193340, C4<1>;
L_0x7ffdf41935d0 .functor AND 1, L_0x7ffdf4192fa0, L_0x7ffdf41932d0, L_0x7ffdf4193ae0, C4<1>;
L_0x7ffdf41936f0 .functor AND 1, L_0x7ffdf3563170, L_0x7ffdf41939c0, L_0x7ffdf4193ae0, C4<1>;
L_0x7ffdf41937a0 .functor OR 1, L_0x7ffdf41933d0, L_0x7ffdf4193500, L_0x7ffdf41935d0, L_0x7ffdf41936f0;
v0x7ffdf416c660_0 .net "and_a", 0 0, L_0x7ffdf41933d0;  1 drivers
v0x7ffdf416c710_0 .net "and_b", 0 0, L_0x7ffdf4193500;  1 drivers
v0x7ffdf416c7b0_0 .net "and_c", 0 0, L_0x7ffdf41935d0;  1 drivers
v0x7ffdf416c840_0 .net "and_d", 0 0, L_0x7ffdf41936f0;  1 drivers
v0x7ffdf416c8e0_0 .net "input_a", 0 0, L_0x7ffdf4192d10;  alias, 1 drivers
v0x7ffdf416c9c0_0 .net "input_b", 0 0, L_0x7ffdf4192ec0;  alias, 1 drivers
v0x7ffdf416ca60_0 .net "input_c", 0 0, L_0x7ffdf4192fa0;  alias, 1 drivers
v0x7ffdf416caf0_0 .net "input_d", 0 0, L_0x7ffdf3563170;  alias, 1 drivers
v0x7ffdf416cb80_0 .net "output_e", 0 0, L_0x7ffdf41937a0;  alias, 1 drivers
v0x7ffdf416cca0_0 .net "sel_0", 0 0, L_0x7ffdf41939c0;  1 drivers
v0x7ffdf416cd40_0 .net "sel_0_invert", 0 0, L_0x7ffdf41932d0;  1 drivers
v0x7ffdf416cde0_0 .net "sel_1", 0 0, L_0x7ffdf4193ae0;  1 drivers
v0x7ffdf416ce80_0 .net "sel_1_invert", 0 0, L_0x7ffdf4193340;  1 drivers
S_0x7ffdf416db10 .scope module, "ALU_7" "ALU_1bit" 3 22, 4 38 0, S_0x7ffdf36f4670;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "result";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "a";
    .port_info 3 /INPUT 1 "b";
    .port_info 4 /INPUT 1 "invertA";
    .port_info 5 /INPUT 1 "invertB";
    .port_info 6 /INPUT 2 "operation";
    .port_info 7 /INPUT 1 "carryIn";
    .port_info 8 /INPUT 1 "less";
L_0x7ffdf4194030 .functor NOT 1, L_0x7ffdf4195430, C4<0>, C4<0>, C4<0>;
L_0x7ffdf418e160 .functor NOT 1, L_0x7ffdf41955d0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4194560 .functor AND 1, L_0x7ffdf41941f0, L_0x7ffdf4194470, C4<1>, C4<1>;
L_0x7ffdf4194710 .functor OR 1, L_0x7ffdf41941f0, L_0x7ffdf4194470, C4<0>, C4<0>;
v0x7ffdf416ffa0_0 .net "a", 0 0, L_0x7ffdf4195430;  1 drivers
v0x7ffdf4170060_0 .net "and_ab", 0 0, L_0x7ffdf4194560;  1 drivers
v0x7ffdf41700f0_0 .net "b", 0 0, L_0x7ffdf41955d0;  1 drivers
v0x7ffdf41701a0_0 .net "carryIn", 0 0, L_0x7ffdf4193190;  alias, 1 drivers
v0x7ffdf4170230_0 .net "carryOut", 0 0, L_0x7ffdf41949c0;  alias, 1 drivers
v0x7ffdf4170300_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf4170390_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf4170420_0 .net "invert_a", 0 0, L_0x7ffdf4194030;  1 drivers
v0x7ffdf41704d0_0 .net "invert_b", 0 0, L_0x7ffdf418e160;  1 drivers
L_0x7ffdf35631b8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7ffdf4170600_0 .net "less", 0 0, L_0x7ffdf35631b8;  1 drivers
v0x7ffdf4170690_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf4170720_0 .net "or_ab", 0 0, L_0x7ffdf4194710;  1 drivers
v0x7ffdf41707b0_0 .net "result", 0 0, L_0x7ffdf4194fd0;  1 drivers
v0x7ffdf4170860_0 .net "select_a", 0 0, L_0x7ffdf41941f0;  1 drivers
v0x7ffdf4170930_0 .net "select_b", 0 0, L_0x7ffdf4194470;  1 drivers
v0x7ffdf4170a00_0 .net "sum_ans", 0 0, L_0x7ffdf41947f0;  1 drivers
L_0x7ffdf41951f0 .part L_0x7ffdf41c3a00, 0, 1;
L_0x7ffdf4195310 .part L_0x7ffdf41c3a00, 1, 1;
S_0x7ffdf416ddb0 .scope module, "adder" "Full_adder" 4 63, 5 1 0, S_0x7ffdf416db10;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "carryIn";
    .port_info 3 /INPUT 1 "input1";
    .port_info 4 /INPUT 1 "input2";
L_0x7ffdf4194780 .functor XOR 1, L_0x7ffdf41941f0, L_0x7ffdf4194470, C4<0>, C4<0>;
L_0x7ffdf41947f0 .functor XOR 1, L_0x7ffdf4194780, L_0x7ffdf4193190, C4<0>, C4<0>;
L_0x7ffdf4194860 .functor AND 1, L_0x7ffdf41941f0, L_0x7ffdf4194470, C4<1>, C4<1>;
L_0x7ffdf4194910 .functor AND 1, L_0x7ffdf4194780, L_0x7ffdf4193190, C4<1>, C4<1>;
L_0x7ffdf41949c0 .functor OR 1, L_0x7ffdf4194860, L_0x7ffdf4194910, C4<0>, C4<0>;
v0x7ffdf416e020_0 .net "carryIn", 0 0, L_0x7ffdf4193190;  alias, 1 drivers
v0x7ffdf416e0f0_0 .net "carryOut", 0 0, L_0x7ffdf41949c0;  alias, 1 drivers
v0x7ffdf416e180_0 .net "input1", 0 0, L_0x7ffdf41941f0;  alias, 1 drivers
v0x7ffdf416e210_0 .net "input2", 0 0, L_0x7ffdf4194470;  alias, 1 drivers
v0x7ffdf416e2a0_0 .net "sum", 0 0, L_0x7ffdf41947f0;  alias, 1 drivers
v0x7ffdf416e370_0 .net "w1", 0 0, L_0x7ffdf4194780;  1 drivers
v0x7ffdf416e400_0 .net "w2", 0 0, L_0x7ffdf4194860;  1 drivers
v0x7ffdf416e4a0_0 .net "w3", 0 0, L_0x7ffdf4194910;  1 drivers
S_0x7ffdf416e5c0 .scope module, "select_A" "MUX_2_1" 4 57, 4 1 0, S_0x7ffdf416db10;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41940a0 .functor NOT 1, L_0x7ffdf41c38c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4194110 .functor AND 1, L_0x7ffdf4195430, L_0x7ffdf41940a0, C4<1>, C4<1>;
L_0x7ffdf4194180 .functor AND 1, L_0x7ffdf4194030, L_0x7ffdf41c38c0, C4<1>, C4<1>;
L_0x7ffdf41941f0 .functor OR 1, L_0x7ffdf4194110, L_0x7ffdf4194180, C4<0>, C4<0>;
v0x7ffdf416e7e0_0 .net "and_a", 0 0, L_0x7ffdf4194110;  1 drivers
v0x7ffdf416e870_0 .net "and_b", 0 0, L_0x7ffdf4194180;  1 drivers
v0x7ffdf416e900_0 .net "input_a", 0 0, L_0x7ffdf4195430;  alias, 1 drivers
v0x7ffdf416e9b0_0 .net "input_b", 0 0, L_0x7ffdf4194030;  alias, 1 drivers
v0x7ffdf416ea50_0 .net "invert_sel", 0 0, L_0x7ffdf41940a0;  1 drivers
v0x7ffdf416eb30_0 .net "output_c", 0 0, L_0x7ffdf41941f0;  alias, 1 drivers
v0x7ffdf416ebc0_0 .net "sel", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
S_0x7ffdf416eca0 .scope module, "select_B" "MUX_2_1" 4 58, 4 1 0, S_0x7ffdf416db10;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41942e0 .functor NOT 1, L_0x7ffdf41c3960, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4194350 .functor AND 1, L_0x7ffdf41955d0, L_0x7ffdf41942e0, C4<1>, C4<1>;
L_0x7ffdf4194400 .functor AND 1, L_0x7ffdf418e160, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf4194470 .functor OR 1, L_0x7ffdf4194350, L_0x7ffdf4194400, C4<0>, C4<0>;
v0x7ffdf416eee0_0 .net "and_a", 0 0, L_0x7ffdf4194350;  1 drivers
v0x7ffdf416ef80_0 .net "and_b", 0 0, L_0x7ffdf4194400;  1 drivers
v0x7ffdf416f020_0 .net "input_a", 0 0, L_0x7ffdf41955d0;  alias, 1 drivers
v0x7ffdf416f0d0_0 .net "input_b", 0 0, L_0x7ffdf418e160;  alias, 1 drivers
v0x7ffdf416f170_0 .net "invert_sel", 0 0, L_0x7ffdf41942e0;  1 drivers
v0x7ffdf416f250_0 .net "output_c", 0 0, L_0x7ffdf4194470;  alias, 1 drivers
v0x7ffdf416f2e0_0 .net "sel", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
S_0x7ffdf416f3c0 .scope module, "select_F" "MUX_4_1" 4 64, 4 15 0, S_0x7ffdf416db10;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /INPUT 1 "input_c";
    .port_info 3 /INPUT 1 "input_d";
    .port_info 4 /OUTPUT 1 "output_e";
    .port_info 5 /INPUT 1 "sel_0";
    .port_info 6 /INPUT 1 "sel_1";
L_0x7ffdf4194b00 .functor NOT 1, L_0x7ffdf41951f0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4194b70 .functor NOT 1, L_0x7ffdf4195310, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4194c00 .functor AND 1, L_0x7ffdf4194560, L_0x7ffdf4194b00, L_0x7ffdf4194b70, C4<1>;
L_0x7ffdf4194d30 .functor AND 1, L_0x7ffdf4194710, L_0x7ffdf41951f0, L_0x7ffdf4194b70, C4<1>;
L_0x7ffdf4194e00 .functor AND 1, L_0x7ffdf41947f0, L_0x7ffdf4194b00, L_0x7ffdf4195310, C4<1>;
L_0x7ffdf4194f20 .functor AND 1, L_0x7ffdf35631b8, L_0x7ffdf41951f0, L_0x7ffdf4195310, C4<1>;
L_0x7ffdf4194fd0 .functor OR 1, L_0x7ffdf4194c00, L_0x7ffdf4194d30, L_0x7ffdf4194e00, L_0x7ffdf4194f20;
v0x7ffdf416f670_0 .net "and_a", 0 0, L_0x7ffdf4194c00;  1 drivers
v0x7ffdf416f720_0 .net "and_b", 0 0, L_0x7ffdf4194d30;  1 drivers
v0x7ffdf416f7c0_0 .net "and_c", 0 0, L_0x7ffdf4194e00;  1 drivers
v0x7ffdf416f850_0 .net "and_d", 0 0, L_0x7ffdf4194f20;  1 drivers
v0x7ffdf416f8f0_0 .net "input_a", 0 0, L_0x7ffdf4194560;  alias, 1 drivers
v0x7ffdf416f9d0_0 .net "input_b", 0 0, L_0x7ffdf4194710;  alias, 1 drivers
v0x7ffdf416fa70_0 .net "input_c", 0 0, L_0x7ffdf41947f0;  alias, 1 drivers
v0x7ffdf416fb00_0 .net "input_d", 0 0, L_0x7ffdf35631b8;  alias, 1 drivers
v0x7ffdf416fb90_0 .net "output_e", 0 0, L_0x7ffdf4194fd0;  alias, 1 drivers
v0x7ffdf416fcb0_0 .net "sel_0", 0 0, L_0x7ffdf41951f0;  1 drivers
v0x7ffdf416fd50_0 .net "sel_0_invert", 0 0, L_0x7ffdf4194b00;  1 drivers
v0x7ffdf416fdf0_0 .net "sel_1", 0 0, L_0x7ffdf4195310;  1 drivers
v0x7ffdf416fe90_0 .net "sel_1_invert", 0 0, L_0x7ffdf4194b70;  1 drivers
S_0x7ffdf4170b20 .scope module, "ALU_8" "ALU_1bit" 3 23, 4 38 0, S_0x7ffdf36f4670;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "result";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "a";
    .port_info 3 /INPUT 1 "b";
    .port_info 4 /INPUT 1 "invertA";
    .port_info 5 /INPUT 1 "invertB";
    .port_info 6 /INPUT 2 "operation";
    .port_info 7 /INPUT 1 "carryIn";
    .port_info 8 /INPUT 1 "less";
L_0x7ffdf4193e20 .functor NOT 1, L_0x7ffdf4196b50, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41956f0 .functor NOT 1, L_0x7ffdf4196d00, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4195c60 .functor AND 1, L_0x7ffdf41958f0, L_0x7ffdf4195b70, C4<1>, C4<1>;
L_0x7ffdf4195e10 .functor OR 1, L_0x7ffdf41958f0, L_0x7ffdf4195b70, C4<0>, C4<0>;
v0x7ffdf4172fb0_0 .net "a", 0 0, L_0x7ffdf4196b50;  1 drivers
v0x7ffdf4173070_0 .net "and_ab", 0 0, L_0x7ffdf4195c60;  1 drivers
v0x7ffdf4173100_0 .net "b", 0 0, L_0x7ffdf4196d00;  1 drivers
v0x7ffdf41731b0_0 .net "carryIn", 0 0, L_0x7ffdf41949c0;  alias, 1 drivers
v0x7ffdf4173240_0 .net "carryOut", 0 0, L_0x7ffdf41960e0;  alias, 1 drivers
v0x7ffdf4173310_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf41733a0_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf4173430_0 .net "invert_a", 0 0, L_0x7ffdf4193e20;  1 drivers
v0x7ffdf41734e0_0 .net "invert_b", 0 0, L_0x7ffdf41956f0;  1 drivers
L_0x7ffdf3563200 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7ffdf4173610_0 .net "less", 0 0, L_0x7ffdf3563200;  1 drivers
v0x7ffdf41736a0_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf4173730_0 .net "or_ab", 0 0, L_0x7ffdf4195e10;  1 drivers
v0x7ffdf41737c0_0 .net "result", 0 0, L_0x7ffdf41966f0;  1 drivers
v0x7ffdf4173870_0 .net "select_a", 0 0, L_0x7ffdf41958f0;  1 drivers
v0x7ffdf4173940_0 .net "select_b", 0 0, L_0x7ffdf4195b70;  1 drivers
v0x7ffdf4173a10_0 .net "sum_ans", 0 0, L_0x7ffdf4195ef0;  1 drivers
L_0x7ffdf4196910 .part L_0x7ffdf41c3a00, 0, 1;
L_0x7ffdf4196a30 .part L_0x7ffdf41c3a00, 1, 1;
S_0x7ffdf4170dc0 .scope module, "adder" "Full_adder" 4 63, 5 1 0, S_0x7ffdf4170b20;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "carryIn";
    .port_info 3 /INPUT 1 "input1";
    .port_info 4 /INPUT 1 "input2";
L_0x7ffdf4195e80 .functor XOR 1, L_0x7ffdf41958f0, L_0x7ffdf4195b70, C4<0>, C4<0>;
L_0x7ffdf4195ef0 .functor XOR 1, L_0x7ffdf4195e80, L_0x7ffdf41949c0, C4<0>, C4<0>;
L_0x7ffdf4195fa0 .functor AND 1, L_0x7ffdf41958f0, L_0x7ffdf4195b70, C4<1>, C4<1>;
L_0x7ffdf4196030 .functor AND 1, L_0x7ffdf4195e80, L_0x7ffdf41949c0, C4<1>, C4<1>;
L_0x7ffdf41960e0 .functor OR 1, L_0x7ffdf4195fa0, L_0x7ffdf4196030, C4<0>, C4<0>;
v0x7ffdf4171030_0 .net "carryIn", 0 0, L_0x7ffdf41949c0;  alias, 1 drivers
v0x7ffdf4171100_0 .net "carryOut", 0 0, L_0x7ffdf41960e0;  alias, 1 drivers
v0x7ffdf4171190_0 .net "input1", 0 0, L_0x7ffdf41958f0;  alias, 1 drivers
v0x7ffdf4171220_0 .net "input2", 0 0, L_0x7ffdf4195b70;  alias, 1 drivers
v0x7ffdf41712b0_0 .net "sum", 0 0, L_0x7ffdf4195ef0;  alias, 1 drivers
v0x7ffdf4171380_0 .net "w1", 0 0, L_0x7ffdf4195e80;  1 drivers
v0x7ffdf4171410_0 .net "w2", 0 0, L_0x7ffdf4195fa0;  1 drivers
v0x7ffdf41714b0_0 .net "w3", 0 0, L_0x7ffdf4196030;  1 drivers
S_0x7ffdf41715d0 .scope module, "select_A" "MUX_2_1" 4 57, 4 1 0, S_0x7ffdf4170b20;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf4195760 .functor NOT 1, L_0x7ffdf41c38c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41957d0 .functor AND 1, L_0x7ffdf4196b50, L_0x7ffdf4195760, C4<1>, C4<1>;
L_0x7ffdf4195880 .functor AND 1, L_0x7ffdf4193e20, L_0x7ffdf41c38c0, C4<1>, C4<1>;
L_0x7ffdf41958f0 .functor OR 1, L_0x7ffdf41957d0, L_0x7ffdf4195880, C4<0>, C4<0>;
v0x7ffdf41717f0_0 .net "and_a", 0 0, L_0x7ffdf41957d0;  1 drivers
v0x7ffdf4171880_0 .net "and_b", 0 0, L_0x7ffdf4195880;  1 drivers
v0x7ffdf4171910_0 .net "input_a", 0 0, L_0x7ffdf4196b50;  alias, 1 drivers
v0x7ffdf41719c0_0 .net "input_b", 0 0, L_0x7ffdf4193e20;  alias, 1 drivers
v0x7ffdf4171a60_0 .net "invert_sel", 0 0, L_0x7ffdf4195760;  1 drivers
v0x7ffdf4171b40_0 .net "output_c", 0 0, L_0x7ffdf41958f0;  alias, 1 drivers
v0x7ffdf4171bd0_0 .net "sel", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
S_0x7ffdf4171cb0 .scope module, "select_B" "MUX_2_1" 4 58, 4 1 0, S_0x7ffdf4170b20;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41959e0 .functor NOT 1, L_0x7ffdf41c3960, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4195a50 .functor AND 1, L_0x7ffdf4196d00, L_0x7ffdf41959e0, C4<1>, C4<1>;
L_0x7ffdf4195b00 .functor AND 1, L_0x7ffdf41956f0, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf4195b70 .functor OR 1, L_0x7ffdf4195a50, L_0x7ffdf4195b00, C4<0>, C4<0>;
v0x7ffdf4171ef0_0 .net "and_a", 0 0, L_0x7ffdf4195a50;  1 drivers
v0x7ffdf4171f90_0 .net "and_b", 0 0, L_0x7ffdf4195b00;  1 drivers
v0x7ffdf4172030_0 .net "input_a", 0 0, L_0x7ffdf4196d00;  alias, 1 drivers
v0x7ffdf41720e0_0 .net "input_b", 0 0, L_0x7ffdf41956f0;  alias, 1 drivers
v0x7ffdf4172180_0 .net "invert_sel", 0 0, L_0x7ffdf41959e0;  1 drivers
v0x7ffdf4172260_0 .net "output_c", 0 0, L_0x7ffdf4195b70;  alias, 1 drivers
v0x7ffdf41722f0_0 .net "sel", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
S_0x7ffdf41723d0 .scope module, "select_F" "MUX_4_1" 4 64, 4 15 0, S_0x7ffdf4170b20;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /INPUT 1 "input_c";
    .port_info 3 /INPUT 1 "input_d";
    .port_info 4 /OUTPUT 1 "output_e";
    .port_info 5 /INPUT 1 "sel_0";
    .port_info 6 /INPUT 1 "sel_1";
L_0x7ffdf4196220 .functor NOT 1, L_0x7ffdf4196910, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4196290 .functor NOT 1, L_0x7ffdf4196a30, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4196320 .functor AND 1, L_0x7ffdf4195c60, L_0x7ffdf4196220, L_0x7ffdf4196290, C4<1>;
L_0x7ffdf4196450 .functor AND 1, L_0x7ffdf4195e10, L_0x7ffdf4196910, L_0x7ffdf4196290, C4<1>;
L_0x7ffdf4196520 .functor AND 1, L_0x7ffdf4195ef0, L_0x7ffdf4196220, L_0x7ffdf4196a30, C4<1>;
L_0x7ffdf4196640 .functor AND 1, L_0x7ffdf3563200, L_0x7ffdf4196910, L_0x7ffdf4196a30, C4<1>;
L_0x7ffdf41966f0 .functor OR 1, L_0x7ffdf4196320, L_0x7ffdf4196450, L_0x7ffdf4196520, L_0x7ffdf4196640;
v0x7ffdf4172680_0 .net "and_a", 0 0, L_0x7ffdf4196320;  1 drivers
v0x7ffdf4172730_0 .net "and_b", 0 0, L_0x7ffdf4196450;  1 drivers
v0x7ffdf41727d0_0 .net "and_c", 0 0, L_0x7ffdf4196520;  1 drivers
v0x7ffdf4172860_0 .net "and_d", 0 0, L_0x7ffdf4196640;  1 drivers
v0x7ffdf4172900_0 .net "input_a", 0 0, L_0x7ffdf4195c60;  alias, 1 drivers
v0x7ffdf41729e0_0 .net "input_b", 0 0, L_0x7ffdf4195e10;  alias, 1 drivers
v0x7ffdf4172a80_0 .net "input_c", 0 0, L_0x7ffdf4195ef0;  alias, 1 drivers
v0x7ffdf4172b10_0 .net "input_d", 0 0, L_0x7ffdf3563200;  alias, 1 drivers
v0x7ffdf4172ba0_0 .net "output_e", 0 0, L_0x7ffdf41966f0;  alias, 1 drivers
v0x7ffdf4172cc0_0 .net "sel_0", 0 0, L_0x7ffdf4196910;  1 drivers
v0x7ffdf4172d60_0 .net "sel_0_invert", 0 0, L_0x7ffdf4196220;  1 drivers
v0x7ffdf4172e00_0 .net "sel_1", 0 0, L_0x7ffdf4196a30;  1 drivers
v0x7ffdf4172ea0_0 .net "sel_1_invert", 0 0, L_0x7ffdf4196290;  1 drivers
S_0x7ffdf4173b30 .scope module, "ALU_9" "ALU_1bit" 3 24, 4 38 0, S_0x7ffdf36f4670;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "result";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "a";
    .port_info 3 /INPUT 1 "b";
    .port_info 4 /INPUT 1 "invertA";
    .port_info 5 /INPUT 1 "invertB";
    .port_info 6 /INPUT 2 "operation";
    .port_info 7 /INPUT 1 "carryIn";
    .port_info 8 /INPUT 1 "less";
L_0x7ffdf4196da0 .functor NOT 1, L_0x7ffdf4198250, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4196e10 .functor NOT 1, L_0x7ffdf4198410, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4197380 .functor AND 1, L_0x7ffdf4197010, L_0x7ffdf4197290, C4<1>, C4<1>;
L_0x7ffdf4197530 .functor OR 1, L_0x7ffdf4197010, L_0x7ffdf4197290, C4<0>, C4<0>;
v0x7ffdf4175fd0_0 .net "a", 0 0, L_0x7ffdf4198250;  1 drivers
v0x7ffdf4176090_0 .net "and_ab", 0 0, L_0x7ffdf4197380;  1 drivers
v0x7ffdf4176120_0 .net "b", 0 0, L_0x7ffdf4198410;  1 drivers
v0x7ffdf41761d0_0 .net "carryIn", 0 0, L_0x7ffdf41960e0;  alias, 1 drivers
v0x7ffdf4176260_0 .net "carryOut", 0 0, L_0x7ffdf41977e0;  alias, 1 drivers
v0x7ffdf4176330_0 .net "invertA", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
v0x7ffdf41763c0_0 .net "invertB", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
v0x7ffdf4176450_0 .net "invert_a", 0 0, L_0x7ffdf4196da0;  1 drivers
v0x7ffdf41764e0_0 .net "invert_b", 0 0, L_0x7ffdf4196e10;  1 drivers
L_0x7ffdf3563248 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x7ffdf4176610_0 .net "less", 0 0, L_0x7ffdf3563248;  1 drivers
v0x7ffdf41766a0_0 .net "operation", 1 0, L_0x7ffdf41c3a00;  alias, 1 drivers
v0x7ffdf4176730_0 .net "or_ab", 0 0, L_0x7ffdf4197530;  1 drivers
v0x7ffdf41767c0_0 .net "result", 0 0, L_0x7ffdf4197df0;  1 drivers
v0x7ffdf4176870_0 .net "select_a", 0 0, L_0x7ffdf4197010;  1 drivers
v0x7ffdf4176940_0 .net "select_b", 0 0, L_0x7ffdf4197290;  1 drivers
v0x7ffdf4176a10_0 .net "sum_ans", 0 0, L_0x7ffdf4197610;  1 drivers
L_0x7ffdf4198010 .part L_0x7ffdf41c3a00, 0, 1;
L_0x7ffdf4198130 .part L_0x7ffdf41c3a00, 1, 1;
S_0x7ffdf4173dd0 .scope module, "adder" "Full_adder" 4 63, 5 1 0, S_0x7ffdf4173b30;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 1 "sum";
    .port_info 1 /OUTPUT 1 "carryOut";
    .port_info 2 /INPUT 1 "carryIn";
    .port_info 3 /INPUT 1 "input1";
    .port_info 4 /INPUT 1 "input2";
L_0x7ffdf41975a0 .functor XOR 1, L_0x7ffdf4197010, L_0x7ffdf4197290, C4<0>, C4<0>;
L_0x7ffdf4197610 .functor XOR 1, L_0x7ffdf41975a0, L_0x7ffdf41960e0, C4<0>, C4<0>;
L_0x7ffdf41976c0 .functor AND 1, L_0x7ffdf4197010, L_0x7ffdf4197290, C4<1>, C4<1>;
L_0x7ffdf4197730 .functor AND 1, L_0x7ffdf41975a0, L_0x7ffdf41960e0, C4<1>, C4<1>;
L_0x7ffdf41977e0 .functor OR 1, L_0x7ffdf41976c0, L_0x7ffdf4197730, C4<0>, C4<0>;
v0x7ffdf4174040_0 .net "carryIn", 0 0, L_0x7ffdf41960e0;  alias, 1 drivers
v0x7ffdf4174110_0 .net "carryOut", 0 0, L_0x7ffdf41977e0;  alias, 1 drivers
v0x7ffdf41741e0_0 .net "input1", 0 0, L_0x7ffdf4197010;  alias, 1 drivers
v0x7ffdf4174270_0 .net "input2", 0 0, L_0x7ffdf4197290;  alias, 1 drivers
v0x7ffdf4174300_0 .net "sum", 0 0, L_0x7ffdf4197610;  alias, 1 drivers
v0x7ffdf41743d0_0 .net "w1", 0 0, L_0x7ffdf41975a0;  1 drivers
v0x7ffdf4174460_0 .net "w2", 0 0, L_0x7ffdf41976c0;  1 drivers
v0x7ffdf41744f0_0 .net "w3", 0 0, L_0x7ffdf4197730;  1 drivers
S_0x7ffdf41745f0 .scope module, "select_A" "MUX_2_1" 4 57, 4 1 0, S_0x7ffdf4173b30;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf4196e80 .functor NOT 1, L_0x7ffdf41c38c0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4196ef0 .functor AND 1, L_0x7ffdf4198250, L_0x7ffdf4196e80, C4<1>, C4<1>;
L_0x7ffdf4196fa0 .functor AND 1, L_0x7ffdf4196da0, L_0x7ffdf41c38c0, C4<1>, C4<1>;
L_0x7ffdf4197010 .functor OR 1, L_0x7ffdf4196ef0, L_0x7ffdf4196fa0, C4<0>, C4<0>;
v0x7ffdf4174810_0 .net "and_a", 0 0, L_0x7ffdf4196ef0;  1 drivers
v0x7ffdf41748a0_0 .net "and_b", 0 0, L_0x7ffdf4196fa0;  1 drivers
v0x7ffdf4174930_0 .net "input_a", 0 0, L_0x7ffdf4198250;  alias, 1 drivers
v0x7ffdf41749e0_0 .net "input_b", 0 0, L_0x7ffdf4196da0;  alias, 1 drivers
v0x7ffdf4174a80_0 .net "invert_sel", 0 0, L_0x7ffdf4196e80;  1 drivers
v0x7ffdf4174b60_0 .net "output_c", 0 0, L_0x7ffdf4197010;  alias, 1 drivers
v0x7ffdf4174bf0_0 .net "sel", 0 0, L_0x7ffdf41c38c0;  alias, 1 drivers
S_0x7ffdf4174cd0 .scope module, "select_B" "MUX_2_1" 4 58, 4 1 0, S_0x7ffdf4173b30;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf4197100 .functor NOT 1, L_0x7ffdf41c3960, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4197170 .functor AND 1, L_0x7ffdf4198410, L_0x7ffdf4197100, C4<1>, C4<1>;
L_0x7ffdf4197220 .functor AND 1, L_0x7ffdf4196e10, L_0x7ffdf41c3960, C4<1>, C4<1>;
L_0x7ffdf4197290 .functor OR 1, L_0x7ffdf4197170, L_0x7ffdf4197220, C4<0>, C4<0>;
v0x7ffdf4174f10_0 .net "and_a", 0 0, L_0x7ffdf4197170;  1 drivers
v0x7ffdf4174fb0_0 .net "and_b", 0 0, L_0x7ffdf4197220;  1 drivers
v0x7ffdf4175050_0 .net "input_a", 0 0, L_0x7ffdf4198410;  alias, 1 drivers
v0x7ffdf4175100_0 .net "input_b", 0 0, L_0x7ffdf4196e10;  alias, 1 drivers
v0x7ffdf41751a0_0 .net "invert_sel", 0 0, L_0x7ffdf4197100;  1 drivers
v0x7ffdf4175280_0 .net "output_c", 0 0, L_0x7ffdf4197290;  alias, 1 drivers
v0x7ffdf4175310_0 .net "sel", 0 0, L_0x7ffdf41c3960;  alias, 1 drivers
S_0x7ffdf41753f0 .scope module, "select_F" "MUX_4_1" 4 64, 4 15 0, S_0x7ffdf4173b30;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /INPUT 1 "input_c";
    .port_info 3 /INPUT 1 "input_d";
    .port_info 4 /OUTPUT 1 "output_e";
    .port_info 5 /INPUT 1 "sel_0";
    .port_info 6 /INPUT 1 "sel_1";
L_0x7ffdf4197920 .functor NOT 1, L_0x7ffdf4198010, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4197990 .functor NOT 1, L_0x7ffdf4198130, C4<0>, C4<0>, C4<0>;
L_0x7ffdf4197a20 .functor AND 1, L_0x7ffdf4197380, L_0x7ffdf4197920, L_0x7ffdf4197990, C4<1>;
L_0x7ffdf4197b50 .functor AND 1, L_0x7ffdf4197530, L_0x7ffdf4198010, L_0x7ffdf4197990, C4<1>;
L_0x7ffdf4197c20 .functor AND 1, L_0x7ffdf4197610, L_0x7ffdf4197920, L_0x7ffdf4198130, C4<1>;
L_0x7ffdf4197d40 .functor AND 1, L_0x7ffdf3563248, L_0x7ffdf4198010, L_0x7ffdf4198130, C4<1>;
L_0x7ffdf4197df0 .functor OR 1, L_0x7ffdf4197a20, L_0x7ffdf4197b50, L_0x7ffdf4197c20, L_0x7ffdf4197d40;
v0x7ffdf41756a0_0 .net "and_a", 0 0, L_0x7ffdf4197a20;  1 drivers
v0x7ffdf4175750_0 .net "and_b", 0 0, L_0x7ffdf4197b50;  1 drivers
v0x7ffdf41757f0_0 .net "and_c", 0 0, L_0x7ffdf4197c20;  1 drivers
v0x7ffdf4175880_0 .net "and_d", 0 0, L_0x7ffdf4197d40;  1 drivers
v0x7ffdf4175920_0 .net "input_a", 0 0, L_0x7ffdf4197380;  alias, 1 drivers
v0x7ffdf4175a00_0 .net "input_b", 0 0, L_0x7ffdf4197530;  alias, 1 drivers
v0x7ffdf4175aa0_0 .net "input_c", 0 0, L_0x7ffdf4197610;  alias, 1 drivers
v0x7ffdf4175b30_0 .net "input_d", 0 0, L_0x7ffdf3563248;  alias, 1 drivers
v0x7ffdf4175bc0_0 .net "output_e", 0 0, L_0x7ffdf4197df0;  alias, 1 drivers
v0x7ffdf4175ce0_0 .net "sel_0", 0 0, L_0x7ffdf4198010;  1 drivers
v0x7ffdf4175d80_0 .net "sel_0_invert", 0 0, L_0x7ffdf4197920;  1 drivers
v0x7ffdf4175e20_0 .net "sel_1", 0 0, L_0x7ffdf4198130;  1 drivers
v0x7ffdf4175ec0_0 .net "sel_1_invert", 0 0, L_0x7ffdf4197990;  1 drivers
S_0x7ffdf417a6e0 .scope module, "shifter" "Shifter" 2 29, 6 15 0, S_0x7ffdf36f8150;
 .timescale -9 -12;
    .port_info 0 /OUTPUT 32 "result";
    .port_info 1 /INPUT 1 "leftRight";
    .port_info 2 /INPUT 5 "shamt";
    .port_info 3 /INPUT 32 "sftSrc";
v0x7ffdf41886e0_0 .net "leftRight", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
v0x7ffdf4181bb0_0 .net "result", 31 0, L_0x7ffdf41c2b80;  alias, 1 drivers
v0x7ffdf4181c50_0 .net "sftSrc", 31 0, L_0x7ffdf41c3c60;  alias, 1 drivers
v0x7ffdf4181d00_0 .net "shamt", 4 0, L_0x7ffdf41c3b40;  alias, 1 drivers
v0x7ffdf4188780_0 .var "shift_left", 31 0;
v0x7ffdf4188870_0 .var "shift_right", 31 0;
E_0x7ffdf36fd6f0 .event edge, v0x7ffdf4181c50_0;
L_0x7ffdf41b9600 .part v0x7ffdf4188870_0, 0, 1;
L_0x7ffdf41b96e0 .part v0x7ffdf4188780_0, 0, 1;
L_0x7ffdf41b9a40 .part v0x7ffdf4188870_0, 1, 1;
L_0x7ffdf41b9b60 .part v0x7ffdf4188780_0, 1, 1;
L_0x7ffdf41b9f40 .part v0x7ffdf4188870_0, 2, 1;
L_0x7ffdf41ba020 .part v0x7ffdf4188780_0, 2, 1;
L_0x7ffdf41ba400 .part v0x7ffdf4188870_0, 3, 1;
L_0x7ffdf41ba560 .part v0x7ffdf4188780_0, 3, 1;
L_0x7ffdf41ba960 .part v0x7ffdf4188870_0, 4, 1;
L_0x7ffdf41baa90 .part v0x7ffdf4188780_0, 4, 1;
L_0x7ffdf41bae30 .part v0x7ffdf4188870_0, 5, 1;
L_0x7ffdf41baf70 .part v0x7ffdf4188780_0, 5, 1;
L_0x7ffdf41bb310 .part v0x7ffdf4188870_0, 6, 1;
L_0x7ffdf41bb460 .part v0x7ffdf4188780_0, 6, 1;
L_0x7ffdf41bb7e0 .part v0x7ffdf4188870_0, 7, 1;
L_0x7ffdf41bb9c0 .part v0x7ffdf4188780_0, 7, 1;
L_0x7ffdf41bbdc0 .part v0x7ffdf4188870_0, 8, 1;
L_0x7ffdf41bbf30 .part v0x7ffdf4188780_0, 8, 1;
L_0x7ffdf41bc2a0 .part v0x7ffdf4188870_0, 9, 1;
L_0x7ffdf41bc420 .part v0x7ffdf4188780_0, 9, 1;
L_0x7ffdf41bc770 .part v0x7ffdf4188870_0, 10, 1;
L_0x7ffdf41bc380 .part v0x7ffdf4188780_0, 10, 1;
L_0x7ffdf41bcc20 .part v0x7ffdf4188870_0, 11, 1;
L_0x7ffdf41bcdc0 .part v0x7ffdf4188780_0, 11, 1;
L_0x7ffdf41bd0d0 .part v0x7ffdf4188870_0, 12, 1;
L_0x7ffdf41bd280 .part v0x7ffdf4188780_0, 12, 1;
L_0x7ffdf41bd590 .part v0x7ffdf4188870_0, 13, 1;
L_0x7ffdf41bd750 .part v0x7ffdf4188780_0, 13, 1;
L_0x7ffdf41bda40 .part v0x7ffdf4188870_0, 14, 1;
L_0x7ffdf41bdc10 .part v0x7ffdf4188780_0, 14, 1;
L_0x7ffdf41bdf10 .part v0x7ffdf4188870_0, 15, 1;
L_0x7ffdf41be1f0 .part v0x7ffdf4188780_0, 15, 1;
L_0x7ffdf41be600 .part v0x7ffdf4188870_0, 16, 1;
L_0x7ffdf41bb8c0 .part v0x7ffdf4188780_0, 16, 1;
L_0x7ffdf41beab0 .part v0x7ffdf4188870_0, 17, 1;
L_0x7ffdf41be6e0 .part v0x7ffdf4188780_0, 17, 1;
L_0x7ffdf41bef90 .part v0x7ffdf4188870_0, 18, 1;
L_0x7ffdf41beb90 .part v0x7ffdf4188780_0, 18, 1;
L_0x7ffdf41bf460 .part v0x7ffdf4188870_0, 19, 1;
L_0x7ffdf41bf070 .part v0x7ffdf4188780_0, 19, 1;
L_0x7ffdf41bf940 .part v0x7ffdf4188870_0, 20, 1;
L_0x7ffdf41bf540 .part v0x7ffdf4188780_0, 20, 1;
L_0x7ffdf41bfe10 .part v0x7ffdf4188870_0, 21, 1;
L_0x7ffdf41bfa20 .part v0x7ffdf4188780_0, 21, 1;
L_0x7ffdf41c02e0 .part v0x7ffdf4188870_0, 22, 1;
L_0x7ffdf41bfef0 .part v0x7ffdf4188780_0, 22, 1;
L_0x7ffdf41c07c0 .part v0x7ffdf4188870_0, 23, 1;
L_0x7ffdf41c03c0 .part v0x7ffdf4188780_0, 23, 1;
L_0x7ffdf41c0cb0 .part v0x7ffdf4188870_0, 24, 1;
L_0x7ffdf41c08a0 .part v0x7ffdf4188780_0, 24, 1;
L_0x7ffdf41c1190 .part v0x7ffdf4188870_0, 25, 1;
L_0x7ffdf41c0d90 .part v0x7ffdf4188780_0, 25, 1;
L_0x7ffdf41c1660 .part v0x7ffdf4188870_0, 26, 1;
L_0x7ffdf41c1270 .part v0x7ffdf4188780_0, 26, 1;
L_0x7ffdf41c1b40 .part v0x7ffdf4188870_0, 27, 1;
L_0x7ffdf41c1740 .part v0x7ffdf4188780_0, 27, 1;
L_0x7ffdf41c2010 .part v0x7ffdf4188870_0, 28, 1;
L_0x7ffdf41c1c20 .part v0x7ffdf4188780_0, 28, 1;
L_0x7ffdf41c24e0 .part v0x7ffdf4188870_0, 29, 1;
L_0x7ffdf41c20f0 .part v0x7ffdf4188780_0, 29, 1;
L_0x7ffdf41c29c0 .part v0x7ffdf4188870_0, 30, 1;
L_0x7ffdf41c25c0 .part v0x7ffdf4188780_0, 30, 1;
L_0x7ffdf41c2e90 .part v0x7ffdf4188870_0, 31, 1;
L_0x7ffdf41c2aa0 .part v0x7ffdf4188780_0, 31, 1;
LS_0x7ffdf41c2b80_0_0 .concat8 [ 1 1 1 1], L_0x7ffdf41b9050, L_0x7ffdf41b9950, L_0x7ffdf41b9e10, L_0x7ffdf41ba2d0;
LS_0x7ffdf41c2b80_0_4 .concat8 [ 1 1 1 1], L_0x7ffdf41ba830, L_0x7ffdf41bad00, L_0x7ffdf41bb1e0, L_0x7ffdf41bb6b0;
LS_0x7ffdf41c2b80_0_8 .concat8 [ 1 1 1 1], L_0x7ffdf41bbc90, L_0x7ffdf41bc170, L_0x7ffdf41bc640, L_0x7ffdf41bcaf0;
LS_0x7ffdf41c2b80_0_12 .concat8 [ 1 1 1 1], L_0x7ffdf41bcfa0, L_0x7ffdf41bd460, L_0x7ffdf41bd910, L_0x7ffdf41bdde0;
LS_0x7ffdf41c2b80_0_16 .concat8 [ 1 1 1 1], L_0x7ffdf41be4d0, L_0x7ffdf41be980, L_0x7ffdf41bee60, L_0x7ffdf41bf330;
LS_0x7ffdf41c2b80_0_20 .concat8 [ 1 1 1 1], L_0x7ffdf41bf810, L_0x7ffdf41bfce0, L_0x7ffdf41c01b0, L_0x7ffdf41c0690;
LS_0x7ffdf41c2b80_0_24 .concat8 [ 1 1 1 1], L_0x7ffdf41c0b80, L_0x7ffdf41c1060, L_0x7ffdf41c1530, L_0x7ffdf41c1a10;
LS_0x7ffdf41c2b80_0_28 .concat8 [ 1 1 1 1], L_0x7ffdf41c1ee0, L_0x7ffdf41c23b0, L_0x7ffdf41c2890, L_0x7ffdf41c2d60;
LS_0x7ffdf41c2b80_1_0 .concat8 [ 4 4 4 4], LS_0x7ffdf41c2b80_0_0, LS_0x7ffdf41c2b80_0_4, LS_0x7ffdf41c2b80_0_8, LS_0x7ffdf41c2b80_0_12;
LS_0x7ffdf41c2b80_1_4 .concat8 [ 4 4 4 4], LS_0x7ffdf41c2b80_0_16, LS_0x7ffdf41c2b80_0_20, LS_0x7ffdf41c2b80_0_24, LS_0x7ffdf41c2b80_0_28;
L_0x7ffdf41c2b80 .concat8 [ 16 16 0 0], LS_0x7ffdf41c2b80_1_0, LS_0x7ffdf41c2b80_1_4;
S_0x7ffdf417a850 .scope module, "Shift_0" "MUX_S_2_1" 6 32, 6 1 0, S_0x7ffdf417a6e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41b8ec0 .functor NOT 1, L_0x7ffdf41c3aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41b8f30 .functor AND 1, L_0x7ffdf41b9600, L_0x7ffdf41b8ec0, C4<1>, C4<1>;
L_0x7ffdf41b8fe0 .functor AND 1, L_0x7ffdf41b96e0, L_0x7ffdf41c3aa0, C4<1>, C4<1>;
L_0x7ffdf41b9050 .functor OR 1, L_0x7ffdf41b8f30, L_0x7ffdf41b8fe0, C4<0>, C4<0>;
v0x7ffdf417aa70_0 .net "and_a", 0 0, L_0x7ffdf41b8f30;  1 drivers
v0x7ffdf417ab00_0 .net "and_b", 0 0, L_0x7ffdf41b8fe0;  1 drivers
v0x7ffdf417ab90_0 .net "input_a", 0 0, L_0x7ffdf41b9600;  1 drivers
v0x7ffdf417ac20_0 .net "input_b", 0 0, L_0x7ffdf41b96e0;  1 drivers
v0x7ffdf417acb0_0 .net "invert_sel", 0 0, L_0x7ffdf41b8ec0;  1 drivers
v0x7ffdf417ad40_0 .net "output_c", 0 0, L_0x7ffdf41b9050;  1 drivers
v0x7ffdf417add0_0 .net "sel", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
S_0x7ffdf417ae60 .scope module, "Shift_1" "MUX_S_2_1" 6 33, 6 1 0, S_0x7ffdf417a6e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41b97c0 .functor NOT 1, L_0x7ffdf41c3aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41b9830 .functor AND 1, L_0x7ffdf41b9a40, L_0x7ffdf41b97c0, C4<1>, C4<1>;
L_0x7ffdf41b98e0 .functor AND 1, L_0x7ffdf41b9b60, L_0x7ffdf41c3aa0, C4<1>, C4<1>;
L_0x7ffdf41b9950 .functor OR 1, L_0x7ffdf41b9830, L_0x7ffdf41b98e0, C4<0>, C4<0>;
v0x7ffdf417b080_0 .net "and_a", 0 0, L_0x7ffdf41b9830;  1 drivers
v0x7ffdf417b110_0 .net "and_b", 0 0, L_0x7ffdf41b98e0;  1 drivers
v0x7ffdf417b1a0_0 .net "input_a", 0 0, L_0x7ffdf41b9a40;  1 drivers
v0x7ffdf417b230_0 .net "input_b", 0 0, L_0x7ffdf41b9b60;  1 drivers
v0x7ffdf417b2c0_0 .net "invert_sel", 0 0, L_0x7ffdf41b97c0;  1 drivers
v0x7ffdf417b350_0 .net "output_c", 0 0, L_0x7ffdf41b9950;  1 drivers
v0x7ffdf417b3e0_0 .net "sel", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
S_0x7ffdf417b470 .scope module, "Shift_10" "MUX_S_2_1" 6 42, 6 1 0, S_0x7ffdf417a6e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41bbea0 .functor NOT 1, L_0x7ffdf41c3aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41bc4c0 .functor AND 1, L_0x7ffdf41bc770, L_0x7ffdf41bbea0, C4<1>, C4<1>;
L_0x7ffdf41bc590 .functor AND 1, L_0x7ffdf41bc380, L_0x7ffdf41c3aa0, C4<1>, C4<1>;
L_0x7ffdf41bc640 .functor OR 1, L_0x7ffdf41bc4c0, L_0x7ffdf41bc590, C4<0>, C4<0>;
v0x7ffdf417b690_0 .net "and_a", 0 0, L_0x7ffdf41bc4c0;  1 drivers
v0x7ffdf417b720_0 .net "and_b", 0 0, L_0x7ffdf41bc590;  1 drivers
v0x7ffdf417b7b0_0 .net "input_a", 0 0, L_0x7ffdf41bc770;  1 drivers
v0x7ffdf417b840_0 .net "input_b", 0 0, L_0x7ffdf41bc380;  1 drivers
v0x7ffdf417b8d0_0 .net "invert_sel", 0 0, L_0x7ffdf41bbea0;  1 drivers
v0x7ffdf417b960_0 .net "output_c", 0 0, L_0x7ffdf41bc640;  1 drivers
v0x7ffdf417b9f0_0 .net "sel", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
S_0x7ffdf417ba80 .scope module, "Shift_11" "MUX_S_2_1" 6 43, 6 1 0, S_0x7ffdf417a6e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41bc940 .functor NOT 1, L_0x7ffdf41c3aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41bc9b0 .functor AND 1, L_0x7ffdf41bcc20, L_0x7ffdf41bc940, C4<1>, C4<1>;
L_0x7ffdf41bca60 .functor AND 1, L_0x7ffdf41bcdc0, L_0x7ffdf41c3aa0, C4<1>, C4<1>;
L_0x7ffdf41bcaf0 .functor OR 1, L_0x7ffdf41bc9b0, L_0x7ffdf41bca60, C4<0>, C4<0>;
v0x7ffdf417bca0_0 .net "and_a", 0 0, L_0x7ffdf41bc9b0;  1 drivers
v0x7ffdf417bd30_0 .net "and_b", 0 0, L_0x7ffdf41bca60;  1 drivers
v0x7ffdf417bdc0_0 .net "input_a", 0 0, L_0x7ffdf41bcc20;  1 drivers
v0x7ffdf417be50_0 .net "input_b", 0 0, L_0x7ffdf41bcdc0;  1 drivers
v0x7ffdf417bee0_0 .net "invert_sel", 0 0, L_0x7ffdf41bc940;  1 drivers
v0x7ffdf417bf70_0 .net "output_c", 0 0, L_0x7ffdf41bcaf0;  1 drivers
v0x7ffdf417c000_0 .net "sel", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
S_0x7ffdf417c090 .scope module, "Shift_12" "MUX_S_2_1" 6 44, 6 1 0, S_0x7ffdf417a6e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41bc850 .functor NOT 1, L_0x7ffdf41c3aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41bcea0 .functor AND 1, L_0x7ffdf41bd0d0, L_0x7ffdf41bc850, C4<1>, C4<1>;
L_0x7ffdf41bcf10 .functor AND 1, L_0x7ffdf41bd280, L_0x7ffdf41c3aa0, C4<1>, C4<1>;
L_0x7ffdf41bcfa0 .functor OR 1, L_0x7ffdf41bcea0, L_0x7ffdf41bcf10, C4<0>, C4<0>;
v0x7ffdf417c2b0_0 .net "and_a", 0 0, L_0x7ffdf41bcea0;  1 drivers
v0x7ffdf417c340_0 .net "and_b", 0 0, L_0x7ffdf41bcf10;  1 drivers
v0x7ffdf417c3d0_0 .net "input_a", 0 0, L_0x7ffdf41bd0d0;  1 drivers
v0x7ffdf417c460_0 .net "input_b", 0 0, L_0x7ffdf41bd280;  1 drivers
v0x7ffdf417c4f0_0 .net "invert_sel", 0 0, L_0x7ffdf41bc850;  1 drivers
v0x7ffdf417c580_0 .net "output_c", 0 0, L_0x7ffdf41bcfa0;  1 drivers
v0x7ffdf417c610_0 .net "sel", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
S_0x7ffdf417c720 .scope module, "Shift_13" "MUX_S_2_1" 6 45, 6 1 0, S_0x7ffdf417a6e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41bcd00 .functor NOT 1, L_0x7ffdf41c3aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41bd320 .functor AND 1, L_0x7ffdf41bd590, L_0x7ffdf41bcd00, C4<1>, C4<1>;
L_0x7ffdf41bd3d0 .functor AND 1, L_0x7ffdf41bd750, L_0x7ffdf41c3aa0, C4<1>, C4<1>;
L_0x7ffdf41bd460 .functor OR 1, L_0x7ffdf41bd320, L_0x7ffdf41bd3d0, C4<0>, C4<0>;
v0x7ffdf417c940_0 .net "and_a", 0 0, L_0x7ffdf41bd320;  1 drivers
v0x7ffdf417c9d0_0 .net "and_b", 0 0, L_0x7ffdf41bd3d0;  1 drivers
v0x7ffdf417ca60_0 .net "input_a", 0 0, L_0x7ffdf41bd590;  1 drivers
v0x7ffdf417caf0_0 .net "input_b", 0 0, L_0x7ffdf41bd750;  1 drivers
v0x7ffdf417cb80_0 .net "invert_sel", 0 0, L_0x7ffdf41bcd00;  1 drivers
v0x7ffdf417cc10_0 .net "output_c", 0 0, L_0x7ffdf41bd460;  1 drivers
v0x7ffdf417cca0_0 .net "sel", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
S_0x7ffdf417cd30 .scope module, "Shift_14" "MUX_S_2_1" 6 46, 6 1 0, S_0x7ffdf417a6e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41bd1b0 .functor NOT 1, L_0x7ffdf41c3aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41bd830 .functor AND 1, L_0x7ffdf41bda40, L_0x7ffdf41bd1b0, C4<1>, C4<1>;
L_0x7ffdf41bd8a0 .functor AND 1, L_0x7ffdf41bdc10, L_0x7ffdf41c3aa0, C4<1>, C4<1>;
L_0x7ffdf41bd910 .functor OR 1, L_0x7ffdf41bd830, L_0x7ffdf41bd8a0, C4<0>, C4<0>;
v0x7ffdf417cf50_0 .net "and_a", 0 0, L_0x7ffdf41bd830;  1 drivers
v0x7ffdf417cfe0_0 .net "and_b", 0 0, L_0x7ffdf41bd8a0;  1 drivers
v0x7ffdf417d070_0 .net "input_a", 0 0, L_0x7ffdf41bda40;  1 drivers
v0x7ffdf417d120_0 .net "input_b", 0 0, L_0x7ffdf41bdc10;  1 drivers
v0x7ffdf417d1c0_0 .net "invert_sel", 0 0, L_0x7ffdf41bd1b0;  1 drivers
v0x7ffdf417d2a0_0 .net "output_c", 0 0, L_0x7ffdf41bd910;  1 drivers
v0x7ffdf417d340_0 .net "sel", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
S_0x7ffdf417d410 .scope module, "Shift_15" "MUX_S_2_1" 6 47, 6 1 0, S_0x7ffdf417a6e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41bd670 .functor NOT 1, L_0x7ffdf41c3aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41bd6e0 .functor AND 1, L_0x7ffdf41bdf10, L_0x7ffdf41bd670, C4<1>, C4<1>;
L_0x7ffdf41bdd30 .functor AND 1, L_0x7ffdf41be1f0, L_0x7ffdf41c3aa0, C4<1>, C4<1>;
L_0x7ffdf41bdde0 .functor OR 1, L_0x7ffdf41bd6e0, L_0x7ffdf41bdd30, C4<0>, C4<0>;
v0x7ffdf417d630_0 .net "and_a", 0 0, L_0x7ffdf41bd6e0;  1 drivers
v0x7ffdf417d6e0_0 .net "and_b", 0 0, L_0x7ffdf41bdd30;  1 drivers
v0x7ffdf417d780_0 .net "input_a", 0 0, L_0x7ffdf41bdf10;  1 drivers
v0x7ffdf417d830_0 .net "input_b", 0 0, L_0x7ffdf41be1f0;  1 drivers
v0x7ffdf417d8d0_0 .net "invert_sel", 0 0, L_0x7ffdf41bd670;  1 drivers
v0x7ffdf417d9b0_0 .net "output_c", 0 0, L_0x7ffdf41bdde0;  1 drivers
v0x7ffdf417da50_0 .net "sel", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
S_0x7ffdf417db20 .scope module, "Shift_16" "MUX_S_2_1" 6 48, 6 1 0, S_0x7ffdf417a6e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41bdb20 .functor NOT 1, L_0x7ffdf41c3aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41bdb90 .functor AND 1, L_0x7ffdf41be600, L_0x7ffdf41bdb20, C4<1>, C4<1>;
L_0x7ffdf41bbaa0 .functor AND 1, L_0x7ffdf41bb8c0, L_0x7ffdf41c3aa0, C4<1>, C4<1>;
L_0x7ffdf41be4d0 .functor OR 1, L_0x7ffdf41bdb90, L_0x7ffdf41bbaa0, C4<0>, C4<0>;
v0x7ffdf417ddc0_0 .net "and_a", 0 0, L_0x7ffdf41bdb90;  1 drivers
v0x7ffdf417de70_0 .net "and_b", 0 0, L_0x7ffdf41bbaa0;  1 drivers
v0x7ffdf417df10_0 .net "input_a", 0 0, L_0x7ffdf41be600;  1 drivers
v0x7ffdf417dfa0_0 .net "input_b", 0 0, L_0x7ffdf41bb8c0;  1 drivers
v0x7ffdf417e030_0 .net "invert_sel", 0 0, L_0x7ffdf41bdb20;  1 drivers
v0x7ffdf417e100_0 .net "output_c", 0 0, L_0x7ffdf41be4d0;  1 drivers
v0x7ffdf417e1a0_0 .net "sel", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
S_0x7ffdf417e370 .scope module, "Shift_17" "MUX_S_2_1" 6 49, 6 1 0, S_0x7ffdf417a6e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41be7f0 .functor NOT 1, L_0x7ffdf41c3aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41be860 .functor AND 1, L_0x7ffdf41beab0, L_0x7ffdf41be7f0, C4<1>, C4<1>;
L_0x7ffdf41be910 .functor AND 1, L_0x7ffdf41be6e0, L_0x7ffdf41c3aa0, C4<1>, C4<1>;
L_0x7ffdf41be980 .functor OR 1, L_0x7ffdf41be860, L_0x7ffdf41be910, C4<0>, C4<0>;
v0x7ffdf417e540_0 .net "and_a", 0 0, L_0x7ffdf41be860;  1 drivers
v0x7ffdf417e5d0_0 .net "and_b", 0 0, L_0x7ffdf41be910;  1 drivers
v0x7ffdf417e660_0 .net "input_a", 0 0, L_0x7ffdf41beab0;  1 drivers
v0x7ffdf417e710_0 .net "input_b", 0 0, L_0x7ffdf41be6e0;  1 drivers
v0x7ffdf417e7b0_0 .net "invert_sel", 0 0, L_0x7ffdf41be7f0;  1 drivers
v0x7ffdf417e890_0 .net "output_c", 0 0, L_0x7ffdf41be980;  1 drivers
v0x7ffdf417e930_0 .net "sel", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
S_0x7ffdf417ea00 .scope module, "Shift_18" "MUX_S_2_1" 6 50, 6 1 0, S_0x7ffdf417a6e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41becb0 .functor NOT 1, L_0x7ffdf41c3aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41bed20 .functor AND 1, L_0x7ffdf41bef90, L_0x7ffdf41becb0, C4<1>, C4<1>;
L_0x7ffdf41bedd0 .functor AND 1, L_0x7ffdf41beb90, L_0x7ffdf41c3aa0, C4<1>, C4<1>;
L_0x7ffdf41bee60 .functor OR 1, L_0x7ffdf41bed20, L_0x7ffdf41bedd0, C4<0>, C4<0>;
v0x7ffdf417ec20_0 .net "and_a", 0 0, L_0x7ffdf41bed20;  1 drivers
v0x7ffdf417ecd0_0 .net "and_b", 0 0, L_0x7ffdf41bedd0;  1 drivers
v0x7ffdf417ed70_0 .net "input_a", 0 0, L_0x7ffdf41bef90;  1 drivers
v0x7ffdf417ee20_0 .net "input_b", 0 0, L_0x7ffdf41beb90;  1 drivers
v0x7ffdf417eec0_0 .net "invert_sel", 0 0, L_0x7ffdf41becb0;  1 drivers
v0x7ffdf417efa0_0 .net "output_c", 0 0, L_0x7ffdf41bee60;  1 drivers
v0x7ffdf417f040_0 .net "sel", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
S_0x7ffdf417f110 .scope module, "Shift_19" "MUX_S_2_1" 6 51, 6 1 0, S_0x7ffdf417a6e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41bf1a0 .functor NOT 1, L_0x7ffdf41c3aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41bf210 .functor AND 1, L_0x7ffdf41bf460, L_0x7ffdf41bf1a0, C4<1>, C4<1>;
L_0x7ffdf41bf280 .functor AND 1, L_0x7ffdf41bf070, L_0x7ffdf41c3aa0, C4<1>, C4<1>;
L_0x7ffdf41bf330 .functor OR 1, L_0x7ffdf41bf210, L_0x7ffdf41bf280, C4<0>, C4<0>;
v0x7ffdf417f330_0 .net "and_a", 0 0, L_0x7ffdf41bf210;  1 drivers
v0x7ffdf417f3e0_0 .net "and_b", 0 0, L_0x7ffdf41bf280;  1 drivers
v0x7ffdf417f480_0 .net "input_a", 0 0, L_0x7ffdf41bf460;  1 drivers
v0x7ffdf417f530_0 .net "input_b", 0 0, L_0x7ffdf41bf070;  1 drivers
v0x7ffdf417f5d0_0 .net "invert_sel", 0 0, L_0x7ffdf41bf1a0;  1 drivers
v0x7ffdf417f6b0_0 .net "output_c", 0 0, L_0x7ffdf41bf330;  1 drivers
v0x7ffdf417f750_0 .net "sel", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
S_0x7ffdf417f820 .scope module, "Shift_2" "MUX_S_2_1" 6 34, 6 1 0, S_0x7ffdf417a6e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41b9c80 .functor NOT 1, L_0x7ffdf41c3aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41b9cf0 .functor AND 1, L_0x7ffdf41b9f40, L_0x7ffdf41b9c80, C4<1>, C4<1>;
L_0x7ffdf41b9da0 .functor AND 1, L_0x7ffdf41ba020, L_0x7ffdf41c3aa0, C4<1>, C4<1>;
L_0x7ffdf41b9e10 .functor OR 1, L_0x7ffdf41b9cf0, L_0x7ffdf41b9da0, C4<0>, C4<0>;
v0x7ffdf417fa40_0 .net "and_a", 0 0, L_0x7ffdf41b9cf0;  1 drivers
v0x7ffdf417faf0_0 .net "and_b", 0 0, L_0x7ffdf41b9da0;  1 drivers
v0x7ffdf417fb90_0 .net "input_a", 0 0, L_0x7ffdf41b9f40;  1 drivers
v0x7ffdf417fc40_0 .net "input_b", 0 0, L_0x7ffdf41ba020;  1 drivers
v0x7ffdf417fce0_0 .net "invert_sel", 0 0, L_0x7ffdf41b9c80;  1 drivers
v0x7ffdf417fdc0_0 .net "output_c", 0 0, L_0x7ffdf41b9e10;  1 drivers
v0x7ffdf417fe60_0 .net "sel", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
S_0x7ffdf417ff30 .scope module, "Shift_20" "MUX_S_2_1" 6 52, 6 1 0, S_0x7ffdf417a6e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41bf680 .functor NOT 1, L_0x7ffdf41c3aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41bf6f0 .functor AND 1, L_0x7ffdf41bf940, L_0x7ffdf41bf680, C4<1>, C4<1>;
L_0x7ffdf41bf760 .functor AND 1, L_0x7ffdf41bf540, L_0x7ffdf41c3aa0, C4<1>, C4<1>;
L_0x7ffdf41bf810 .functor OR 1, L_0x7ffdf41bf6f0, L_0x7ffdf41bf760, C4<0>, C4<0>;
v0x7ffdf4180150_0 .net "and_a", 0 0, L_0x7ffdf41bf6f0;  1 drivers
v0x7ffdf4180200_0 .net "and_b", 0 0, L_0x7ffdf41bf760;  1 drivers
v0x7ffdf41802a0_0 .net "input_a", 0 0, L_0x7ffdf41bf940;  1 drivers
v0x7ffdf4180350_0 .net "input_b", 0 0, L_0x7ffdf41bf540;  1 drivers
v0x7ffdf41803f0_0 .net "invert_sel", 0 0, L_0x7ffdf41bf680;  1 drivers
v0x7ffdf41804d0_0 .net "output_c", 0 0, L_0x7ffdf41bf810;  1 drivers
v0x7ffdf4180570_0 .net "sel", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
S_0x7ffdf4180640 .scope module, "Shift_21" "MUX_S_2_1" 6 53, 6 1 0, S_0x7ffdf417a6e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41bfb70 .functor NOT 1, L_0x7ffdf41c3aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41bfbe0 .functor AND 1, L_0x7ffdf41bfe10, L_0x7ffdf41bfb70, C4<1>, C4<1>;
L_0x7ffdf41bfc50 .functor AND 1, L_0x7ffdf41bfa20, L_0x7ffdf41c3aa0, C4<1>, C4<1>;
L_0x7ffdf41bfce0 .functor OR 1, L_0x7ffdf41bfbe0, L_0x7ffdf41bfc50, C4<0>, C4<0>;
v0x7ffdf4180860_0 .net "and_a", 0 0, L_0x7ffdf41bfbe0;  1 drivers
v0x7ffdf4180910_0 .net "and_b", 0 0, L_0x7ffdf41bfc50;  1 drivers
v0x7ffdf41809b0_0 .net "input_a", 0 0, L_0x7ffdf41bfe10;  1 drivers
v0x7ffdf4180a60_0 .net "input_b", 0 0, L_0x7ffdf41bfa20;  1 drivers
v0x7ffdf4180b00_0 .net "invert_sel", 0 0, L_0x7ffdf41bfb70;  1 drivers
v0x7ffdf4180be0_0 .net "output_c", 0 0, L_0x7ffdf41bfce0;  1 drivers
v0x7ffdf4180c80_0 .net "sel", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
S_0x7ffdf4180d50 .scope module, "Shift_22" "MUX_S_2_1" 6 54, 6 1 0, S_0x7ffdf417a6e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41bfb00 .functor NOT 1, L_0x7ffdf41c3aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41c0050 .functor AND 1, L_0x7ffdf41c02e0, L_0x7ffdf41bfb00, C4<1>, C4<1>;
L_0x7ffdf41c0100 .functor AND 1, L_0x7ffdf41bfef0, L_0x7ffdf41c3aa0, C4<1>, C4<1>;
L_0x7ffdf41c01b0 .functor OR 1, L_0x7ffdf41c0050, L_0x7ffdf41c0100, C4<0>, C4<0>;
v0x7ffdf4180f70_0 .net "and_a", 0 0, L_0x7ffdf41c0050;  1 drivers
v0x7ffdf4181020_0 .net "and_b", 0 0, L_0x7ffdf41c0100;  1 drivers
v0x7ffdf41810c0_0 .net "input_a", 0 0, L_0x7ffdf41c02e0;  1 drivers
v0x7ffdf4181170_0 .net "input_b", 0 0, L_0x7ffdf41bfef0;  1 drivers
v0x7ffdf4181210_0 .net "invert_sel", 0 0, L_0x7ffdf41bfb00;  1 drivers
v0x7ffdf41812f0_0 .net "output_c", 0 0, L_0x7ffdf41c01b0;  1 drivers
v0x7ffdf4181390_0 .net "sel", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
S_0x7ffdf4181460 .scope module, "Shift_23" "MUX_S_2_1" 6 55, 6 1 0, S_0x7ffdf417a6e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41bffd0 .functor NOT 1, L_0x7ffdf41c3aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41c0530 .functor AND 1, L_0x7ffdf41c07c0, L_0x7ffdf41bffd0, C4<1>, C4<1>;
L_0x7ffdf41c05e0 .functor AND 1, L_0x7ffdf41c03c0, L_0x7ffdf41c3aa0, C4<1>, C4<1>;
L_0x7ffdf41c0690 .functor OR 1, L_0x7ffdf41c0530, L_0x7ffdf41c05e0, C4<0>, C4<0>;
v0x7ffdf4181780_0 .net "and_a", 0 0, L_0x7ffdf41c0530;  1 drivers
v0x7ffdf4181830_0 .net "and_b", 0 0, L_0x7ffdf41c05e0;  1 drivers
v0x7ffdf41818d0_0 .net "input_a", 0 0, L_0x7ffdf41c07c0;  1 drivers
v0x7ffdf4181960_0 .net "input_b", 0 0, L_0x7ffdf41c03c0;  1 drivers
v0x7ffdf41819f0_0 .net "invert_sel", 0 0, L_0x7ffdf41bffd0;  1 drivers
v0x7ffdf4181a80_0 .net "output_c", 0 0, L_0x7ffdf41c0690;  1 drivers
v0x7ffdf4181b20_0 .net "sel", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
S_0x7ffdf4181db0 .scope module, "Shift_24" "MUX_S_2_1" 6 56, 6 1 0, S_0x7ffdf417a6e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41c04a0 .functor NOT 1, L_0x7ffdf41c3aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41c0a20 .functor AND 1, L_0x7ffdf41c0cb0, L_0x7ffdf41c04a0, C4<1>, C4<1>;
L_0x7ffdf41c0ad0 .functor AND 1, L_0x7ffdf41c08a0, L_0x7ffdf41c3aa0, C4<1>, C4<1>;
L_0x7ffdf41c0b80 .functor OR 1, L_0x7ffdf41c0a20, L_0x7ffdf41c0ad0, C4<0>, C4<0>;
v0x7ffdf4181f20_0 .net "and_a", 0 0, L_0x7ffdf41c0a20;  1 drivers
v0x7ffdf4181fc0_0 .net "and_b", 0 0, L_0x7ffdf41c0ad0;  1 drivers
v0x7ffdf4182060_0 .net "input_a", 0 0, L_0x7ffdf41c0cb0;  1 drivers
v0x7ffdf4182110_0 .net "input_b", 0 0, L_0x7ffdf41c08a0;  1 drivers
v0x7ffdf41821b0_0 .net "invert_sel", 0 0, L_0x7ffdf41c04a0;  1 drivers
v0x7ffdf4182290_0 .net "output_c", 0 0, L_0x7ffdf41c0b80;  1 drivers
v0x7ffdf4182330_0 .net "sel", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
S_0x7ffdf4182400 .scope module, "Shift_25" "MUX_S_2_1" 6 57, 6 1 0, S_0x7ffdf417a6e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41c0980 .functor NOT 1, L_0x7ffdf41c3aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41c0f20 .functor AND 1, L_0x7ffdf41c1190, L_0x7ffdf41c0980, C4<1>, C4<1>;
L_0x7ffdf41c0fd0 .functor AND 1, L_0x7ffdf41c0d90, L_0x7ffdf41c3aa0, C4<1>, C4<1>;
L_0x7ffdf41c1060 .functor OR 1, L_0x7ffdf41c0f20, L_0x7ffdf41c0fd0, C4<0>, C4<0>;
v0x7ffdf4182620_0 .net "and_a", 0 0, L_0x7ffdf41c0f20;  1 drivers
v0x7ffdf41826d0_0 .net "and_b", 0 0, L_0x7ffdf41c0fd0;  1 drivers
v0x7ffdf4182770_0 .net "input_a", 0 0, L_0x7ffdf41c1190;  1 drivers
v0x7ffdf4182820_0 .net "input_b", 0 0, L_0x7ffdf41c0d90;  1 drivers
v0x7ffdf41828c0_0 .net "invert_sel", 0 0, L_0x7ffdf41c0980;  1 drivers
v0x7ffdf41829a0_0 .net "output_c", 0 0, L_0x7ffdf41c1060;  1 drivers
v0x7ffdf4182a40_0 .net "sel", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
S_0x7ffdf4182b10 .scope module, "Shift_26" "MUX_S_2_1" 6 58, 6 1 0, S_0x7ffdf417a6e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41c0e70 .functor NOT 1, L_0x7ffdf41c3aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41c1410 .functor AND 1, L_0x7ffdf41c1660, L_0x7ffdf41c0e70, C4<1>, C4<1>;
L_0x7ffdf41c1480 .functor AND 1, L_0x7ffdf41c1270, L_0x7ffdf41c3aa0, C4<1>, C4<1>;
L_0x7ffdf41c1530 .functor OR 1, L_0x7ffdf41c1410, L_0x7ffdf41c1480, C4<0>, C4<0>;
v0x7ffdf4182d30_0 .net "and_a", 0 0, L_0x7ffdf41c1410;  1 drivers
v0x7ffdf4182de0_0 .net "and_b", 0 0, L_0x7ffdf41c1480;  1 drivers
v0x7ffdf4182e80_0 .net "input_a", 0 0, L_0x7ffdf41c1660;  1 drivers
v0x7ffdf4182f30_0 .net "input_b", 0 0, L_0x7ffdf41c1270;  1 drivers
v0x7ffdf4182fd0_0 .net "invert_sel", 0 0, L_0x7ffdf41c0e70;  1 drivers
v0x7ffdf41830b0_0 .net "output_c", 0 0, L_0x7ffdf41c1530;  1 drivers
v0x7ffdf4183150_0 .net "sel", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
S_0x7ffdf4183220 .scope module, "Shift_27" "MUX_S_2_1" 6 59, 6 1 0, S_0x7ffdf417a6e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41c1350 .functor NOT 1, L_0x7ffdf41c3aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41c18f0 .functor AND 1, L_0x7ffdf41c1b40, L_0x7ffdf41c1350, C4<1>, C4<1>;
L_0x7ffdf41c1960 .functor AND 1, L_0x7ffdf41c1740, L_0x7ffdf41c3aa0, C4<1>, C4<1>;
L_0x7ffdf41c1a10 .functor OR 1, L_0x7ffdf41c18f0, L_0x7ffdf41c1960, C4<0>, C4<0>;
v0x7ffdf4183440_0 .net "and_a", 0 0, L_0x7ffdf41c18f0;  1 drivers
v0x7ffdf41834f0_0 .net "and_b", 0 0, L_0x7ffdf41c1960;  1 drivers
v0x7ffdf4183590_0 .net "input_a", 0 0, L_0x7ffdf41c1b40;  1 drivers
v0x7ffdf4183640_0 .net "input_b", 0 0, L_0x7ffdf41c1740;  1 drivers
v0x7ffdf41836e0_0 .net "invert_sel", 0 0, L_0x7ffdf41c1350;  1 drivers
v0x7ffdf41837c0_0 .net "output_c", 0 0, L_0x7ffdf41c1a10;  1 drivers
v0x7ffdf4183860_0 .net "sel", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
S_0x7ffdf4183930 .scope module, "Shift_28" "MUX_S_2_1" 6 60, 6 1 0, S_0x7ffdf417a6e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41c1820 .functor NOT 1, L_0x7ffdf41c3aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41c1de0 .functor AND 1, L_0x7ffdf41c2010, L_0x7ffdf41c1820, C4<1>, C4<1>;
L_0x7ffdf41c1e50 .functor AND 1, L_0x7ffdf41c1c20, L_0x7ffdf41c3aa0, C4<1>, C4<1>;
L_0x7ffdf41c1ee0 .functor OR 1, L_0x7ffdf41c1de0, L_0x7ffdf41c1e50, C4<0>, C4<0>;
v0x7ffdf4183b50_0 .net "and_a", 0 0, L_0x7ffdf41c1de0;  1 drivers
v0x7ffdf4183c00_0 .net "and_b", 0 0, L_0x7ffdf41c1e50;  1 drivers
v0x7ffdf4183ca0_0 .net "input_a", 0 0, L_0x7ffdf41c2010;  1 drivers
v0x7ffdf4183d50_0 .net "input_b", 0 0, L_0x7ffdf41c1c20;  1 drivers
v0x7ffdf4183df0_0 .net "invert_sel", 0 0, L_0x7ffdf41c1820;  1 drivers
v0x7ffdf4183ed0_0 .net "output_c", 0 0, L_0x7ffdf41c1ee0;  1 drivers
v0x7ffdf4183f70_0 .net "sel", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
S_0x7ffdf4184040 .scope module, "Shift_29" "MUX_S_2_1" 6 61, 6 1 0, S_0x7ffdf417a6e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41c1d00 .functor NOT 1, L_0x7ffdf41c3aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41c1d70 .functor AND 1, L_0x7ffdf41c24e0, L_0x7ffdf41c1d00, C4<1>, C4<1>;
L_0x7ffdf41c2300 .functor AND 1, L_0x7ffdf41c20f0, L_0x7ffdf41c3aa0, C4<1>, C4<1>;
L_0x7ffdf41c23b0 .functor OR 1, L_0x7ffdf41c1d70, L_0x7ffdf41c2300, C4<0>, C4<0>;
v0x7ffdf4184260_0 .net "and_a", 0 0, L_0x7ffdf41c1d70;  1 drivers
v0x7ffdf4184310_0 .net "and_b", 0 0, L_0x7ffdf41c2300;  1 drivers
v0x7ffdf41843b0_0 .net "input_a", 0 0, L_0x7ffdf41c24e0;  1 drivers
v0x7ffdf4184460_0 .net "input_b", 0 0, L_0x7ffdf41c20f0;  1 drivers
v0x7ffdf4184500_0 .net "invert_sel", 0 0, L_0x7ffdf41c1d00;  1 drivers
v0x7ffdf41845e0_0 .net "output_c", 0 0, L_0x7ffdf41c23b0;  1 drivers
v0x7ffdf4184680_0 .net "sel", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
S_0x7ffdf4184750 .scope module, "Shift_3" "MUX_S_2_1" 6 35, 6 1 0, S_0x7ffdf417a6e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41ba100 .functor NOT 1, L_0x7ffdf41c3aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41ba170 .functor AND 1, L_0x7ffdf41ba400, L_0x7ffdf41ba100, C4<1>, C4<1>;
L_0x7ffdf41ba220 .functor AND 1, L_0x7ffdf41ba560, L_0x7ffdf41c3aa0, C4<1>, C4<1>;
L_0x7ffdf41ba2d0 .functor OR 1, L_0x7ffdf41ba170, L_0x7ffdf41ba220, C4<0>, C4<0>;
v0x7ffdf4184970_0 .net "and_a", 0 0, L_0x7ffdf41ba170;  1 drivers
v0x7ffdf4184a20_0 .net "and_b", 0 0, L_0x7ffdf41ba220;  1 drivers
v0x7ffdf4184ac0_0 .net "input_a", 0 0, L_0x7ffdf41ba400;  1 drivers
v0x7ffdf4184b70_0 .net "input_b", 0 0, L_0x7ffdf41ba560;  1 drivers
v0x7ffdf4184c10_0 .net "invert_sel", 0 0, L_0x7ffdf41ba100;  1 drivers
v0x7ffdf4184cf0_0 .net "output_c", 0 0, L_0x7ffdf41ba2d0;  1 drivers
v0x7ffdf4184d90_0 .net "sel", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
S_0x7ffdf4184e60 .scope module, "Shift_30" "MUX_S_2_1" 6 62, 6 1 0, S_0x7ffdf417a6e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41c21d0 .functor NOT 1, L_0x7ffdf41c3aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41c2240 .functor AND 1, L_0x7ffdf41c29c0, L_0x7ffdf41c21d0, C4<1>, C4<1>;
L_0x7ffdf41c27e0 .functor AND 1, L_0x7ffdf41c25c0, L_0x7ffdf41c3aa0, C4<1>, C4<1>;
L_0x7ffdf41c2890 .functor OR 1, L_0x7ffdf41c2240, L_0x7ffdf41c27e0, C4<0>, C4<0>;
v0x7ffdf4185080_0 .net "and_a", 0 0, L_0x7ffdf41c2240;  1 drivers
v0x7ffdf4185130_0 .net "and_b", 0 0, L_0x7ffdf41c27e0;  1 drivers
v0x7ffdf41851d0_0 .net "input_a", 0 0, L_0x7ffdf41c29c0;  1 drivers
v0x7ffdf4185280_0 .net "input_b", 0 0, L_0x7ffdf41c25c0;  1 drivers
v0x7ffdf4185320_0 .net "invert_sel", 0 0, L_0x7ffdf41c21d0;  1 drivers
v0x7ffdf4185400_0 .net "output_c", 0 0, L_0x7ffdf41c2890;  1 drivers
v0x7ffdf41854a0_0 .net "sel", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
S_0x7ffdf4185570 .scope module, "Shift_31" "MUX_S_2_1" 6 63, 6 1 0, S_0x7ffdf417a6e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41c26a0 .functor NOT 1, L_0x7ffdf41c3aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41c2710 .functor AND 1, L_0x7ffdf41c2e90, L_0x7ffdf41c26a0, C4<1>, C4<1>;
L_0x7ffdf41c2cd0 .functor AND 1, L_0x7ffdf41c2aa0, L_0x7ffdf41c3aa0, C4<1>, C4<1>;
L_0x7ffdf41c2d60 .functor OR 1, L_0x7ffdf41c2710, L_0x7ffdf41c2cd0, C4<0>, C4<0>;
v0x7ffdf4185790_0 .net "and_a", 0 0, L_0x7ffdf41c2710;  1 drivers
v0x7ffdf4185840_0 .net "and_b", 0 0, L_0x7ffdf41c2cd0;  1 drivers
v0x7ffdf41858e0_0 .net "input_a", 0 0, L_0x7ffdf41c2e90;  1 drivers
v0x7ffdf4185990_0 .net "input_b", 0 0, L_0x7ffdf41c2aa0;  1 drivers
v0x7ffdf4185a30_0 .net "invert_sel", 0 0, L_0x7ffdf41c26a0;  1 drivers
v0x7ffdf4185b10_0 .net "output_c", 0 0, L_0x7ffdf41c2d60;  1 drivers
v0x7ffdf4185bb0_0 .net "sel", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
S_0x7ffdf4185c80 .scope module, "Shift_4" "MUX_S_2_1" 6 36, 6 1 0, S_0x7ffdf417a6e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41ba6c0 .functor NOT 1, L_0x7ffdf41c3aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41ba730 .functor AND 1, L_0x7ffdf41ba960, L_0x7ffdf41ba6c0, C4<1>, C4<1>;
L_0x7ffdf41ba7a0 .functor AND 1, L_0x7ffdf41baa90, L_0x7ffdf41c3aa0, C4<1>, C4<1>;
L_0x7ffdf41ba830 .functor OR 1, L_0x7ffdf41ba730, L_0x7ffdf41ba7a0, C4<0>, C4<0>;
v0x7ffdf4185ea0_0 .net "and_a", 0 0, L_0x7ffdf41ba730;  1 drivers
v0x7ffdf4185f50_0 .net "and_b", 0 0, L_0x7ffdf41ba7a0;  1 drivers
v0x7ffdf4185ff0_0 .net "input_a", 0 0, L_0x7ffdf41ba960;  1 drivers
v0x7ffdf41860a0_0 .net "input_b", 0 0, L_0x7ffdf41baa90;  1 drivers
v0x7ffdf4186140_0 .net "invert_sel", 0 0, L_0x7ffdf41ba6c0;  1 drivers
v0x7ffdf4186220_0 .net "output_c", 0 0, L_0x7ffdf41ba830;  1 drivers
v0x7ffdf41862c0_0 .net "sel", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
S_0x7ffdf4186390 .scope module, "Shift_5" "MUX_S_2_1" 6 37, 6 1 0, S_0x7ffdf417a6e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41bab30 .functor NOT 1, L_0x7ffdf41c3aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41baba0 .functor AND 1, L_0x7ffdf41bae30, L_0x7ffdf41bab30, C4<1>, C4<1>;
L_0x7ffdf41bac50 .functor AND 1, L_0x7ffdf41baf70, L_0x7ffdf41c3aa0, C4<1>, C4<1>;
L_0x7ffdf41bad00 .functor OR 1, L_0x7ffdf41baba0, L_0x7ffdf41bac50, C4<0>, C4<0>;
v0x7ffdf41865b0_0 .net "and_a", 0 0, L_0x7ffdf41baba0;  1 drivers
v0x7ffdf4186660_0 .net "and_b", 0 0, L_0x7ffdf41bac50;  1 drivers
v0x7ffdf4186700_0 .net "input_a", 0 0, L_0x7ffdf41bae30;  1 drivers
v0x7ffdf41867b0_0 .net "input_b", 0 0, L_0x7ffdf41baf70;  1 drivers
v0x7ffdf4186850_0 .net "invert_sel", 0 0, L_0x7ffdf41bab30;  1 drivers
v0x7ffdf4186930_0 .net "output_c", 0 0, L_0x7ffdf41bad00;  1 drivers
v0x7ffdf41869d0_0 .net "sel", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
S_0x7ffdf4186aa0 .scope module, "Shift_6" "MUX_S_2_1" 6 38, 6 1 0, S_0x7ffdf417a6e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41bb010 .functor NOT 1, L_0x7ffdf41c3aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41bb080 .functor AND 1, L_0x7ffdf41bb310, L_0x7ffdf41bb010, C4<1>, C4<1>;
L_0x7ffdf41bb130 .functor AND 1, L_0x7ffdf41bb460, L_0x7ffdf41c3aa0, C4<1>, C4<1>;
L_0x7ffdf41bb1e0 .functor OR 1, L_0x7ffdf41bb080, L_0x7ffdf41bb130, C4<0>, C4<0>;
v0x7ffdf4186cc0_0 .net "and_a", 0 0, L_0x7ffdf41bb080;  1 drivers
v0x7ffdf4186d70_0 .net "and_b", 0 0, L_0x7ffdf41bb130;  1 drivers
v0x7ffdf4186e10_0 .net "input_a", 0 0, L_0x7ffdf41bb310;  1 drivers
v0x7ffdf4186ec0_0 .net "input_b", 0 0, L_0x7ffdf41bb460;  1 drivers
v0x7ffdf4186f60_0 .net "invert_sel", 0 0, L_0x7ffdf41bb010;  1 drivers
v0x7ffdf4187040_0 .net "output_c", 0 0, L_0x7ffdf41bb1e0;  1 drivers
v0x7ffdf41870e0_0 .net "sel", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
S_0x7ffdf41871b0 .scope module, "Shift_7" "MUX_S_2_1" 6 39, 6 1 0, S_0x7ffdf417a6e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41bb500 .functor NOT 1, L_0x7ffdf41c3aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41bb570 .functor AND 1, L_0x7ffdf41bb7e0, L_0x7ffdf41bb500, C4<1>, C4<1>;
L_0x7ffdf41bb620 .functor AND 1, L_0x7ffdf41bb9c0, L_0x7ffdf41c3aa0, C4<1>, C4<1>;
L_0x7ffdf41bb6b0 .functor OR 1, L_0x7ffdf41bb570, L_0x7ffdf41bb620, C4<0>, C4<0>;
v0x7ffdf41873d0_0 .net "and_a", 0 0, L_0x7ffdf41bb570;  1 drivers
v0x7ffdf4187480_0 .net "and_b", 0 0, L_0x7ffdf41bb620;  1 drivers
v0x7ffdf4187520_0 .net "input_a", 0 0, L_0x7ffdf41bb7e0;  1 drivers
v0x7ffdf41875d0_0 .net "input_b", 0 0, L_0x7ffdf41bb9c0;  1 drivers
v0x7ffdf4187670_0 .net "invert_sel", 0 0, L_0x7ffdf41bb500;  1 drivers
v0x7ffdf4187750_0 .net "output_c", 0 0, L_0x7ffdf41bb6b0;  1 drivers
v0x7ffdf41877f0_0 .net "sel", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
S_0x7ffdf41878c0 .scope module, "Shift_8" "MUX_S_2_1" 6 40, 6 1 0, S_0x7ffdf417a6e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41bb3f0 .functor NOT 1, L_0x7ffdf41c3aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41ba640 .functor AND 1, L_0x7ffdf41bbdc0, L_0x7ffdf41bb3f0, C4<1>, C4<1>;
L_0x7ffdf41bbbe0 .functor AND 1, L_0x7ffdf41bbf30, L_0x7ffdf41c3aa0, C4<1>, C4<1>;
L_0x7ffdf41bbc90 .functor OR 1, L_0x7ffdf41ba640, L_0x7ffdf41bbbe0, C4<0>, C4<0>;
v0x7ffdf4187ae0_0 .net "and_a", 0 0, L_0x7ffdf41ba640;  1 drivers
v0x7ffdf4187b90_0 .net "and_b", 0 0, L_0x7ffdf41bbbe0;  1 drivers
v0x7ffdf4187c30_0 .net "input_a", 0 0, L_0x7ffdf41bbdc0;  1 drivers
v0x7ffdf4187ce0_0 .net "input_b", 0 0, L_0x7ffdf41bbf30;  1 drivers
v0x7ffdf4187d80_0 .net "invert_sel", 0 0, L_0x7ffdf41bb3f0;  1 drivers
v0x7ffdf4187e60_0 .net "output_c", 0 0, L_0x7ffdf41bbc90;  1 drivers
v0x7ffdf4187f00_0 .net "sel", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
S_0x7ffdf4187fd0 .scope module, "Shift_9" "MUX_S_2_1" 6 41, 6 1 0, S_0x7ffdf417a6e0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "input_a";
    .port_info 1 /INPUT 1 "input_b";
    .port_info 2 /OUTPUT 1 "output_c";
    .port_info 3 /INPUT 1 "sel";
L_0x7ffdf41ba4e0 .functor NOT 1, L_0x7ffdf41c3aa0, C4<0>, C4<0>, C4<0>;
L_0x7ffdf41bbfd0 .functor AND 1, L_0x7ffdf41bc2a0, L_0x7ffdf41ba4e0, C4<1>, C4<1>;
L_0x7ffdf41bc0c0 .functor AND 1, L_0x7ffdf41bc420, L_0x7ffdf41c3aa0, C4<1>, C4<1>;
L_0x7ffdf41bc170 .functor OR 1, L_0x7ffdf41bbfd0, L_0x7ffdf41bc0c0, C4<0>, C4<0>;
v0x7ffdf41881f0_0 .net "and_a", 0 0, L_0x7ffdf41bbfd0;  1 drivers
v0x7ffdf41882a0_0 .net "and_b", 0 0, L_0x7ffdf41bc0c0;  1 drivers
v0x7ffdf4188340_0 .net "input_a", 0 0, L_0x7ffdf41bc2a0;  1 drivers
v0x7ffdf41883f0_0 .net "input_b", 0 0, L_0x7ffdf41bc420;  1 drivers
v0x7ffdf4188490_0 .net "invert_sel", 0 0, L_0x7ffdf41ba4e0;  1 drivers
v0x7ffdf4188570_0 .net "output_c", 0 0, L_0x7ffdf41bc170;  1 drivers
v0x7ffdf4188610_0 .net "sel", 0 0, L_0x7ffdf41c3aa0;  alias, 1 drivers
    .scope S_0x7ffdf417a6e0;
T_0 ;
    %wait E_0x7ffdf36fd6f0;
    %load/vec4 v0x7ffdf4181c50_0;
    %ix/getv 4, v0x7ffdf4181d00_0;
    %shiftl 4;
    %store/vec4 v0x7ffdf4188780_0, 0, 32;
    %load/vec4 v0x7ffdf4181c50_0;
    %ix/getv 4, v0x7ffdf4181d00_0;
    %shiftr 4;
    %store/vec4 v0x7ffdf4188870_0, 0, 32;
    %jmp T_0;
    .thread T_0, $push;
    .scope S_0x7ffdf36f8150;
T_1 ;
    %vpi_call 2 42 "$dumpfile", "ALU_lab2.vcd" {0 0 0};
    %vpi_call 2 43 "$dumpvars" {0 0 0};
    %end;
    .thread T_1;
    .scope S_0x7ffdf36f8150;
T_2 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x7ffdf4188c20_0, 0, 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x7ffdf41896f0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x7ffdf4188d00_0, 0, 32;
    %vpi_call 2 51 "$readmemb", "test1_ALU.txt", v0x7ffdf4189260 {0 0 0};
    %vpi_call 2 52 "$readmemb", "ans1_ALU.txt", v0x7ffdf4189140 {0 0 0};
    %vpi_call 2 53 "$readmemb", "test1_Shifter.txt", v0x7ffdf4189300 {0 0 0};
    %vpi_call 2 54 "$readmemb", "ans1_Shifter.txt", v0x7ffdf41891d0 {0 0 0};
    %delay 50000, 0;
    %vpi_call 2 58 "$display", "Correctness = %0d/%0d \012", v0x7ffdf41896f0_0, 32'sb00000000000000000000000000001000 {0 0 0};
    %vpi_call 2 59 "$finish" {0 0 0};
    %end;
    .thread T_2;
    .scope S_0x7ffdf36f8150;
T_3 ;
    %delay 5000, 0;
    %load/vec4 v0x7ffdf4188c20_0;
    %inv;
    %store/vec4 v0x7ffdf4188c20_0, 0, 1;
    %jmp T_3;
    .thread T_3;
    .scope S_0x7ffdf36f8150;
T_4 ;
    %wait E_0x7ffdf36f7390;
    %ix/getv/s 4, v0x7ffdf4188d00_0;
    %load/vec4a v0x7ffdf4189140, 4;
    %store/vec4 v0x7ffdf4188ac0_0, 0, 34;
    %ix/getv/s 4, v0x7ffdf4188d00_0;
    %load/vec4a v0x7ffdf4189260, 4;
    %store/vec4 v0x7ffdf4188db0_0, 0, 68;
    %ix/getv/s 4, v0x7ffdf4188d00_0;
    %load/vec4a v0x7ffdf41891d0, 4;
    %store/vec4 v0x7ffdf4188b70_0, 0, 34;
    %ix/getv/s 4, v0x7ffdf4188d00_0;
    %load/vec4a v0x7ffdf4189300, 4;
    %store/vec4 v0x7ffdf4188e60_0, 0, 68;
    %load/vec4 v0x7ffdf4188d00_0;
    %addi 1, 0, 32;
    %store/vec4 v0x7ffdf4188d00_0, 0, 32;
    %delay 1000, 0;
    %load/vec4 v0x7ffdf4188ac0_0;
    %parti/s 1, 33, 7;
    %load/vec4 v0x7ffdf4189440_0;
    %cmp/e;
    %flag_get/vec4 4;
    %load/vec4 v0x7ffdf4188ac0_0;
    %parti/s 1, 32, 7;
    %load/vec4 v0x7ffdf41898c0_0;
    %cmp/e;
    %flag_get/vec4 4;
    %and;
    %load/vec4 v0x7ffdf4188ac0_0;
    %parti/s 32, 0, 2;
    %load/vec4 v0x7ffdf41895d0_0;
    %cmp/e;
    %flag_get/vec4 4;
    %and;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.0, 8;
    %load/vec4 v0x7ffdf41896f0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x7ffdf41896f0_0, 0, 32;
    %jmp T_4.1;
T_4.0 ;
    %vpi_call 2 79 "$display", "ALU test data #%0d is wrong\012", v0x7ffdf4188d00_0 {0 0 0};
T_4.1 ;
    %delay 1000, 0;
    %load/vec4 v0x7ffdf4188b70_0;
    %parti/s 32, 0, 2;
    %load/vec4 v0x7ffdf4189660_0;
    %cmp/e;
    %jmp/0xz  T_4.2, 4;
    %load/vec4 v0x7ffdf41896f0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x7ffdf41896f0_0, 0, 32;
    %jmp T_4.3;
T_4.2 ;
    %vpi_call 2 88 "$display", "Shifter test data #%0d is wrong\012", v0x7ffdf4188d00_0 {0 0 0};
T_4.3 ;
    %jmp T_4;
    .thread T_4;
# The file index is used to find the file name in the following table.
:file_names 7;
    "N/A";
    "<interactive>";
    "Testbench.v";
    "./ALU.v";
    "./ALU_1bit.v";
    "./Full_adder.v";
    "./Shifter.v";
